[[source]]
url = "https://pypi.org/simple"
verify_ssl = true
name = "pypi"

[dev-packages]
mypy-protobuf = "*"
"autopep8" = "*"
mock = "*"
pytest = "*"
# TODO(#23317): pytest-xdist changed its parallelization method after this result
# This resulted in our ModuleCollectorMixin encountering a condition where some modules were collected twice
pytest-xdist = "< 3.0"
pytest-cov = "*"
mypy = "*"
bandit = "*"
coveralls = "*"
# This should always be pinned to the latest version officially supported by Dataflow: https://cloud.google.com/dataflow/docs/support/sdk-version-support-status#python
# If this version is bumped then the beam version in recidiviz/pipelines/Dockerfile.pipelines must be as well.
apache-beam = { extras = ["gcp", "test"], version = "==2.58.1" }
debugpy = "*"
fakeredis = "*"
freezegun = "*"
ipdb = "*"
jupyter = "*"
orjson = "*"
pytest-alembic = "*"
pipenv = "*"
parameterized = "*"
google-api-python-client = "*"
google-auth-httplib2 = "*"
google-auth-oauthlib = "*"
gspread = "*"
# Note: Update the `black` version in `.pre-commit-config.yaml` whenever this is updated.
# If we remove the restriction, then add `pre-commit autoupdate` to the Pipenv Github action to keep them in sync.
black = { extras = ["jupyter"], version = "==22.3.0" }
pre-commit = "*"
proto-plus = "*"
pygtrie = "*"
rope = "*"
"ruamel.yaml" = "*"
tabula-py = "*"
types-beautifulsoup4 = "*"
types-cachetools = "*"
types-dateparser = "*"
types-freezegun = "*"
types-html5lib = "*"
types-httplib2 = "*"
types-itsdangerous = "*"
types-jsonschema = "*"
types-mock = "*"
types-paramiko = "*"
types-protobuf = "*"
types-psycopg2 = "*"
types-python-dateutil = "*"
types-pytz = "*"
types-redis = "*"
types-requests = "*"
types-PyYAML = "*"
msal = "*"
types-pysftp = "*"
Faker = "*"
# TODO(https://github.com/getsentry/responses/issues/556): Unpin this version once the
#  responses package ships a version that doesn't break mypy.
responses = "==0.20.0"
shellcheck-py = "*"
# We do not rely on appnope directly, but we have to include it here because
# otherwise it will be dropped from the lock file since we do our locking on a Linux 
# machine and appnope is Mac specific.
# TODO(#24261): Remove pin after pipenv sync issue with appnope=* is fixed
appnope = { version = "0.1.3", markers = "sys_platform == 'darwin'" }
# the following packages are ported over from the recidiviz-research pipfile and
# imported in at least one file in that repo and do *not* exist elsewhere here
censusdata = "*"
censusgeocode = "*"
Cycler = "*"
fuzzywuzzy = "*"
geopandas = "*"
geopy = "*"
h2o = "*"
jupyter-client = "*"
jupyter-console = "*"
jupyter-contrib-nbextensions = "*"
jupyter-core = "*"
jupyterlab = "*"
jupyter-nbextensions-configurator = "*"
ipython = "*"
lifelines = "*"
linearmodels = "*"
looker-sdk = "*"
nbautoexport = "*"
# TODO(#23543): unpin notebook version when child packages (e.g. 
# jupyter-contrib-nbextensions) become compatible with Notebook 7
notebook = "==6.4.12"
pandasql = "*"
pgeocode = "*"
plotly = "*"
plotnine = "*"
scikit-learn = "*"
sentry-cli = "*"
shapely = "<2.0.0"
SyntheticControlMethods = "*"
tabulate = "*"
ydata-profiling = "*"
# end recidiviz-research dependencies
# TODO(#21447) Unpin urllib3 when worker signal 11 failure is fixed.
urllib3 = "==1.26.15"
docker = "*"
docker-stubs = "*"
types-tabulate = "*"
types-openpyxl = "*"

[packages]
annotated-types="*"
callee = "*"
"html5lib" = "*"
# TODO(#30733): Remove the <2.0.0 pin
numpy = "<2.0.0"
us = "*"
dateparser = "*"
# TODO(#19995): Remove the <2.0.0 pin
pandas = "<2.0.0"
more-itertools = "*"
lxml = "*"
# TODO(open-telemetry/opentelemetry-python#3959): Unpin opentelemetry when cost increase is fixed.
opentelemetry-api = "==1.22.0"
opentelemetry-sdk = "*"
opentelemetry-exporter-gcp-monitoring = "*"
opentelemetry-exporter-gcp-trace = "*"
opentelemetry-resourcedetector-gcp = "*"
opentelemetry-instrumentation-flask = "*"
opentelemetry-instrumentation-grpc = "*"
opentelemetry-instrumentation-redis = "*"
opentelemetry-instrumentation-requests = "*"
opentelemetry-instrumentation-sqlalchemy = ">=0.43b0"
opentelemetry-semantic-conventions = ">=0.43b0"
opentelemetry-propagator-gcp = "*"
# TODO(#9157): Unpin alembic -- blocked by sqlalchemy/alembic#900 and sqlalchemy/alembic#903
alembic = "==1.6.5"
# TODO(#18145): Remove the <2.0.0 pin
# if this version is bumped or changed, the sqlalchmey version in
# recidiviz/pipelines/dataflow_flex_setup.py must be changed as well.
sqlalchemy = ">=1.4.25, <2.0.0"
flask = ">=2.0.0"
Flask-Limiter = "*"
Flask-SQLAlchemy-Session = "*"
Flask-WTF = "*"
flask-smorest = "*"
iteration-utilities = "*"
"pypdf2" = "*"
pyyaml = "*"
pyjwt = "*"
cssselect = "*"
grpcio = "*"
gunicorn = "*"
gevent = ">=20.5.1"
google-api-core = "*"
google-cloud-core = "*"
google-cloud-bigquery = "*"
google-cloud-bigquery-datatransfer = "*"
google-cloud-bigquery-storage = "*"
google-cloud-build = "*"
google-cloud-dataflow-client = "*"
google-cloud-datastore = "*"
google-cloud-discoveryengine = "*"
google-cloud-firestore = "*"
google-cloud-logging = "*"
google-cloud-monitoring = "*"
google-cloud-orchestration-airflow = "*"
google-cloud-tasks = "*"
google-cloud-pubsub = "*"
google-cloud-secret-manager = "*"
# Version must be at least 2.18.2 to mitigate https://github.com/apache/beam/issues/32169 for apache-beam versions
# 2.53.0 - 2.58.*
google-cloud-storage = ">=2.18.2"
google-cloud-trace = "*"
wrapt = "*"
attrs = "*"
# TODO(docker/docker-py#3256): Unpin when docker-py fixes issue
requests = "==2.31.0"
pytz = "*"
# TODO(#9732): Upgrade to 4.0 introduces dateparsing errors to ingest controller tests
tzlocal = "<4.0"
python-dateutil = "*"
# If the protobuf version changes be sure to update the pinned version in dataflow_setup.py
protobuf = "*"
"psycopg2" = "*"
cryptography = "*"
google-api-python-client = "*"
google-auth = "*"
deepdiff = "*"
"mmh3" = "*"
yq = "*"
oauth2client = "*" #TODO(#2922): Remove deprecated oauth2client dependency
progress = "*"
pandas-gbq = "*"
guppy3 = "*"
sendgrid = "*"
zope = { event = "*" }
psutil = "*"
psycogreen = "*"
marshmallow = "*"
marshmallow_enum = "*"
cattrs = "*"
# If the dill version changes be sure to update the pinned version in dataflow_setup.py
dill = "==0.3.1.1"
matplotlib = "*"
scipy = "*"
seaborn = "*"
statsmodels = "*"
openpyxl = "*"
analytics-python = "*"
astroid = "*"
redis = "*"
pyarrow = "*"
auth0-python = "*"
sentry-sdk = { extras = ["flask"], version = "*" }
blinker = "*"
beautifulsoup4 = "*"
paramiko = "*"
tqdm = "*"
types-tqdm = "*"
linearmodels = "*"
jsonschema = "*"
proto-plus = "*"
nltk = "*"
thefuzz = "*"
# Needed for thefuzz to avoid "Using slow pure-python SequenceMatcher" warning
python-Levenshtein = "*"
ratelimit = "*"
ratelimit-stubs = "*"
pysftp = "*"
nbconvert = ">=6.5.1"
PyGithub = "*"
xlsxwriter = "*"
pytablewriter = "*"
# TODO(#25939): Unpin once Jupyter installation issue has been fixed
traitlets = "5.9.0"
twilio = "*"
twilio-stubs = "*"
# TODO(#21447) Unpin urllib3 when worker signal 11 failure is fixed.
urllib3 = "==1.26.15"
xlrd = "*"
google-cloud-run = "*"
snapshottest = "*"
cachetools = "*"
functions-framework = "*"
cloudevents = "*"
quart = "*"
hypercorn = "*"
vertexai = "*"
asyncpg ="*"
pygit2 = "*"
matplotx = "*"
sqlglot = "==23.11.2"

[requires]
# If you change this, please update https://github.com/Recidiviz/recidiviz-research at the same time!
python_version = "3.11"

[scripts]
# Run via `pipenv run <name>`
pylint = "./recidiviz/tools/lint/run_pylint.sh"
docker-build = "docker build . -f Dockerfile --target recidiviz-app -t us-docker.pkg.dev/recidiviz-staging/appengine/default:latest --platform=linux/amd64"
docker-build-dev = "docker build . -f Dockerfile --target recidiviz-dev -t us-docker.pkg.dev/recidiviz-staging/appengine/default:latest --platform=linux/amd64"
docker-build-base = "docker build . -f Dockerfile.recidiviz-base -t us-docker.pkg.dev/recidiviz-staging/recidiviz-base/default:latest --platform=linux/amd64"
cloudsql = "./recidiviz/tools/postgres/access_cloudsql_instance.sh"
docker-admin = "docker compose -f docker-compose.yaml -f docker-compose.admin-panel.yaml up"
# Specific to Justice Counts team
# For `docker-build-jc` commands, append the build arg FRONTEND_URL at the end
# e.g. `docker-build-jc --build-arg FRONTEND_URL=https://github.com/Recidiviz/justice-counts/archive/main.tar.gz`
docker-build-jc = "docker build . -f Dockerfile.justice-counts -t us-central1-docker.pkg.dev/justice-counts-staging/publisher-and-dashboard-images/main:latest --platform=linux/amd64"
docker-jc = "docker compose -f docker-compose.yaml -f docker-compose.justice-counts.yaml up"
fixtures-jc = "docker exec pulse-data-control_panel_backend-1 pipenv run python -m recidiviz.tools.justice_counts.control_panel.load_fixtures"
migrate-jc = "python -m recidiviz.tools.migrations.autogenerate_migration --database JUSTICE_COUNTS --message "
docker-build-prototypes = "docker build . -f Dockerfile.prototypes -t us-central1-docker.pkg.dev/recidiviz-staging/prototypes/main:latest --platform=linux/amd64"
docker-prototypes = "docker compose -f docker-compose.yaml -f docker-compose.prototypes.yaml up"
