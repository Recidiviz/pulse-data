// source: recidiviz/admin_panel/models/validation.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.recidiviz.admin_panel.models.ExistenceValidationResultDetails', null, global);
goog.exportSymbol('proto.recidiviz.admin_panel.models.ResultRow', null, global);
goog.exportSymbol('proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails', null, global);
goog.exportSymbol('proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError', null, global);
goog.exportSymbol('proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails', null, global);
goog.exportSymbol('proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts', null, global);
goog.exportSymbol('proto.recidiviz.admin_panel.models.ValidationStatusRecord', null, global);
goog.exportSymbol('proto.recidiviz.admin_panel.models.ValidationStatusRecord.ResultDetailsCase', null, global);
goog.exportSymbol('proto.recidiviz.admin_panel.models.ValidationStatusRecord.ValidationCategory', null, global);
goog.exportSymbol('proto.recidiviz.admin_panel.models.ValidationStatusRecord.ValidationResultStatus', null, global);
goog.exportSymbol('proto.recidiviz.admin_panel.models.ValidationStatusRecords', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.recidiviz.admin_panel.models.ResultRow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.recidiviz.admin_panel.models.ResultRow.repeatedFields_, null);
};
goog.inherits(proto.recidiviz.admin_panel.models.ResultRow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.recidiviz.admin_panel.models.ResultRow.displayName = 'proto.recidiviz.admin_panel.models.ResultRow';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.recidiviz.admin_panel.models.ExistenceValidationResultDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.recidiviz.admin_panel.models.ExistenceValidationResultDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.recidiviz.admin_panel.models.ExistenceValidationResultDetails.displayName = 'proto.recidiviz.admin_panel.models.ExistenceValidationResultDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.repeatedFields_, null);
};
goog.inherits(proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.displayName = 'proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError.displayName = 'proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.repeatedFields_, null);
};
goog.inherits(proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.displayName = 'proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts.repeatedFields_, null);
};
goog.inherits(proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts.displayName = 'proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.recidiviz.admin_panel.models.ValidationStatusRecord.oneofGroups_);
};
goog.inherits(proto.recidiviz.admin_panel.models.ValidationStatusRecord, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.recidiviz.admin_panel.models.ValidationStatusRecord.displayName = 'proto.recidiviz.admin_panel.models.ValidationStatusRecord';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecords = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.recidiviz.admin_panel.models.ValidationStatusRecords.repeatedFields_, null);
};
goog.inherits(proto.recidiviz.admin_panel.models.ValidationStatusRecords, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.recidiviz.admin_panel.models.ValidationStatusRecords.displayName = 'proto.recidiviz.admin_panel.models.ValidationStatusRecords';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.recidiviz.admin_panel.models.ResultRow.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.recidiviz.admin_panel.models.ResultRow.prototype.toObject = function(opt_includeInstance) {
  return proto.recidiviz.admin_panel.models.ResultRow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.recidiviz.admin_panel.models.ResultRow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.recidiviz.admin_panel.models.ResultRow.toObject = function(includeInstance, msg) {
  var f, obj = {
    labelValuesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    comparisonValuesList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.recidiviz.admin_panel.models.ResultRow}
 */
proto.recidiviz.admin_panel.models.ResultRow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.recidiviz.admin_panel.models.ResultRow;
  return proto.recidiviz.admin_panel.models.ResultRow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.recidiviz.admin_panel.models.ResultRow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.recidiviz.admin_panel.models.ResultRow}
 */
proto.recidiviz.admin_panel.models.ResultRow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addLabelValues(value);
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addComparisonValues(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.recidiviz.admin_panel.models.ResultRow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.recidiviz.admin_panel.models.ResultRow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.recidiviz.admin_panel.models.ResultRow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.recidiviz.admin_panel.models.ResultRow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabelValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getComparisonValuesList();
  if (f.length > 0) {
    writer.writeRepeatedFloat(
      2,
      f
    );
  }
};


/**
 * repeated string label_values = 1;
 * @return {!Array<string>}
 */
proto.recidiviz.admin_panel.models.ResultRow.prototype.getLabelValuesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.recidiviz.admin_panel.models.ResultRow} returns this
 */
proto.recidiviz.admin_panel.models.ResultRow.prototype.setLabelValuesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.recidiviz.admin_panel.models.ResultRow} returns this
 */
proto.recidiviz.admin_panel.models.ResultRow.prototype.addLabelValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.recidiviz.admin_panel.models.ResultRow} returns this
 */
proto.recidiviz.admin_panel.models.ResultRow.prototype.clearLabelValuesList = function() {
  return this.setLabelValuesList([]);
};


/**
 * repeated float comparison_values = 2;
 * @return {!Array<number>}
 */
proto.recidiviz.admin_panel.models.ResultRow.prototype.getComparisonValuesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.recidiviz.admin_panel.models.ResultRow} returns this
 */
proto.recidiviz.admin_panel.models.ResultRow.prototype.setComparisonValuesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.recidiviz.admin_panel.models.ResultRow} returns this
 */
proto.recidiviz.admin_panel.models.ResultRow.prototype.addComparisonValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.recidiviz.admin_panel.models.ResultRow} returns this
 */
proto.recidiviz.admin_panel.models.ResultRow.prototype.clearComparisonValuesList = function() {
  return this.setComparisonValuesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.recidiviz.admin_panel.models.ExistenceValidationResultDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.recidiviz.admin_panel.models.ExistenceValidationResultDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.recidiviz.admin_panel.models.ExistenceValidationResultDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.recidiviz.admin_panel.models.ExistenceValidationResultDetails.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.recidiviz.admin_panel.models.ExistenceValidationResultDetails}
 */
proto.recidiviz.admin_panel.models.ExistenceValidationResultDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.recidiviz.admin_panel.models.ExistenceValidationResultDetails;
  return proto.recidiviz.admin_panel.models.ExistenceValidationResultDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.recidiviz.admin_panel.models.ExistenceValidationResultDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.recidiviz.admin_panel.models.ExistenceValidationResultDetails}
 */
proto.recidiviz.admin_panel.models.ExistenceValidationResultDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.recidiviz.admin_panel.models.ExistenceValidationResultDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.recidiviz.admin_panel.models.ExistenceValidationResultDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.recidiviz.admin_panel.models.ExistenceValidationResultDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.recidiviz.admin_panel.models.ExistenceValidationResultDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    failedRowsList: jspb.Message.toObjectList(msg.getFailedRowsList(),
    proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails}
 */
proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails;
  return proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails}
 */
proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError;
      reader.readMessage(value,proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError.deserializeBinaryFromReader);
      msg.addFailedRows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFailedRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError.prototype.toObject = function(opt_includeInstance) {
  return proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError.toObject = function(includeInstance, msg) {
  var f, obj = {
    row: (f = msg.getRow()) && proto.recidiviz.admin_panel.models.ResultRow.toObject(includeInstance, f),
    error: (f = jspb.Message.getOptionalFloatingPointField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError}
 */
proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError;
  return proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError}
 */
proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.recidiviz.admin_panel.models.ResultRow;
      reader.readMessage(value,proto.recidiviz.admin_panel.models.ResultRow.deserializeBinaryFromReader);
      msg.setRow(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRow();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.recidiviz.admin_panel.models.ResultRow.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional ResultRow row = 1;
 * @return {?proto.recidiviz.admin_panel.models.ResultRow}
 */
proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError.prototype.getRow = function() {
  return /** @type{?proto.recidiviz.admin_panel.models.ResultRow} */ (
    jspb.Message.getWrapperField(this, proto.recidiviz.admin_panel.models.ResultRow, 1));
};


/**
 * @param {?proto.recidiviz.admin_panel.models.ResultRow|undefined} value
 * @return {!proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError} returns this
*/
proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError.prototype.setRow = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError} returns this
 */
proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError.prototype.clearRow = function() {
  return this.setRow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError.prototype.hasRow = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float error = 2;
 * @return {number}
 */
proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError.prototype.getError = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError} returns this
 */
proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError.prototype.setError = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError} returns this
 */
proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError.prototype.clearError = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated RowWithError failed_rows = 1;
 * @return {!Array<!proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError>}
 */
proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.prototype.getFailedRowsList = function() {
  return /** @type{!Array<!proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError, 1));
};


/**
 * @param {!Array<!proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError>} value
 * @return {!proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails} returns this
*/
proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.prototype.setFailedRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError=} opt_value
 * @param {number=} opt_index
 * @return {!proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError}
 */
proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.prototype.addFailedRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.RowWithError, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails} returns this
 */
proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.prototype.clearFailedRowsList = function() {
  return this.setFailedRowsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    numErrorRows: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    totalNumRows: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    nonNullCountsPerColumnPerPartitionList: jspb.Message.toObjectList(msg.getNonNullCountsPerColumnPerPartitionList(),
    proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails}
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails;
  return proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails}
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumErrorRows(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalNumRows(value);
      break;
    case 3:
      var value = new proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts;
      reader.readMessage(value,proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts.deserializeBinaryFromReader);
      msg.addNonNullCountsPerColumnPerPartition(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getNonNullCountsPerColumnPerPartitionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts.prototype.toObject = function(opt_includeInstance) {
  return proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts.toObject = function(includeInstance, msg) {
  var f, obj = {
    partitionLabelsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    columnCountsMap: (f = msg.getColumnCountsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts}
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts;
  return proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts}
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addPartitionLabels(value);
      break;
    case 2:
      var value = msg.getColumnCountsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt32, null, "", 0);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPartitionLabelsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getColumnCountsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt32);
  }
};


/**
 * repeated string partition_labels = 1;
 * @return {!Array<string>}
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts.prototype.getPartitionLabelsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts} returns this
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts.prototype.setPartitionLabelsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts} returns this
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts.prototype.addPartitionLabels = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts} returns this
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts.prototype.clearPartitionLabelsList = function() {
  return this.setPartitionLabelsList([]);
};


/**
 * map<string, int32> column_counts = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,number>}
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts.prototype.getColumnCountsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,number>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts} returns this
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts.prototype.clearColumnCountsMap = function() {
  this.getColumnCountsMap().clear();
  return this;};


/**
 * optional int32 num_error_rows = 1;
 * @return {number}
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.prototype.getNumErrorRows = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails} returns this
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.prototype.setNumErrorRows = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails} returns this
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.prototype.clearNumErrorRows = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.prototype.hasNumErrorRows = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 total_num_rows = 2;
 * @return {number}
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.prototype.getTotalNumRows = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails} returns this
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.prototype.setTotalNumRows = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails} returns this
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.prototype.clearTotalNumRows = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.prototype.hasTotalNumRows = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated PartitionCounts non_null_counts_per_column_per_partition = 3;
 * @return {!Array<!proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts>}
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.prototype.getNonNullCountsPerColumnPerPartitionList = function() {
  return /** @type{!Array<!proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts, 3));
};


/**
 * @param {!Array<!proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts>} value
 * @return {!proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails} returns this
*/
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.prototype.setNonNullCountsPerColumnPerPartitionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts=} opt_value
 * @param {number=} opt_index
 * @return {!proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts}
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.prototype.addNonNullCountsPerColumnPerPartition = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.PartitionCounts, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails} returns this
 */
proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.prototype.clearNonNullCountsPerColumnPerPartitionList = function() {
  return this.setNonNullCountsPerColumnPerPartitionList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.oneofGroups_ = [[15,16,17]];

/**
 * @enum {number}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.ResultDetailsCase = {
  RESULT_DETAILS_NOT_SET: 0,
  EXISTENCE: 15,
  SAMENESS_PER_ROW: 16,
  SAMENESS_PER_VIEW: 17
};

/**
 * @return {proto.recidiviz.admin_panel.models.ValidationStatusRecord.ResultDetailsCase}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.getResultDetailsCase = function() {
  return /** @type {proto.recidiviz.admin_panel.models.ValidationStatusRecord.ResultDetailsCase} */(jspb.Message.computeOneofCase(this, proto.recidiviz.admin_panel.models.ValidationStatusRecord.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.toObject = function(opt_includeInstance) {
  return proto.recidiviz.admin_panel.models.ValidationStatusRecord.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.toObject = function(includeInstance, msg) {
  var f, obj = {
    runId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    runDatetime: (f = msg.getRunDatetime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    systemVersion: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    name: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    category: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    isPercentage: (f = jspb.Message.getBooleanField(msg, 6)) == null ? undefined : f,
    stateCode: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    didRun: (f = jspb.Message.getBooleanField(msg, 8)) == null ? undefined : f,
    hasData: (f = jspb.Message.getBooleanField(msg, 9)) == null ? undefined : f,
    devMode: (f = jspb.Message.getBooleanField(msg, 21)) == null ? undefined : f,
    hardFailureAmount: (f = jspb.Message.getOptionalFloatingPointField(msg, 10)) == null ? undefined : f,
    softFailureAmount: (f = jspb.Message.getOptionalFloatingPointField(msg, 11)) == null ? undefined : f,
    resultStatus: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    errorAmount: (f = jspb.Message.getOptionalFloatingPointField(msg, 13)) == null ? undefined : f,
    failureDescription: (f = jspb.Message.getField(msg, 14)) == null ? undefined : f,
    existence: (f = msg.getExistence()) && proto.recidiviz.admin_panel.models.ExistenceValidationResultDetails.toObject(includeInstance, f),
    samenessPerRow: (f = msg.getSamenessPerRow()) && proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.toObject(includeInstance, f),
    samenessPerView: (f = msg.getSamenessPerView()) && proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.toObject(includeInstance, f),
    lastBetterStatusRunId: (f = jspb.Message.getField(msg, 18)) == null ? undefined : f,
    lastBetterStatusRunDatetime: (f = msg.getLastBetterStatusRunDatetime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    lastBetterStatusRunResultStatus: (f = jspb.Message.getField(msg, 20)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.recidiviz.admin_panel.models.ValidationStatusRecord;
  return proto.recidiviz.admin_panel.models.ValidationStatusRecord.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRunId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setRunDatetime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemVersion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {!proto.recidiviz.admin_panel.models.ValidationStatusRecord.ValidationCategory} */ (reader.readEnum());
      msg.setCategory(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPercentage(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setStateCode(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDidRun(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasData(value);
      break;
    case 21:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDevMode(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setHardFailureAmount(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSoftFailureAmount(value);
      break;
    case 12:
      var value = /** @type {!proto.recidiviz.admin_panel.models.ValidationStatusRecord.ValidationResultStatus} */ (reader.readEnum());
      msg.setResultStatus(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setErrorAmount(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailureDescription(value);
      break;
    case 15:
      var value = new proto.recidiviz.admin_panel.models.ExistenceValidationResultDetails;
      reader.readMessage(value,proto.recidiviz.admin_panel.models.ExistenceValidationResultDetails.deserializeBinaryFromReader);
      msg.setExistence(value);
      break;
    case 16:
      var value = new proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails;
      reader.readMessage(value,proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.deserializeBinaryFromReader);
      msg.setSamenessPerRow(value);
      break;
    case 17:
      var value = new proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails;
      reader.readMessage(value,proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.deserializeBinaryFromReader);
      msg.setSamenessPerView(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastBetterStatusRunId(value);
      break;
    case 19:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastBetterStatusRunDatetime(value);
      break;
    case 20:
      var value = /** @type {!proto.recidiviz.admin_panel.models.ValidationStatusRecord.ValidationResultStatus} */ (reader.readEnum());
      msg.setLastBetterStatusRunResultStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.recidiviz.admin_panel.models.ValidationStatusRecord.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRunDatetime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {!proto.recidiviz.admin_panel.models.ValidationStatusRecord.ValidationCategory} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBool(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeBool(
      8,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeBool(
      21,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = /** @type {!proto.recidiviz.admin_panel.models.ValidationStatusRecord.ValidationResultStatus} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeEnum(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeFloat(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getExistence();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.recidiviz.admin_panel.models.ExistenceValidationResultDetails.serializeBinaryToWriter
    );
  }
  f = message.getSamenessPerRow();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails.serializeBinaryToWriter
    );
  }
  f = message.getSamenessPerView();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getLastBetterStatusRunDatetime();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.recidiviz.admin_panel.models.ValidationStatusRecord.ValidationResultStatus} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeEnum(
      20,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.ValidationCategory = {
  EXTERNAL_AGGREGATE: 0,
  EXTERNAL_INDIVIDUAL: 1,
  CONSISTENCY: 2,
  INVARIANT: 3,
  FRESHNESS: 4
};

/**
 * @enum {number}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.ValidationResultStatus = {
  SUCCESS: 0,
  FAIL_SOFT: 1,
  FAIL_HARD: 2
};

/**
 * optional string run_id = 1;
 * @return {string}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.getRunId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.setRunId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.clearRunId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.hasRunId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp run_datetime = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.getRunDatetime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
*/
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.setRunDatetime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.clearRunDatetime = function() {
  return this.setRunDatetime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.hasRunDatetime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string system_version = 3;
 * @return {string}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.getSystemVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.setSystemVersion = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.clearSystemVersion = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.hasSystemVersion = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.setName = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.clearName = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.hasName = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ValidationCategory category = 5;
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord.ValidationCategory}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.getCategory = function() {
  return /** @type {!proto.recidiviz.admin_panel.models.ValidationStatusRecord.ValidationCategory} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.recidiviz.admin_panel.models.ValidationStatusRecord.ValidationCategory} value
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.setCategory = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.clearCategory = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.hasCategory = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool is_percentage = 6;
 * @return {boolean}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.getIsPercentage = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.setIsPercentage = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.clearIsPercentage = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.hasIsPercentage = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string state_code = 7;
 * @return {string}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.getStateCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.setStateCode = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.clearStateCode = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.hasStateCode = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional bool did_run = 8;
 * @return {boolean}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.getDidRun = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.setDidRun = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.clearDidRun = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.hasDidRun = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool has_data = 9;
 * @return {boolean}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.getHasData = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.setHasData = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.clearHasData = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.hasHasData = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool dev_mode = 21;
 * @return {boolean}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.getDevMode = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 21, false));
};


/**
 * @param {boolean} value
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.setDevMode = function(value) {
  return jspb.Message.setField(this, 21, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.clearDevMode = function() {
  return jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.hasDevMode = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional float hard_failure_amount = 10;
 * @return {number}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.getHardFailureAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 10, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.setHardFailureAmount = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.clearHardFailureAmount = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.hasHardFailureAmount = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional float soft_failure_amount = 11;
 * @return {number}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.getSoftFailureAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 11, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.setSoftFailureAmount = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.clearSoftFailureAmount = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.hasSoftFailureAmount = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional ValidationResultStatus result_status = 12;
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord.ValidationResultStatus}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.getResultStatus = function() {
  return /** @type {!proto.recidiviz.admin_panel.models.ValidationStatusRecord.ValidationResultStatus} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.recidiviz.admin_panel.models.ValidationStatusRecord.ValidationResultStatus} value
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.setResultStatus = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.clearResultStatus = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.hasResultStatus = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional float error_amount = 13;
 * @return {number}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.getErrorAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.setErrorAmount = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.clearErrorAmount = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.hasErrorAmount = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string failure_description = 14;
 * @return {string}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.getFailureDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.setFailureDescription = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.clearFailureDescription = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.hasFailureDescription = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional ExistenceValidationResultDetails existence = 15;
 * @return {?proto.recidiviz.admin_panel.models.ExistenceValidationResultDetails}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.getExistence = function() {
  return /** @type{?proto.recidiviz.admin_panel.models.ExistenceValidationResultDetails} */ (
    jspb.Message.getWrapperField(this, proto.recidiviz.admin_panel.models.ExistenceValidationResultDetails, 15));
};


/**
 * @param {?proto.recidiviz.admin_panel.models.ExistenceValidationResultDetails|undefined} value
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
*/
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.setExistence = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.recidiviz.admin_panel.models.ValidationStatusRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.clearExistence = function() {
  return this.setExistence(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.hasExistence = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional SamenessPerRowValidationResultDetails sameness_per_row = 16;
 * @return {?proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.getSamenessPerRow = function() {
  return /** @type{?proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails} */ (
    jspb.Message.getWrapperField(this, proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails, 16));
};


/**
 * @param {?proto.recidiviz.admin_panel.models.SamenessPerRowValidationResultDetails|undefined} value
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
*/
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.setSamenessPerRow = function(value) {
  return jspb.Message.setOneofWrapperField(this, 16, proto.recidiviz.admin_panel.models.ValidationStatusRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.clearSamenessPerRow = function() {
  return this.setSamenessPerRow(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.hasSamenessPerRow = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional SamenessPerViewValidationResultDetails sameness_per_view = 17;
 * @return {?proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.getSamenessPerView = function() {
  return /** @type{?proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails} */ (
    jspb.Message.getWrapperField(this, proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails, 17));
};


/**
 * @param {?proto.recidiviz.admin_panel.models.SamenessPerViewValidationResultDetails|undefined} value
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
*/
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.setSamenessPerView = function(value) {
  return jspb.Message.setOneofWrapperField(this, 17, proto.recidiviz.admin_panel.models.ValidationStatusRecord.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.clearSamenessPerView = function() {
  return this.setSamenessPerView(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.hasSamenessPerView = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional string last_better_status_run_id = 18;
 * @return {string}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.getLastBetterStatusRunId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.setLastBetterStatusRunId = function(value) {
  return jspb.Message.setField(this, 18, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.clearLastBetterStatusRunId = function() {
  return jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.hasLastBetterStatusRunId = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional google.protobuf.Timestamp last_better_status_run_datetime = 19;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.getLastBetterStatusRunDatetime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 19));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
*/
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.setLastBetterStatusRunDatetime = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.clearLastBetterStatusRunDatetime = function() {
  return this.setLastBetterStatusRunDatetime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.hasLastBetterStatusRunDatetime = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional ValidationResultStatus last_better_status_run_result_status = 20;
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord.ValidationResultStatus}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.getLastBetterStatusRunResultStatus = function() {
  return /** @type {!proto.recidiviz.admin_panel.models.ValidationStatusRecord.ValidationResultStatus} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {!proto.recidiviz.admin_panel.models.ValidationStatusRecord.ValidationResultStatus} value
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.setLastBetterStatusRunResultStatus = function(value) {
  return jspb.Message.setField(this, 20, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.clearLastBetterStatusRunResultStatus = function() {
  return jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecord.prototype.hasLastBetterStatusRunResultStatus = function() {
  return jspb.Message.getField(this, 20) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecords.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecords.prototype.toObject = function(opt_includeInstance) {
  return proto.recidiviz.admin_panel.models.ValidationStatusRecords.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.recidiviz.admin_panel.models.ValidationStatusRecords} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecords.toObject = function(includeInstance, msg) {
  var f, obj = {
    recordsList: jspb.Message.toObjectList(msg.getRecordsList(),
    proto.recidiviz.admin_panel.models.ValidationStatusRecord.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecords}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecords.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.recidiviz.admin_panel.models.ValidationStatusRecords;
  return proto.recidiviz.admin_panel.models.ValidationStatusRecords.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.recidiviz.admin_panel.models.ValidationStatusRecords} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecords}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecords.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.recidiviz.admin_panel.models.ValidationStatusRecord;
      reader.readMessage(value,proto.recidiviz.admin_panel.models.ValidationStatusRecord.deserializeBinaryFromReader);
      msg.addRecords(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecords.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.recidiviz.admin_panel.models.ValidationStatusRecords.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.recidiviz.admin_panel.models.ValidationStatusRecords} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecords.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecordsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.recidiviz.admin_panel.models.ValidationStatusRecord.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ValidationStatusRecord records = 1;
 * @return {!Array<!proto.recidiviz.admin_panel.models.ValidationStatusRecord>}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecords.prototype.getRecordsList = function() {
  return /** @type{!Array<!proto.recidiviz.admin_panel.models.ValidationStatusRecord>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.recidiviz.admin_panel.models.ValidationStatusRecord, 1));
};


/**
 * @param {!Array<!proto.recidiviz.admin_panel.models.ValidationStatusRecord>} value
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecords} returns this
*/
proto.recidiviz.admin_panel.models.ValidationStatusRecords.prototype.setRecordsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.recidiviz.admin_panel.models.ValidationStatusRecord=} opt_value
 * @param {number=} opt_index
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecord}
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecords.prototype.addRecords = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.recidiviz.admin_panel.models.ValidationStatusRecord, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.recidiviz.admin_panel.models.ValidationStatusRecords} returns this
 */
proto.recidiviz.admin_panel.models.ValidationStatusRecords.prototype.clearRecordsList = function() {
  return this.setRecordsList([]);
};


goog.object.extend(exports, proto.recidiviz.admin_panel.models);
