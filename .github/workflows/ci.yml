name: CI Tests

on: push

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        if: ${{ github.ref != 'refs/heads/master' }}
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
        with:
          # Need sufficient depth in order for merge-base to work
          fetch-depth: 0
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8.8"
      - name: Install pipenv
        run: pip install pipenv
      - name: Pipenv caching
        uses: actions/cache@v2
        id: pipenv-caching
        with:
          path: ~/.local/share/virtualenvs/
          key: pipenv-cache-v2-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            pipenv-cache-v2-${{ hashFiles('**/Pipfile.lock') }}
            pipenv-cache-v2-
      - name: Sync pipenv
        if: steps.pipenv-caching.outputs.cache-hit != 'true'
        run: pipenv sync --dev
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.10
      - name: Validate terraform
        run: |
          terraform init -backend=false ./recidiviz/tools/deploy/terraform
          terraform validate ./recidiviz/tools/deploy/terraform
      - name: Fetch origin/master
        # Needed for origin/master object lookups to succeed.
        run: git fetch origin master
      - name: Set merge_base
        run: |
          echo "merge_base=$(git merge-base origin/master HEAD)" >> $GITHUB_ENV
      - name: Validate source modifications
        run: |
          pipenv run python -m recidiviz.tools.validate_source_modifications \
            --commit-range ${{ env.merge_base }}...HEAD
      # TODO(#6431): pre-commit was flaky in CI, so we turned it off. It should be
      # re-enabled soon.
      # - name: pre-commit
      #   # If pre-commit proves useful, we can remove redundant checks (e.g. black).
      #   uses: pre-commit/action@v2.0.0
      #   # This can also create a new commit with changes, but it merges in latest
      #   # master and can't re-trigger CI, so we don't do so at this time.
      #   with:
      #     # Pass extra_args to only run on changed files. The default is '--all-files'.
      #     # TODO(#6234): Remove once PA files can be generated again.
      #     extra_args: --from-ref ${{ env.merge_base }} --to-ref HEAD
      - name: Check pipenv is locked
        run: pipenv run python -m recidiviz.tools.is_pipenv_locked
      - name: Mypy check
        run: pipenv run mypy recidiviz
      - name: Pylint
        run: pipenv run ./recidiviz/tools/travis/run_pylint.sh
      - name: Black
        run: pipenv run black . --check
      - name: Validate source visibility
        run: pipenv run python -m recidiviz.tools.validate_source_visibility
      - name: Yarn caching
        uses: actions/cache@v2
        id: yarn-caching
        with:
          path: "**/node_modules"
          key: yarn-v2-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-v2-${{ hashFiles('**/yarn.lock') }}
            yarn-v2-
            yarn-
      - name: Yarn install (admin panel)
        if: steps.yarn-caching.outputs.cache-hit != 'true'
        working-directory: ./frontends/admin-panel/
        run: yarn install --frozen-lockfile
      - name: Yarn lint (admin panel)
        working-directory: ./frontends/admin-panel/
        run: yarn lint
      - name: Yarn install (case triage)
        if: steps.yarn-caching.outputs.cache-hit != 'true'
        working-directory: ./frontends/case-triage/
        run: yarn install --frozen-lockfile
      - name: Yarn lint (case triage)
        working-directory: ./frontends/case-triage/
        run: yarn lint
      - name: Yarn test (case triage)
        working-directory: ./frontends/case-triage/
        run: yarn test

  unit-tests:
    name: Base unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        if: ${{ github.ref != 'refs/heads/master' }}
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8.8"
      - name: Install pipenv
        run: pip install pipenv
      - name: Pipenv caching
        uses: actions/cache@v2
        id: pipenv-caching
        with:
          path: ~/.local/share/virtualenvs/
          key: pipenv-cache-v2-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            pipenv-cache-v2-${{ hashFiles('**/Pipfile.lock') }}
            pipenv-cache-v2-
      - name: Sync pipenv
        if: steps.pipenv-caching.outputs.cache-hit != 'true'
        run: pipenv sync --dev
      - name: Run unit tests in parallel
        run: pipenv run pytest recidiviz -n auto --test-set parallel

  db-tests:
    name: Database tests
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        if: ${{ github.ref != 'refs/heads/master' }}
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8.8"
      - name: Install pipenv
        run: pip install pipenv
      - name: Pipenv caching
        uses: actions/cache@v2
        id: pipenv-caching
        with:
          path: ~/.local/share/virtualenvs/
          key: pipenv-cache-v2-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            pipenv-cache-v2-${{ hashFiles('**/Pipfile.lock') }}
            pipenv-cache-v2-
      - name: Sync pipenv
        if: steps.pipenv-caching.outputs.cache-hit != 'true'
        run: pipenv sync --dev
      # Postgres caching strategy adapted from https://raymii.org/s/articles/Github_Actions_cpp_boost_cmake_speedup.html
      - name: Cache postgres
        uses: actions/cache@v2
        id: cache-postgres
        with:
          path: "~/postgres"
          key: ${{ runner.os }}-postgres-10-v2
      - name: Install postgres
        env:
          CACHE_HIT: ${{steps.cache-postgres.outputs.cache-hit}}
        run: |
          if [[ "$CACHE_HIT" == 'true' ]]; then
            sudo cp --force --recursive ~/postgres/* /
          else
            sudo apt-get update && sudo apt-get install -yq postgresql-10
            mkdir -p ~/postgres
            for dep in postgresql-10; do
                dpkg -L $dep | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/postgres/
            done
          fi
          echo "/usr/lib/postgresql/10/bin" >> $GITHUB_PATH
          sudo chown -R $USER /var/run/postgresql
      - name: Run db tests
        run: pipenv run pytest recidiviz --test-set not-parallel -m 'uses_db' --with-emulator

  emulator-tests:
    name: Emulator tests
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous runs
        if: ${{ github.ref != 'refs/heads/master' }}
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8.8"
      - name: Install pipenv
        run: pip install pipenv
      - name: Pipenv caching
        uses: actions/cache@v2
        id: pipenv-caching
        with:
          path: ~/.local/share/virtualenvs/
          key: pipenv-cache-v2-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            pipenv-cache-v2-${{ hashFiles('**/Pipfile.lock') }}
            pipenv-cache-v2-
      - name: Sync pipenv
        if: steps.pipenv-caching.outputs.cache-hit != 'true'
        run: pipenv sync --dev
      # GCP caching strategy adapted from https://raymii.org/s/articles/Github_Actions_cpp_boost_cmake_speedup.html
      - name: GCP caching
        uses: actions/cache@v2
        id: gcp-caching
        with:
          path: ~/gcp/
          key: gcloud-323.0.0
      - name: Install emulators
        env:
          CACHE_HIT: ${{steps.gcp-caching.outputs.cache-hit}}
        run: |
          if [[ "$CACHE_HIT" == 'true' ]]; then
            sudo cp --force --recursive ~/gcp/sdk/* /
            sudo cp --force --recursive ~/gcp/datastore/* /
            sudo cp --force --recursive ~/gcp/pubsub/* /
          else
            sudo apt-get update && sudo apt install -y lsb-core && \
            export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" && \
            echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && \
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add - && \
            sudo apt update -y && sudo apt-get install google-cloud-sdk -y && \
            sudo apt install google-cloud-sdk-datastore-emulator -y && \
            sudo apt install google-cloud-sdk-pubsub-emulator -y

            mkdir -p ~/gcp/sdk
            mkdir -p ~/gcp/datastore
            mkdir -p ~/gcp/pubsub
            dpkg -L google-cloud-sdk | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/gcp/sdk
            dpkg -L google-cloud-sdk-datastore-emulator | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/gcp/datastore
            dpkg -L google-cloud-sdk-pubsub-emulator | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/gcp/pubsub
          fi
      - name: Run emulator tests
        run: pipenv run pytest recidiviz --test-set not-parallel -m 'not uses_db' --with-emulator
