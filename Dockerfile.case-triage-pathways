FROM us.gcr.io/recidiviz-staging/recidiviz-base:latest

WORKDIR /app/recidiviz

# Add the rest of the application code once all dependencies are installed
COPY ./recidiviz/__init__.py .
COPY ./recidiviz/big_query/ big_query/
COPY ./recidiviz/calculator/ calculator/
COPY ./recidiviz/case_triage/ case_triage/
COPY ./recidiviz/cloud_memorystore/ cloud_memorystore/
COPY ./recidiviz/cloud_storage/ cloud_storage/
COPY ./recidiviz/common/ common/
COPY ./recidiviz/firestore/ firestore/
COPY ./recidiviz/persistence/ persistence/
COPY ./recidiviz/tools/deploy/terraform/config/ tools/deploy/terraform/config/
COPY ./recidiviz/tools/pathways/ tools/pathways/
COPY ./recidiviz/tools/utils/ tools/utils/
COPY ./recidiviz/utils/ utils/

WORKDIR /app

CMD pipenv run gunicorn -c gunicorn.conf.py --log-file=- -b :8080 recidiviz.case_triage.server:app

# This makes docker not report that our container is healthy until the flask workers are
# started and returning 200 on the `/health` endpoint. This is initially only used by
# our docker-test Github Action.
HEALTHCHECK --interval=5s --timeout=3s \
    CMD curl -f http://localhost:8080/health || exit 1

RUN rm -rf /var/lib/apt/lists/*; \
    apt-get clean;
