# Infrastructure configuration for components that will be deployed to the recidiviz-ingest-us-ne project

import:
  - ../catalogs/terraform-backend # Import Terraform backend configuration
  - ../catalogs/organization-settings # Import billing_account and organization_id `settings.context`

settings:
  context:
    project_id: recidiviz-ingest-us-ne
    state_code: US_NE

# The variables set here are automatically provided to any components used in this stack.
vars:
  project_id: "{{ .settings.context.project_id }}"

components:
  terraform:
    # Provisions the recidiviz-ingest-us-ne project
    vendor/core-project-factory:
      vars:
        name: "{{ .settings.context.project_id }}"
        org_id: "{{ .settings.context.organization_id }}"
        folder_id: "{{ .settings.context.hipaa_folder_id }}"
        billing_account: "{{ .settings.context.billing_account }}"
        # This project predates provisioning with the core-project-factory component so it may be using
        # the default service accounts for some of its resources. We normally de-privilege them, but
        # in this case, we'll keep them
        default_service_account: KEEP
        deletion_policy: PREVENT
        domain: "{{ .settings.context.organization_domain }}"
        # Grant the owner security group owner access (can be gained with go/jit)
        group_name: "s-{{ .settings.context.project_id }}-owner"
        group_role: roles/owner
        auto_create_network: true
        activate_apis:
          - run.googleapis.com # Cloud Run
          - scheduler.googleapis.com # Cloud Scheduler
          - secretmanager.googleapis.com
          - storagetransfer.googleapis.com

    # A Cloud Run job will push data to this bucket daily, then the replication rules defined for this bucket cause the data to be
    # pushed to the recidiviz-staging-direct-ingest-state-us-ne and recidiviz-123-direct-ingest-state-us-ne buckets in
    # the recidiviz-staging and recidiviz-123 projects, respectively.
    isolated-direct-ingest-bucket-with-replication:
      vars:
        project_id: "{{ .settings.context.project_id }}"
        region: us-central1
        state_code: "{{ .settings.context.state_code }}"

    # This is the service account with permissions
    direct-ingest-gcs-service-account:
      vars:
        project_id: "{{ .settings.context.project_id }}"
        state_code: "{{ .settings.context.state_code }}"
        ingest_bucket_name: !terraform.output isolated-direct-ingest-bucket-with-replication recidiviz-ingest-us-ne bucket_name

    # Cloud Run job to export NE's SQL server tables to the isolated-direct-ingest-bucket-with-replication bucket
    us-ne-cloudrun-sql-export:
      vars:
        project_id: "{{ .settings.context.project_id }}"
        region: us-central1
        ingest_bucket_name: !terraform.output isolated-direct-ingest-bucket-with-replication recidiviz-ingest-us-ne bucket_name
        service_account_email: !terraform.output direct-ingest-gcs-service-account recidiviz-ingest-us-ne service_account_email
        # NE resources will deploy as a part of the prod deploy
        # so use docker image from the recidiviz-123 project
        registry_project_id: recidiviz-123
        vpc_network: recidiviz-ingest-us-ne-vpc
        vpc_subnetwork: recidiviz-ingest-us-ne-vpc-us-central-1
        run_schedule: "0 7 * * *" # Daily at 2am central time
