# Recidiviz - a data platform for criminal justice reform
# Copyright (C) 2025 Recidiviz, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
# =============================================================================
"""
Generates LookML files using all available LookML generators. Results are saved to the specified output directory,
or to recidiviz/tools/looker/generated by default.

Usage:
    python -m recidiviz.tools.looker.generate_all_lookml
"""

from recidiviz.common.constants.encoding import UTF_8
from recidiviz.tools.looker.constants import (
    GENERATED_LOOKML_ROOT_PATH,
    GENERATED_VERSION_FILE_PATH,
)
from recidiviz.tools.looker.script_helpers import hash_generated_directory
from recidiviz.tools.looker.top_level_generators.aggregated_metrics_lookml_generator import (
    AggregatedMetricsLookMLGenerator,
)
from recidiviz.tools.looker.top_level_generators.breadth_and_depth_lookml_generator import (
    BreadthAndDepthLookMLGenerator,
)
from recidiviz.tools.looker.top_level_generators.custom_metrics_lookml_generator import (
    CustomMetricsLookMLGenerator,
)
from recidiviz.tools.looker.top_level_generators.observations_lookml_generator import (
    ObservationsLookMLGenerator,
)
from recidiviz.tools.looker.top_level_generators.raw_data_person_details_lookml_generator import (
    RawDataPersonDetailsLookMLGenerator,
)
from recidiviz.tools.looker.top_level_generators.state_dataset_lookml_generator import (
    StateDatasetLookMLGenerator,
)

LOOKML_GENERATORS = [
    StateDatasetLookMLGenerator,
    RawDataPersonDetailsLookMLGenerator,
    ObservationsLookMLGenerator,
    BreadthAndDepthLookMLGenerator,
    CustomMetricsLookMLGenerator,
    AggregatedMetricsLookMLGenerator,
]


def main(output_dir: str) -> None:
    """Main function to generate all LookML files."""
    for generator in LOOKML_GENERATORS:
        generator.generate_lookml(output_dir=output_dir)

    version_hash = hash_generated_directory()
    with open(GENERATED_VERSION_FILE_PATH, "w", encoding=UTF_8) as version_file:
        version_file.write(f"{version_hash}\n")


if __name__ == "__main__":
    main(output_dir=GENERATED_LOOKML_ROOT_PATH)
