address:
  dataset_id: view_update_metadata
  table_id: per_view_update_stats
description: >-
  Table with one row per view that is updated via a given view update job. The `success_timestamp` can be used to trace
  each row in this view back to summary stats about the full view update in view_update_metadata.view_update_tracker.
schema:
  - name: success_timestamp
    type: TIMESTAMP
    mode: REQUIRED
    description: >-
      The timestamp when the overall view update completed. This can be used to join to the summary row for the view
      update job in view_update_metadata.view_update_tracker.
  - name: data_platform_version
    type: STRING
    mode: REQUIRED
    description: The version of the deployed code running this update (e.g. "v1.123.0-alpha.1").
  - name: dataset_id
    type: STRING
    mode: REQUIRED
    description: The dataset_id of the updated view.
  - name: table_id
    type: STRING
    mode: REQUIRED
    description: The table_id of the updated view.
  - name: was_materialized
    type: BOOLEAN
    mode: REQUIRED
    description: True if the view was materialized as part of the update.
  - name: update_runtime_sec
    type: FLOAT
    mode: REQUIRED
    description: >-
      How long (in seconds) it took to update this specific view (and materialize it, if relevant).

  # Materialization scale
  - name: materialized_table_num_rows
    type: INTEGER
    mode: NULLABLE
    description: If `was_materialized` is True, returns the number of rows in the materialized table.
  - name: materialized_table_size_bytes
    type: INTEGER
    mode: NULLABLE
    description: If `was_materialized` is True, returns the size in bytes of the materialized table.
  - name: slot_millis
    type: INTEGER
    mode: NULLABLE
    description: If `was_materialized` is True, returns the amount of slot time (in ms) used in the materialization query.
  - name: total_bytes_processed
    type: INTEGER
    mode: NULLABLE
    description: >-
      If `was_materialized` is True, returns the number of bytes processed running the materialization query. Note that for queries against tables
      with row-level permissions, this value will be null. See docs for more information on this value:
      https://cloud.google.com/bigquery/docs/reference/rest/v2/Job#JobStatistics2.FIELDS.total_bytes_processed.
  - name: total_bytes_billed
    type: INTEGER
    mode: NULLABLE
    description: >-
      If `was_materialized` is True, returns the number of bytes billed running the materialization query. Note that for queries against tables
      with row-level permissions, this value will be null. See docs for more information on this value:
      https://cloud.google.com/bigquery/docs/reference/rest/v2/Job#JobStatistics2.FIELDS.total_bytes_billed.
  - name: job_id
    type: STRING
    mode: NULLABLE
    description: >-
      If `was_materialized` is True, returns the job_id of the materialization query. This can be used to join against the
      `protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobName.jobId` field in the `log_sinks.cloudaudit_googleapis_com_data_access_*`
      table to get `protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalProcessedBytes` and
      `protopayload_auditlog.servicedata_v1_bigquery.jobCompletedEvent.job.jobStatistics.totalBilledBytes` for queries against tables with row-level permissions.

  # Generic complexity
  - name: graph_depth
    type: INTEGER
    mode: REQUIRED
    description: >-
      How deep in the BQ view graph this view is. Root views (views that only query from source tables and no other 
      views) have depth 0.
  - name: num_ancestor_views
    type: INTEGER
    mode: REQUIRED
    description: >-
      The number of distinct views that feed into this view. Counts *all* ancestor views, not just direct parents.
  - name: parent_addresses
    type: STRING
    mode: REPEATED
    description: >-
      The list of distinct view or table addresses (in 'dataset_id.table_id' format) that this view references in its
      query.
  - name: complexity_score_2025
    type: INTEGER
    mode: REQUIRED
    description: >-
      The query complexity score for this view, defined using our frozen 2025 definition of complexity.
  - name: composite_complexity_score_2025
    type: INTEGER
    mode: REQUIRED
    description: >-
      The query complexity score for this view added to all complexity scores for views that feed into this view, 
      defined using our frozen 2025 definition of complexity.
  - name: post_infra_library_composite_complexity_score_2025
    type: INTEGER
    mode: REQUIRED
    description: >-
      The query complexity score for this view added to all complexity scores for views that feed into this view, 
      defined using our 2025 definition of complexity. All views in the following datasets are assigned a composite 
      complexity score of 0: normalized_state, sentence_sessions. Select views in sessions and reference_views datasets
      are also designated "library" status if they provide a meaningful, state- and product-agnostic abstraction on top 
      of ingested data (see recidiviz/view_registry/infra_library.py). This field essentially tells us how much 
      complexity is added outside of the abstractions provided by core Doppler/DSI-managed libraries.

  # State-specific logic
  - name: has_state_specific_logic
    type: BOOLEAN
    mode: REQUIRED
    description: >-
      True if this view contains state-specific logic (i.e. it references an explicit state code literal like “US_XX” 
      or it references a state-specific table).
  - name: states_referenced
    type: STRING
    mode: REPEATED
    description: >-
      States referenced in this view state-specific logic (i.e. it references an explicit state code literal like 
      “US_XX” or it references a state-specific table).
  - name: state_code_specific_to_view
    type: STRING
    mode: NULLABLE
    description: If this view is a state-specific table itself, provides the state_code associated with this table.
  - name: referenced_raw_data_tables
    type: STRING
    mode: REPEATED
    description: >-
      The list of distinct state-specific raw data table (or latest view) addresses (in 'dataset_id.table_id' format) 
      that this view references in its query. This is a subset of the values in the `parent_addresses` column.

clustering_fields: null
