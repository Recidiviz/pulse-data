# Stubs for entity_enum (Python 3.7)
# This is required to avoid a circular dependency between EntityEnum and
# EnumOverrides. Regenerate this file using stubgen when the EntityEnum API
# changes. You may need to manually set the metaclass of EntityEnum.
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from enum import Enum, EnumMeta
from typing import Any, Optional

from recidiviz.common.constants.enum_overrides import EnumOverrides

m_enum_errors: Any
enum_errors_view: Any

class EnumParsingError(Exception):
    entity_type: Any = ...
    def __init__(self, cls: type, string_to_parse: str): ...

class EntityEnumMeta(EnumMeta):
    def parse(cls: Any, label: str, enum_overrides: EnumOverrides) -> Optional[EntityEnum]: ...
    def can_parse(cls: Any, label: str, enum_overrides: EnumOverrides) -> bool: ...
    def find_in_string(cls: Any, text: Optional[str]) -> Optional[EntityEnum]: ...
    def parse_from_canonical_string(cls: EnumMeta, label: Optional[str]) -> Optional[EntityEnum]: ...

class EntityEnum(Enum, metaclass=EntityEnumMeta): ...
