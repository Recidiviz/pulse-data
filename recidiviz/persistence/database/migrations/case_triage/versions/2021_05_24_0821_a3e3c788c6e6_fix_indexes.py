# pylint: skip-file
"""fix_indexes

Revision ID: a3e3c788c6e6
Revises: c44423315d9f
Create Date: 2021-05-24 08:21:17.396266

"""
from typing import List

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "a3e3c788c6e6"
down_revision = "c44423315d9f"
branch_labels = None
depends_on = None


def _create_index_if_doesnt_exist(
    index_name: str, table_name: str, columns: List[str], unique: bool = False
) -> None:
    # Index check adopted from https://stackoverflow.com/questions/43994229/create-a-db-index-if-it-doesnt-exist
    connection = op.get_bind()
    result = connection.execute(
        f"SELECT exists(SELECT 1 from pg_indexes where indexname = '{index_name}') as ix_exists;"
    ).first()
    if not result.ix_exists:
        op.create_index(op.f(index_name), table_name, columns, unique=unique)


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    _create_index_if_doesnt_exist(
        "ix_etl_clients_person_external_id",
        "etl_clients",
        ["person_external_id"],
        unique=False,
    )
    _create_index_if_doesnt_exist(
        "ix_etl_clients_state_code", "etl_clients", ["state_code"], unique=False
    )
    _create_index_if_doesnt_exist(
        "ix_etl_clients_supervising_officer_external_id",
        "etl_clients",
        ["supervising_officer_external_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_etl_clients_supervising_officer_external_id"), table_name="etl_clients"
    )
    op.drop_index(op.f("ix_etl_clients_state_code"), table_name="etl_clients")
    op.drop_index(op.f("ix_etl_clients_person_external_id"), table_name="etl_clients")
    # ### end Alembic commands ###
