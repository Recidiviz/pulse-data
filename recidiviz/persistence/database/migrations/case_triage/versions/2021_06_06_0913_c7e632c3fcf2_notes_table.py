# pylint: skip-file
"""notes_table

Revision ID: c7e632c3fcf2
Revises: da8569b9d545
Create Date: 2021-06-06 09:13:08.376479

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "c7e632c3fcf2"
down_revision = "da8569b9d545"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "officer_notes",
        sa.Column("note_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("state_code", sa.String(length=255), nullable=False),
        sa.Column("officer_external_id", sa.String(length=255), nullable=False),
        sa.Column("person_external_id", sa.String(length=255), nullable=False),
        sa.Column("text", sa.Text(), nullable=False),
        sa.Column(
            "created_datetime",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_datetime",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("resolved_datetime", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("note_id"),
    )
    op.create_index(
        op.f("ix_officer_notes_officer_external_id"),
        "officer_notes",
        ["officer_external_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_officer_notes_person_external_id"),
        "officer_notes",
        ["person_external_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_officer_notes_state_code"),
        "officer_notes",
        ["state_code"],
        unique=False,
    )
    op.drop_table("client_officer_associations")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "client_officer_associations",
        sa.Column(
            "client_officer_association_id",
            postgresql.UUID(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "state_code", sa.VARCHAR(length=255), autoincrement=False, nullable=False
        ),
        sa.Column(
            "supervising_officer_external_id",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "person_external_id",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "notes",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.PrimaryKeyConstraint(
            "client_officer_association_id", name="client_officer_associations_pkey"
        ),
        sa.UniqueConstraint(
            "state_code",
            "person_external_id",
            "supervising_officer_external_id",
            name="unique_person_officer_pair",
        ),
    )
    op.create_index(
        "ix_client_officer_associations_supervising_officer_external_id",
        "client_officer_associations",
        ["supervising_officer_external_id"],
        unique=False,
    )
    op.create_index(
        "ix_client_officer_associations_state_code",
        "client_officer_associations",
        ["state_code"],
        unique=False,
    )
    op.create_index(
        "ix_client_officer_associations_person_external_id",
        "client_officer_associations",
        ["person_external_id"],
        unique=False,
    )
    op.drop_table("officer_notes")
    # ### end Alembic commands ###
