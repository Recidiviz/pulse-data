# pylint: skip-file
"""convert configuration objects to arrays

Revision ID: e1fbccd5c951
Revises: 9e4e5447eccf
Create Date: 2024-11-18 09:32:09.791128

"""
from alembic import op

# revision identifiers, used by Alembic.
revision = "e1fbccd5c951"
down_revision = "9e4e5447eccf"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("opportunity_configuration", "denial_reasons", server_default="[]")
    op.alter_column(
        "opportunity_configuration", "eligible_criteria_copy", server_default="[]"
    )
    op.alter_column(
        "opportunity_configuration", "ineligible_criteria_copy", server_default="[]"
    )
    op.execute(
        """
        UPDATE opportunity_configuration
        SET denial_reasons=(
            SELECT COALESCE(json_agg(json_build_object('key',key, 'text',value)),'[]')
            FROM LATERAL json_each(denial_reasons)
        ),
        eligible_criteria_copy=(
            SELECT COALESCE(json_agg(json_build_object(
                'key', key,
                'text', value::json->'text',
                'tooltip', value::json->'tooltip'
            )),'[]')
            FROM LATERAL json_each(eligible_criteria_copy)
        ),
        ineligible_criteria_copy=(
            SELECT COALESCE(json_agg(json_build_object(
                'key', key,
                'text', value::json->'text',
                'tooltip', value::json->'tooltip'
            )),'[]')
            FROM LATERAL json_each(ineligible_criteria_copy)
        )
        """
    )
    op.execute(
        """
        UPDATE opportunity_configuration
        SET tab_groups=(
            SELECT json_agg(json_build_object('key',key, 'tabs',value))
            FROM LATERAL json_each(tab_groups)
        )
        WHERE json_typeof(tab_groups) = 'object'
        """
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("opportunity_configuration", "denial_reasons", server_default="{}")
    op.alter_column(
        "opportunity_configuration", "eligible_criteria_copy", server_default="{}"
    )
    op.alter_column(
        "opportunity_configuration", "ineligible_criteria_copy", server_default="{}"
    )
    op.execute(
        """
        UPDATE opportunity_configuration
        SET denial_reasons=(
            SELECT COALESCE(JSON_OBJECT_AGG(value::json->>'key',value::json->>'text'), '{}')
            FROM LATERAL json_array_elements(denial_reasons)
        ),
        eligible_criteria_copy=(
            SELECT COALESCE(JSON_OBJECT_AGG(value::json->>'key',value), '{}')
            FROM LATERAL json_array_elements(eligible_criteria_copy)
        ),
        ineligible_criteria_copy=(
            SELECT COALESCE(JSON_OBJECT_AGG(value::json->>'key',value), '{}')
            FROM LATERAL json_array_elements(ineligible_criteria_copy)
        )
        """
    )
    op.execute(
        """
        UPDATE opportunity_configuration
        SET tab_groups=(
            SELECT JSON_OBJECT_AGG(value::json->>'key',value)
            FROM LATERAL json_array_elements(tab_groups)
        )
        WHERE json_typeof(tab_groups) = 'array'
        """
    )
    # ### end Alembic commands ###
