# pylint: skip-file
"""update_lock_ttl_to_use_seconds

Revision ID: 2a6d882eaf1c
Revises: a92c4af755cc
Create Date: 2024-04-29 19:42:55.756028

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "2a6d882eaf1c"
down_revision = "a92c4af755cc"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "all_process_actors_must_specify_ttl",
        "direct_ingest_raw_data_resource_lock",
        type_="check",
    )
    op.drop_column("direct_ingest_raw_data_resource_lock", "lock_ttl")
    op.add_column(
        "direct_ingest_raw_data_resource_lock",
        sa.Column("lock_ttl_seconds", sa.Integer(), nullable=True),
    )
    op.create_check_constraint(
        "all_process_actors_must_specify_ttl_seconds",
        "direct_ingest_raw_data_resource_lock",
        "lock_actor = 'ADHOC' OR (lock_actor = 'PROCESS' and lock_ttl_seconds IS NOT NULL)",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "all_process_actors_must_specify_ttl_seconds",
        "direct_ingest_raw_data_resource_lock",
        type_="check",
    )
    op.add_column(
        "direct_ingest_raw_data_resource_lock",
        sa.Column(
            "lock_ttl", postgresql.INTERVAL(), autoincrement=False, nullable=True
        ),
    )
    op.drop_column("direct_ingest_raw_data_resource_lock", "lock_ttl_seconds")
    op.create_check_constraint(
        "all_process_actors_must_specify_ttl",
        "direct_ingest_raw_data_resource_lock",
        "lock_actor = 'ADHOC' OR (lock_actor = 'PROCESS' and lock_ttl IS NOT NULL)",
    )
    # ### end Alembic commands ###
