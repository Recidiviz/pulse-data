# pylint: skip-file
"""add_direct_ingest_raw_gcs_big_query_file_tables

Revision ID: 1e39422d6310
Revises: 2a6d882eaf1c
Create Date: 2024-04-30 18:33:29.330787

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "1e39422d6310"
down_revision = "2a6d882eaf1c"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "direct_ingest_raw_big_query_file_metadata",
        sa.Column("file_id", sa.Integer(), nullable=False),
        sa.Column("region_code", sa.String(length=255), nullable=False),
        sa.Column(
            "raw_data_instance",
            postgresql.ENUM(
                "PRIMARY", "SECONDARY", name="direct_ingest_instance", create_type=False
            ),
            nullable=False,
        ),
        sa.Column("file_tag", sa.String(length=255), nullable=False),
        sa.Column("update_datetime", sa.DateTime(timezone=True), nullable=False),
        sa.Column("is_invalidated", sa.Boolean(), nullable=False),
        sa.Column("file_processed_time", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("file_id"),
    )
    op.create_index(
        op.f("ix_direct_ingest_raw_big_query_file_metadata_file_tag"),
        "direct_ingest_raw_big_query_file_metadata",
        ["file_tag"],
        unique=False,
    )
    op.create_index(
        op.f("ix_direct_ingest_raw_big_query_file_metadata_raw_data_instance"),
        "direct_ingest_raw_big_query_file_metadata",
        ["raw_data_instance"],
        unique=False,
    )
    op.create_index(
        op.f("ix_direct_ingest_raw_big_query_file_metadata_region_code"),
        "direct_ingest_raw_big_query_file_metadata",
        ["region_code"],
        unique=False,
    )
    op.create_table(
        "direct_ingest_raw_gcs_file_metadata",
        sa.Column("gcs_file_id", sa.Integer(), nullable=False),
        sa.Column("file_id", sa.Integer(), nullable=True),
        sa.Column("region_code", sa.String(length=255), nullable=False),
        sa.Column(
            "raw_data_instance",
            postgresql.ENUM(
                "PRIMARY", "SECONDARY", name="direct_ingest_instance", create_type=False
            ),
            nullable=False,
        ),
        sa.Column("file_tag", sa.String(length=255), nullable=False),
        sa.Column("normalized_file_name", sa.String(length=255), nullable=False),
        sa.Column("update_datetime", sa.DateTime(timezone=True), nullable=False),
        sa.Column("file_discovery_time", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["file_id"],
            ["direct_ingest_raw_big_query_file_metadata.file_id"],
            name="direct_ingest_raw_big_query_file_metadata_file_id_fkey",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.PrimaryKeyConstraint("gcs_file_id"),
    )
    op.create_index(
        op.f("ix_direct_ingest_raw_gcs_file_metadata_file_id"),
        "direct_ingest_raw_gcs_file_metadata",
        ["file_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_direct_ingest_raw_gcs_file_metadata_file_tag"),
        "direct_ingest_raw_gcs_file_metadata",
        ["file_tag"],
        unique=False,
    )
    op.create_index(
        op.f("ix_direct_ingest_raw_gcs_file_metadata_normalized_file_name"),
        "direct_ingest_raw_gcs_file_metadata",
        ["normalized_file_name"],
        unique=False,
    )
    op.create_index(
        op.f("ix_direct_ingest_raw_gcs_file_metadata_raw_data_instance"),
        "direct_ingest_raw_gcs_file_metadata",
        ["raw_data_instance"],
        unique=False,
    )
    op.create_index(
        op.f("ix_direct_ingest_raw_gcs_file_metadata_region_code"),
        "direct_ingest_raw_gcs_file_metadata",
        ["region_code"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_direct_ingest_raw_gcs_file_metadata_region_code"),
        table_name="direct_ingest_raw_gcs_file_metadata",
    )
    op.drop_index(
        op.f("ix_direct_ingest_raw_gcs_file_metadata_raw_data_instance"),
        table_name="direct_ingest_raw_gcs_file_metadata",
    )
    op.drop_index(
        op.f("ix_direct_ingest_raw_gcs_file_metadata_normalized_file_name"),
        table_name="direct_ingest_raw_gcs_file_metadata",
    )
    op.drop_index(
        op.f("ix_direct_ingest_raw_gcs_file_metadata_file_tag"),
        table_name="direct_ingest_raw_gcs_file_metadata",
    )
    op.drop_index(
        op.f("ix_direct_ingest_raw_gcs_file_metadata_file_id"),
        table_name="direct_ingest_raw_gcs_file_metadata",
    )
    op.drop_table("direct_ingest_raw_gcs_file_metadata")
    op.drop_index(
        op.f("ix_direct_ingest_raw_big_query_file_metadata_region_code"),
        table_name="direct_ingest_raw_big_query_file_metadata",
    )
    op.drop_index(
        op.f("ix_direct_ingest_raw_big_query_file_metadata_raw_data_instance"),
        table_name="direct_ingest_raw_big_query_file_metadata",
    )
    op.drop_index(
        op.f("ix_direct_ingest_raw_big_query_file_metadata_file_tag"),
        table_name="direct_ingest_raw_big_query_file_metadata",
    )
    op.drop_table("direct_ingest_raw_big_query_file_metadata")
    # ### end Alembic commands ###
