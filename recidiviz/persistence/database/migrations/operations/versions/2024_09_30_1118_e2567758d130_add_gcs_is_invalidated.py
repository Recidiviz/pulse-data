# pylint: skip-file
"""add-gcs-is-invalidated

Revision ID: e2567758d130
Revises: 3bd598be5a1d
Create Date: 2024-09-30 11:18:16.357155

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "e2567758d130"
down_revision = "3bd598be5a1d"
branch_labels = None
depends_on = None

MAKE_EXISTING_GCS_INVALIDATED_MATCH_BQ = """
UPDATE direct_ingest_raw_gcs_file_metadata AS gcs
SET is_invalidated=bq.is_invalidated
FROM (
    SELECT file_id, is_invalidated FROM direct_ingest_raw_big_query_file_metadata
) AS bq(file_id, is_invalidated)
WHERE gcs.file_id = bq.file_id
"""


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # approach for using server_default and then dropping taken it taken from
    # 2022_05_31_1039_9c82941d1ca2_add_metadata_fields.py, see #13187.
    op.add_column(
        "direct_ingest_raw_gcs_file_metadata",
        sa.Column(
            "is_invalidated", sa.Boolean(), nullable=False, server_default="FALSE"
        ),
    )
    op.alter_column(
        "direct_ingest_raw_gcs_file_metadata", "is_invalidated", server_default=None
    )
    op.execute(MAKE_EXISTING_GCS_INVALIDATED_MATCH_BQ)
    op.create_index(
        "one_non_invalidated_normalized_file_name_per_region_instance",
        "direct_ingest_raw_gcs_file_metadata",
        ["region_code", "raw_data_instance", "normalized_file_name"],
        unique=True,
        postgresql_where=sa.text("NOT is_invalidated"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        "one_non_invalidated_normalized_file_name_per_region_instance",
        table_name="direct_ingest_raw_gcs_file_metadata",
        postgresql_where=sa.text("NOT is_invalidated"),
    )
    op.drop_column("direct_ingest_raw_gcs_file_metadata", "is_invalidated")
    # ### end Alembic commands ###
