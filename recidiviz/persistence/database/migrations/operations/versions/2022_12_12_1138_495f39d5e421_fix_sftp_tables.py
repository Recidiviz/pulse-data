# pylint: skip-file
"""fix_sftp_tables

Revision ID: 495f39d5e421
Revises: fb70f3bee078
Create Date: 2022-12-12 11:38:23.546312

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "495f39d5e421"
down_revision = "fb70f3bee078"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "direct_ingest_sftp_ingest_ready_file_metadata",
        sa.Column("file_id", sa.Integer(), nullable=False),
        sa.Column("region_code", sa.String(length=255), nullable=False),
        sa.Column(
            "post_processed_normalized_file_path", sa.String(length=255), nullable=True
        ),
        sa.Column("remote_file_path", sa.String(length=255), nullable=True),
        sa.Column("discovery_time", sa.DateTime(), nullable=True),
        sa.Column("upload_time", sa.DateTime(), nullable=True),
        sa.CheckConstraint(
            "discovery_time IS NOT NULL",
            name="nonnull_sftp_ingest_ready_discovery_time",
        ),
        sa.CheckConstraint(
            "post_processed_normalized_file_path IS NOT NULL AND remote_file_path IS NOT NULL",
            name="nonnull post_processed_and_remote_paths",
        ),
        sa.PrimaryKeyConstraint("file_id"),
    )
    op.create_index(
        op.f(
            "ix_direct_ingest_sftp_ingest_ready_file_metadata_post_processed_normalized_file_path"
        ),
        "direct_ingest_sftp_ingest_ready_file_metadata",
        ["post_processed_normalized_file_path"],
        unique=False,
    )
    op.create_index(
        op.f("ix_direct_ingest_sftp_ingest_ready_file_metadata_region_code"),
        "direct_ingest_sftp_ingest_ready_file_metadata",
        ["region_code"],
        unique=False,
    )
    op.create_table(
        "direct_ingest_sftp_remote_file_metadata",
        sa.Column("file_id", sa.Integer(), nullable=False),
        sa.Column("region_code", sa.String(length=255), nullable=False),
        sa.Column("remote_file_path", sa.String(length=255), nullable=True),
        sa.Column("discovery_time", sa.DateTime(), nullable=True),
        sa.Column("download_time", sa.DateTime(), nullable=True),
        sa.CheckConstraint(
            "discovery_time IS NOT NULL", name="nonnull_sftp_remote_file_discovery_time"
        ),
        sa.CheckConstraint(
            "remote_file_path IS NOT NULL", name="nonnull_sftp_remote_file_path"
        ),
        sa.PrimaryKeyConstraint("file_id"),
    )
    op.create_index(
        op.f("ix_direct_ingest_sftp_remote_file_metadata_region_code"),
        "direct_ingest_sftp_remote_file_metadata",
        ["region_code"],
        unique=False,
    )
    op.create_index(
        op.f("ix_direct_ingest_sftp_remote_file_metadata_remote_file_path"),
        "direct_ingest_sftp_remote_file_metadata",
        ["remote_file_path"],
        unique=False,
    )
    op.drop_index(
        "ix_direct_ingest_sftp_file_metadata_region_code",
        table_name="direct_ingest_sftp_file_metadata",
    )
    op.drop_index(
        "ix_direct_ingest_sftp_file_metadata_remote_file_path",
        table_name="direct_ingest_sftp_file_metadata",
    )
    op.drop_table("direct_ingest_sftp_file_metadata")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "direct_ingest_sftp_file_metadata",
        sa.Column("file_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "region_code", sa.VARCHAR(length=255), autoincrement=False, nullable=False
        ),
        sa.Column(
            "remote_file_path",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "discovery_time", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "processed_time", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.CheckConstraint(
            "(processed_time IS NULL) OR (discovery_time <= processed_time)",
            name="discovery_post_processed_time",
        ),
        sa.CheckConstraint(
            "discovery_time IS NOT NULL", name="nonnull_sftp_file_discovery_time"
        ),
        sa.CheckConstraint(
            "remote_file_path IS NOT NULL", name="nonnull_sftp_remote_file_name"
        ),
        sa.PrimaryKeyConstraint(
            "file_id", name="direct_ingest_sftp_file_metadata_pkey"
        ),
        sa.UniqueConstraint(
            "region_code", "remote_file_path", name="one_remote_sftp_name_per_region"
        ),
    )
    op.create_index(
        "ix_direct_ingest_sftp_file_metadata_remote_file_path",
        "direct_ingest_sftp_file_metadata",
        ["remote_file_path"],
        unique=False,
    )
    op.create_index(
        "ix_direct_ingest_sftp_file_metadata_region_code",
        "direct_ingest_sftp_file_metadata",
        ["region_code"],
        unique=False,
    )
    op.drop_index(
        op.f("ix_direct_ingest_sftp_remote_file_metadata_remote_file_path"),
        table_name="direct_ingest_sftp_remote_file_metadata",
    )
    op.drop_index(
        op.f("ix_direct_ingest_sftp_remote_file_metadata_region_code"),
        table_name="direct_ingest_sftp_remote_file_metadata",
    )
    op.drop_table("direct_ingest_sftp_remote_file_metadata")
    op.drop_index(
        op.f("ix_direct_ingest_sftp_ingest_ready_file_metadata_region_code"),
        table_name="direct_ingest_sftp_ingest_ready_file_metadata",
    )
    op.drop_index(
        op.f(
            "ix_direct_ingest_sftp_ingest_ready_file_metadata_post_processed_normalized_file_path"
        ),
        table_name="direct_ingest_sftp_ingest_ready_file_metadata",
    )
    op.drop_table("direct_ingest_sftp_ingest_ready_file_metadata")
    # ### end Alembic commands ###
