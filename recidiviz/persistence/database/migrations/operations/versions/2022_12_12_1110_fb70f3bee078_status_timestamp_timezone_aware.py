# pylint: skip-file
"""status_timestamp_timezone_aware

Revision ID: fb70f3bee078
Revises: 7c1417512022
Create Date: 2022-12-12 11:10:18.238617

"""
import datetime

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "fb70f3bee078"
down_revision = "7c1417512022"
branch_labels = None
depends_on = None

UPGRADE_QUERY = """
UPDATE direct_ingest_instance_status SET status_timestamp=timestamp AT TIME ZONE 'UTC';
"""

DOWNGRADE_QUERY = """
UPDATE direct_ingest_instance_status SET timestamp=status_timestamp AT TIME ZONE 'UTC';
"""


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "direct_ingest_instance_status",
        sa.Column(
            "status_timestamp",
            postgresql.TIMESTAMP(timezone=True),
            nullable=False,
            server_default=sa.func.now(),
        ),
    )
    op.alter_column(
        "direct_ingest_instance_status", "status_timestamp", server_default=None
    )
    with op.get_context().autocommit_block():
        op.execute(UPGRADE_QUERY)

    op.drop_column("direct_ingest_instance_status", "timestamp")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "direct_ingest_instance_status",
        sa.Column(
            "timestamp",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
            server_default=sa.func.now(),
        ),
    )
    op.alter_column("direct_ingest_instance_status", "timestamp", server_default=None)
    with op.get_context().autocommit_block():
        op.execute(DOWNGRADE_QUERY)
    op.drop_column("direct_ingest_instance_status", "status_timestamp")
    # ### end Alembic commands ###
