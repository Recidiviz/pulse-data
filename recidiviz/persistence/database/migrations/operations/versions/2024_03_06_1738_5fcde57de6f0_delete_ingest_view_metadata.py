# pylint: skip-file
"""delete_ingest_view_metadata

Revision ID: 5fcde57de6f0
Revises: 7bebee78e7b8
Create Date: 2024-03-06 17:38:48.157117

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "5fcde57de6f0"
down_revision = "7bebee78e7b8"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        "ix_direct_ingest_view_materialization_metadata_ingest_view_name",
        table_name="direct_ingest_view_materialization_metadata",
    )
    op.drop_index(
        "ix_direct_ingest_view_materialization_metadata_instance",
        table_name="direct_ingest_view_materialization_metadata",
    )
    op.drop_index(
        "ix_direct_ingest_view_materialization_metadata_region_code",
        table_name="direct_ingest_view_materialization_metadata",
    )
    op.drop_table("direct_ingest_view_materialization_metadata")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "direct_ingest_view_materialization_metadata",
        sa.Column("job_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "region_code", sa.VARCHAR(length=255), autoincrement=False, nullable=False
        ),
        sa.Column(
            "instance",
            postgresql.ENUM(name="direct_ingest_instance", create_type=False),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "ingest_view_name",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "upper_bound_datetime_inclusive",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "lower_bound_datetime_exclusive",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "job_creation_time",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "materialization_time",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("is_invalidated", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.CheckConstraint(
            "(lower_bound_datetime_exclusive IS NULL) OR (lower_bound_datetime_exclusive < upper_bound_datetime_inclusive)",
            name="datetime_bounds_ordering",
        ),
        sa.CheckConstraint(
            "(materialization_time IS NULL) OR (materialization_time >= job_creation_time)",
            name="job_times_ordering",
        ),
        sa.PrimaryKeyConstraint(
            "job_id", name="direct_ingest_view_materialization_metadata_pkey"
        ),
    )
    op.create_index(
        "ix_direct_ingest_view_materialization_metadata_region_code",
        "direct_ingest_view_materialization_metadata",
        ["region_code"],
        unique=False,
    )
    op.create_index(
        "ix_direct_ingest_view_materialization_metadata_instance",
        "direct_ingest_view_materialization_metadata",
        ["instance"],
        unique=False,
    )
    op.create_index(
        "ix_direct_ingest_view_materialization_metadata_ingest_view_name",
        "direct_ingest_view_materialization_metadata",
        ["ingest_view_name"],
        unique=False,
    )
    # ### end Alembic commands ###
