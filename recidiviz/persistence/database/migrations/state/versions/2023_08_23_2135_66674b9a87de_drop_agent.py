# pylint: skip-file
"""drop_agent

Revision ID: 66674b9a87de
Revises: 4c1b99806c43
Create Date: 2023-08-23 21:35:50.022837

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "66674b9a87de"
down_revision = "2c2c615a995f"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        "ix_state_supervision_violation_response_decision_agent__8582",
        table_name="state_supervision_violation_response_decision_agent_association",
    )
    op.drop_index(
        "ix_state_supervision_violation_response_decision_agent__d1fe",
        table_name="state_supervision_violation_response_decision_agent_association",
    )
    op.drop_table("state_supervision_violation_response_decision_agent_association")
    op.drop_index(
        "ix_state_assessment_conducting_agent_id", table_name="state_assessment"
    )
    op.drop_constraint(
        "state_assessment_conducting_agent_id_fkey",
        "state_assessment",
        type_="foreignkey",
    )
    op.drop_column("state_assessment", "conducting_agent_id")
    op.drop_index(
        "ix_state_program_assignment_referring_agent_id",
        table_name="state_program_assignment",
    )
    op.drop_constraint(
        "state_program_assignment_referring_agent_id_fkey",
        "state_program_assignment",
        type_="foreignkey",
    )
    op.drop_column("state_program_assignment", "referring_agent_id")
    op.drop_index(
        "ix_state_supervision_contact_contacted_agent_id",
        table_name="state_supervision_contact",
    )
    op.drop_constraint(
        "state_supervision_contact_contacted_agent_id_fkey",
        "state_supervision_contact",
        type_="foreignkey",
    )
    op.drop_column("state_supervision_contact", "contacted_agent_id")
    op.drop_index(
        "ix_state_supervision_period_supervising_officer_id",
        table_name="state_supervision_period",
    )
    op.drop_constraint(
        "state_supervision_period_supervising_officer_id_fkey",
        "state_supervision_period",
        type_="foreignkey",
    )
    op.drop_column("state_supervision_period", "supervising_officer_id")
    op.drop_index("ix_state_agent_external_id", table_name="state_agent")
    op.drop_index("ix_state_agent_state_code", table_name="state_agent")
    op.drop_table("state_agent")
    op.execute("DROP TYPE state_agent_type;")
    op.execute("DROP TYPE state_agent_subtype;")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "state_agent",
        sa.Column(
            "external_id",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
            comment="The unique identifier for the StateAgent, unique within the scope of the source data system.",
        ),
        sa.Column(
            "agent_type",
            postgresql.ENUM(
                "SUPERVISION_OFFICER",
                "PRESENT_WITHOUT_INFO",
                "INTERNAL_UNKNOWN",
                "EXTERNAL_UNKNOWN",
                name="state_agent_type",
            ),
            autoincrement=False,
            nullable=False,
            comment="The type of agent.",
        ),
        sa.Column(
            "agent_type_raw_text",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
            comment="The raw text value of the agent type.",
        ),
        sa.Column(
            "state_code",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=False,
            comment="The U.S. state or region that provided the source data.",
        ),
        sa.Column(
            "full_name",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
            comment="The state agent's full name.",
        ),
        sa.Column(
            "agent_id",
            sa.INTEGER(),
            autoincrement=True,
            nullable=False,
            comment="Unique identifier for a(n) agent, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to others.",
        ),
        sa.Column(
            "agent_subtype",
            postgresql.ENUM(
                "SUPERVISION_OFFICER",
                "SUPERVISION_OFFICER_SUPERVISOR",
                "SUPERVISION_REGIONAL_MANAGER",
                "INTERNAL_UNKNOWN",
                "EXTERNAL_UNKNOWN",
                name="state_agent_subtype",
            ),
            autoincrement=False,
            nullable=True,
            comment="The subtype of the position of the agent.",
        ),
        sa.Column(
            "agent_subtype_raw_text",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
            comment="The raw text of the agent subtype.",
        ),
        sa.PrimaryKeyConstraint("agent_id", name="state_agent_pkey"),
    )
    op.create_index(
        "ix_state_agent_state_code", "state_agent", ["state_code"], unique=False
    )
    op.create_index(
        "ix_state_agent_external_id", "state_agent", ["external_id"], unique=False
    )
    op.add_column(
        "state_supervision_period",
        sa.Column(
            "supervising_officer_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
            comment="Unique identifier for a(n) state agent, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant state agent information.",
        ),
    )
    op.create_foreign_key(
        "state_supervision_period_supervising_officer_id_fkey",
        "state_supervision_period",
        "state_agent",
        ["supervising_officer_id"],
        ["agent_id"],
    )
    op.create_index(
        "ix_state_supervision_period_supervising_officer_id",
        "state_supervision_period",
        ["supervising_officer_id"],
        unique=False,
    )
    op.add_column(
        "state_supervision_contact",
        sa.Column(
            "contacted_agent_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
            comment="Unique identifier for a(n) state agent, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant state agent information.",
        ),
    )
    op.create_foreign_key(
        "state_supervision_contact_contacted_agent_id_fkey",
        "state_supervision_contact",
        "state_agent",
        ["contacted_agent_id"],
        ["agent_id"],
    )
    op.create_index(
        "ix_state_supervision_contact_contacted_agent_id",
        "state_supervision_contact",
        ["contacted_agent_id"],
        unique=False,
    )
    op.add_column(
        "state_program_assignment",
        sa.Column(
            "referring_agent_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
            comment="Unique identifier for a(n) state agent, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant state agent information.",
        ),
    )
    op.create_foreign_key(
        "state_program_assignment_referring_agent_id_fkey",
        "state_program_assignment",
        "state_agent",
        ["referring_agent_id"],
        ["agent_id"],
    )
    op.create_index(
        "ix_state_program_assignment_referring_agent_id",
        "state_program_assignment",
        ["referring_agent_id"],
        unique=False,
    )
    op.add_column(
        "state_assessment",
        sa.Column(
            "conducting_agent_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
            comment="The id of the agent conducting this assessment.",
        ),
    )
    op.create_foreign_key(
        "state_assessment_conducting_agent_id_fkey",
        "state_assessment",
        "state_agent",
        ["conducting_agent_id"],
        ["agent_id"],
    )
    op.create_index(
        "ix_state_assessment_conducting_agent_id",
        "state_assessment",
        ["conducting_agent_id"],
        unique=False,
    )
    op.create_table(
        "state_supervision_violation_response_decision_agent_association",
        sa.Column(
            "supervision_violation_response_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
            comment="Unique identifier for a(n) violation response, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant violation response information.",
        ),
        sa.Column(
            "agent_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
            comment="Unique identifier for a(n) agent, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant agent information.",
        ),
        sa.ForeignKeyConstraint(
            ["agent_id"],
            ["state_agent.agent_id"],
            name="state_supervision_violation_response_decision_age_agent_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["supervision_violation_response_id"],
            ["state_supervision_violation_response.supervision_violation_response_id"],
            name="state_supervision_violation_r_supervision_violation_respon_fkey",
        ),
    )
    op.create_index(
        "ix_state_supervision_violation_response_decision_agent__d1fe",
        "state_supervision_violation_response_decision_agent_association",
        ["supervision_violation_response_id"],
        unique=False,
    )
    op.create_index(
        "ix_state_supervision_violation_response_decision_agent__8582",
        "state_supervision_violation_response_decision_agent_association",
        ["agent_id"],
        unique=False,
    )
    # ### end Alembic commands ###
