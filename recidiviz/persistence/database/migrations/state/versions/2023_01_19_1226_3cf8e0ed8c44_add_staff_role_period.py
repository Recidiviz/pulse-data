# pylint: skip-file
"""add_staff_role_period

Revision ID: 3cf8e0ed8c44
Revises: a5291efe03bf
Create Date: 2023-01-19 12:26:49.457190

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "3cf8e0ed8c44"
down_revision = "a5291efe03bf"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "state_staff_role_period",
        sa.Column(
            "staff_role_period_id",
            sa.Integer(),
            nullable=False,
            comment="Unique identifier for a(n) staff member role period, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to others.",
        ),
        sa.Column(
            "external_id",
            sa.String(length=255),
            nullable=False,
            comment="The unique identifier for the StateStaffRolePeriod, unique within the scope of the source data system.",
        ),
        sa.Column(
            "state_code",
            sa.String(length=255),
            nullable=False,
            comment="The U.S. state or region that provided the source data.",
        ),
        sa.Column(
            "start_date",
            sa.Date(),
            nullable=False,
            comment="The date on which the staff member started serving this role.",
        ),
        sa.Column(
            "end_date",
            sa.Date(),
            nullable=True,
            comment="The date on which the staff member stopped serving this role. This is an exclusive end date, meaning this staff member is no longer considered to have this role on this day.",
        ),
        sa.Column(
            "role_type",
            sa.Enum(
                "SUPERVISION_OFFICER",
                "INTERNAL_UNKNOWN",
                "EXTERNAL_UNKNOWN",
                name="state_staff_role_type",
            ),
            nullable=False,
            comment="The general role of this staff member.",
        ),
        sa.Column(
            "role_type_raw_text",
            sa.String(length=255),
            nullable=True,
            comment="The raw text value of the role type.",
        ),
        sa.Column(
            "role_subtype",
            sa.Enum(
                "SUPERVISION_OFFICER",
                "SUPERVISION_OFFICER_SUPERVISOR",
                "SUPERVISION_REGIONAL_MANAGER",
                "INTERNAL_UNKNOWN",
                "EXTERNAL_UNKNOWN",
                name="state_staff_role_subtype",
            ),
            nullable=True,
            comment="The specific role subtype for this staff member.",
        ),
        sa.Column(
            "role_subtype_raw_text",
            sa.String(length=255),
            nullable=True,
            comment="The raw text of the role subtype.",
        ),
        sa.Column(
            "staff_id",
            sa.Integer(),
            nullable=False,
            comment="Unique identifier for a(n) staff member, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant staff member information.",
        ),
        sa.ForeignKeyConstraint(
            ["staff_id"],
            ["state_staff.staff_id"],
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.PrimaryKeyConstraint("staff_role_period_id"),
        sa.UniqueConstraint(
            "state_code",
            "external_id",
            deferrable="True",
            initially="DEFERRED",
            name="staff_role_periods_unique_within_region",
        ),
        comment="The StateStaffRolePeriod object represents information about a staff memberâ€™s role in the DOC during a particular period of time. ",
    )
    op.create_index(
        op.f("ix_state_staff_role_period_external_id"),
        "state_staff_role_period",
        ["external_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_state_staff_role_period_staff_id"),
        "state_staff_role_period",
        ["staff_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_state_staff_role_period_state_code"),
        "state_staff_role_period",
        ["state_code"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_state_staff_role_period_state_code"),
        table_name="state_staff_role_period",
    )
    op.drop_index(
        op.f("ix_state_staff_role_period_staff_id"),
        table_name="state_staff_role_period",
    )
    op.drop_index(
        op.f("ix_state_staff_role_period_external_id"),
        table_name="state_staff_role_period",
    )
    op.drop_table("state_staff_role_period")
    # ### end Alembic commands ###
    op.execute("DROP TYPE state_staff_role_type;")
    op.execute("DROP TYPE state_staff_role_subtype;")
