# pylint: skip-file
"""delete_state_bond

Revision ID: a38799c0faf2
Revises: 332b1e77b473
Create Date: 2021-09-15 14:58:12.794802

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "a38799c0faf2"
down_revision = "332b1e77b473"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_state_bond_county_code", table_name="state_bond")
    op.drop_index("ix_state_bond_external_id", table_name="state_bond")
    op.drop_index("ix_state_bond_person_id", table_name="state_bond")
    op.drop_index("ix_state_bond_state_code", table_name="state_bond")
    op.drop_index("ix_state_bond_history_bond_id", table_name="state_bond_history")
    op.drop_index("ix_state_bond_history_county_code", table_name="state_bond_history")
    op.drop_index("ix_state_bond_history_external_id", table_name="state_bond_history")
    op.drop_index("ix_state_bond_history_person_id", table_name="state_bond_history")
    op.drop_index("ix_state_bond_history_state_code", table_name="state_bond_history")
    op.drop_index("ix_state_charge_bond_id", table_name="state_charge")
    op.drop_constraint("state_charge_bond_id_fkey", "state_charge", type_="foreignkey")
    op.drop_index("ix_state_charge_history_bond_id", table_name="state_charge_history")
    op.drop_constraint(
        "state_charge_history_bond_id_fkey", "state_charge_history", type_="foreignkey"
    )

    op.drop_column("state_charge_history", "bond_id")
    op.drop_column("state_charge", "bond_id")
    op.drop_table("state_bond_history")
    op.drop_table("state_bond")
    # ### end Alembic commands ###

    op.execute("DROP TYPE bond_type;")
    op.execute("DROP TYPE bond_status;")


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "state_bond",
        sa.Column(
            "external_id",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
            comment="DEPRECATED. See #2891.",
        ),
        sa.Column(
            "status",
            postgresql.ENUM(
                "PENDING",
                "POSTED",
                "PRESENT_WITHOUT_INFO",
                "REMOVED_WITHOUT_INFO",
                "REVOKED",
                "SET",
                name="bond_status",
            ),
            autoincrement=False,
            nullable=False,
            comment="DEPRECATED. See #2891.",
        ),
        sa.Column(
            "status_raw_text",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
            comment="DEPRECATED. See #2891.",
        ),
        sa.Column(
            "bond_type",
            postgresql.ENUM(
                "CASH",
                "EXTERNAL_UNKNOWN",
                "DENIED",
                "NOT_REQUIRED",
                "PARTIAL_CASH",
                "SECURED",
                "UNSECURED",
                name="bond_type",
            ),
            autoincrement=False,
            nullable=False,
            comment="DEPRECATED. See #2891.",
        ),
        sa.Column(
            "bond_type_raw_text",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
            comment="DEPRECATED. See #2891.",
        ),
        sa.Column(
            "date_paid",
            sa.DATE(),
            autoincrement=False,
            nullable=True,
            comment="DEPRECATED. See #2891.",
        ),
        sa.Column(
            "state_code",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=False,
            comment="DEPRECATED. See #2891.",
        ),
        sa.Column(
            "county_code",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
            comment="DEPRECATED. See #2891.",
        ),
        sa.Column(
            "amount_dollars",
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
            comment="DEPRECATED. See #2891.",
        ),
        sa.Column(
            "bond_agent",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
            comment="DEPRECATED. See #2891.",
        ),
        sa.Column(
            "bond_id",
            sa.INTEGER(),
            autoincrement=True,
            nullable=False,
            comment="DEPRECATED. See #2891.",
        ),
        sa.Column(
            "person_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
            comment="Unique identifier for a(n) person, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant person information.",
        ),
        sa.ForeignKeyConstraint(
            ["person_id"],
            ["state_person.person_id"],
            name="state_bond_person_id_fkey",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.PrimaryKeyConstraint("bond_id", name="state_bond_pkey"),
        sa.UniqueConstraint(
            "state_code", "external_id", name="bond_external_ids_unique_within_state"
        ),
    )
    op.create_table(
        "state_bond_history",
        sa.Column(
            "valid_from",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
            comment="Timestamp on which the columns started having the associated values.",
        ),
        sa.Column(
            "valid_to",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
            comment="Timestamp on which the columns stopped having the associated values.",
        ),
        sa.Column(
            "external_id",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
            comment="DEPRECATED. See #2891.",
        ),
        sa.Column(
            "status",
            postgresql.ENUM(
                "PENDING",
                "POSTED",
                "PRESENT_WITHOUT_INFO",
                "REMOVED_WITHOUT_INFO",
                "REVOKED",
                "SET",
                name="bond_status",
            ),
            autoincrement=False,
            nullable=False,
            comment="DEPRECATED. See #2891.",
        ),
        sa.Column(
            "status_raw_text",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
            comment="DEPRECATED. See #2891.",
        ),
        sa.Column(
            "bond_type",
            postgresql.ENUM(
                "CASH",
                "EXTERNAL_UNKNOWN",
                "DENIED",
                "NOT_REQUIRED",
                "PARTIAL_CASH",
                "SECURED",
                "UNSECURED",
                name="bond_type",
            ),
            autoincrement=False,
            nullable=False,
            comment="DEPRECATED. See #2891.",
        ),
        sa.Column(
            "bond_type_raw_text",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
            comment="DEPRECATED. See #2891.",
        ),
        sa.Column(
            "date_paid",
            sa.DATE(),
            autoincrement=False,
            nullable=True,
            comment="DEPRECATED. See #2891.",
        ),
        sa.Column(
            "state_code",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=False,
            comment="DEPRECATED. See #2891.",
        ),
        sa.Column(
            "county_code",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
            comment="DEPRECATED. See #2891.",
        ),
        sa.Column(
            "amount_dollars",
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
            comment="DEPRECATED. See #2891.",
        ),
        sa.Column(
            "bond_agent",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
            comment="DEPRECATED. See #2891.",
        ),
        sa.Column(
            "bond_history_id",
            sa.INTEGER(),
            autoincrement=True,
            nullable=False,
            comment="This primary key should not be used. It only exists because SQLAlchemy requires every table to have a unique primary key.",
        ),
        sa.Column(
            "bond_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
            comment="DEPRECATED. See #2891.",
        ),
        sa.Column(
            "person_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
            comment="Unique identifier for a(n) person, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant person information.",
        ),
        sa.ForeignKeyConstraint(
            ["bond_id"], ["state_bond.bond_id"], name="state_bond_history_bond_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["person_id"],
            ["state_person.person_id"],
            name="state_bond_history_person_id_fkey",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.PrimaryKeyConstraint("bond_history_id", name="state_bond_history_pkey"),
    )
    op.add_column(
        "state_charge_history",
        sa.Column(
            "bond_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
            comment="DEPRECATED. See #2891.",
        ),
    )
    op.create_foreign_key(
        "state_charge_history_bond_id_fkey",
        "state_charge_history",
        "state_bond",
        ["bond_id"],
        ["bond_id"],
    )
    op.create_index(
        "ix_state_charge_history_bond_id",
        "state_charge_history",
        ["bond_id"],
        unique=False,
    )
    op.add_column(
        "state_charge",
        sa.Column(
            "bond_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
            comment="DEPRECATED. See #2891.",
        ),
    )
    op.create_foreign_key(
        "state_charge_bond_id_fkey",
        "state_charge",
        "state_bond",
        ["bond_id"],
        ["bond_id"],
    )
    op.create_index(
        "ix_state_charge_bond_id", "state_charge", ["bond_id"], unique=False
    )
    op.create_index(
        "ix_state_bond_history_state_code",
        "state_bond_history",
        ["state_code"],
        unique=False,
    )
    op.create_index(
        "ix_state_bond_history_person_id",
        "state_bond_history",
        ["person_id"],
        unique=False,
    )
    op.create_index(
        "ix_state_bond_history_external_id",
        "state_bond_history",
        ["external_id"],
        unique=False,
    )
    op.create_index(
        "ix_state_bond_history_county_code",
        "state_bond_history",
        ["county_code"],
        unique=False,
    )
    op.create_index(
        "ix_state_bond_history_bond_id", "state_bond_history", ["bond_id"], unique=False
    )
    op.create_index(
        "ix_state_bond_state_code", "state_bond", ["state_code"], unique=False
    )
    op.create_index(
        "ix_state_bond_person_id", "state_bond", ["person_id"], unique=False
    )
    op.create_index(
        "ix_state_bond_external_id", "state_bond", ["external_id"], unique=False
    )
    op.create_index(
        "ix_state_bond_county_code", "state_bond", ["county_code"], unique=False
    )
    # ### end Alembic commands ###
