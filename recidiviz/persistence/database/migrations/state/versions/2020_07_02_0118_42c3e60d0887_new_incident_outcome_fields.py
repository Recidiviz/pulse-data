# pylint: skip-file
"""new_incident_outcome_fields

Revision ID: 42c3e60d0887
Revises: c7cc7e007e2f
Create Date: 2020-07-02 01:18:11.528185

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '42c3e60d0887'
down_revision = 'c7cc7e007e2f'
branch_labels = None
depends_on = None


# Without new value
old_values = ['DISCIPLINARY_LABOR', 'DISMISSED', 'EXTERNAL_PROSECUTION', 'FINANCIAL_PENALTY', 'GOOD_TIME_LOSS', 'MISCELLANEOUS', 'NOT_GUILTY', 'PRIVILEGE_LOSS', 'SOLITARY', 'TREATMENT', 'WARNING']

# With new value
new_values = ['CELL_CONFINEMENT', 'DISCIPLINARY_LABOR', 'DISMISSED', 'EXTERNAL_PROSECUTION', 'FINANCIAL_PENALTY', 'GOOD_TIME_LOSS', 'MISCELLANEOUS', 'NOT_GUILTY', 'PRIVILEGE_LOSS', 'RESTRICTED_CONFINEMENT', 'SOLITARY', 'TREATMENT', 'WARNING']


def upgrade():
    op.execute(
        'ALTER TYPE state_incarceration_incident_outcome_type RENAME TO state_incarceration_incident_outcome_type_old;')
    sa.Enum(*new_values, name='state_incarceration_incident_outcome_type').create(bind=op.get_bind())

    op.alter_column('state_incarceration_incident_outcome', column_name='outcome_type',
                    type_=sa.Enum(*new_values, name='state_incarceration_incident_outcome_type'),
                    postgresql_using='outcome_type::text::state_incarceration_incident_outcome_type')
    op.alter_column('state_incarceration_incident_outcome_history', column_name='outcome_type',
                    type_=sa.Enum(*new_values, name='state_incarceration_incident_outcome_type'),
                    postgresql_using='outcome_type::text::state_incarceration_incident_outcome_type')

    op.execute('DROP TYPE state_incarceration_incident_outcome_type_old;')

    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('state_incarceration_incident_outcome', sa.Column('hearing_date', sa.Date(), nullable=True))
    op.add_column('state_incarceration_incident_outcome', sa.Column('report_date', sa.Date(), nullable=True))
    op.add_column('state_incarceration_incident_outcome_history', sa.Column('hearing_date', sa.Date(), nullable=True))
    op.add_column('state_incarceration_incident_outcome_history', sa.Column('report_date', sa.Date(), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    op.execute(
        'ALTER TYPE state_incarceration_incident_outcome_type RENAME TO state_incarceration_incident_outcome_type_old;')
    sa.Enum(*old_values, name='state_incarceration_incident_outcome_type').create(bind=op.get_bind())

    op.alter_column('state_incarceration_incident_outcome', column_name='outcome_type',
                    type_=sa.Enum(*old_values, name='state_incarceration_incident_outcome_type'),
                    postgresql_using='outcome_type::text::state_incarceration_incident_outcome_type')
    op.alter_column('state_incarceration_incident_outcome_history', column_name='outcome_type',
                    type_=sa.Enum(*old_values, name='state_incarceration_incident_outcome_type'),
                    postgresql_using='outcome_type::text::state_incarceration_incident_outcome_type')

    op.execute('DROP TYPE state_incarceration_incident_outcome_type_old;')

    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('state_incarceration_incident_outcome_history', 'report_date')
    op.drop_column('state_incarceration_incident_outcome_history', 'hearing_date')
    op.drop_column('state_incarceration_incident_outcome', 'report_date')
    op.drop_column('state_incarceration_incident_outcome', 'hearing_date')
    # ### end Alembic commands ###
