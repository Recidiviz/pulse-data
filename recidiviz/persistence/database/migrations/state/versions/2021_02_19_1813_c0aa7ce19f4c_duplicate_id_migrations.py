# pylint: skip-file
"""duplicate_id_migrations

Revision ID: c0aa7ce19f4c
Revises: 1889d05fda36
Create Date: 2021-02-19 18:13:06.276767

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c0aa7ce19f4c'
down_revision = '1889d05fda36'
branch_labels = None
depends_on = None


DEDUP_UPGRADE_QUERY = """WITH 
id_counts AS (
    SELECT 
        state_code, external_id,
        COUNT(*) AS CNT,
        ARRAY_AGG({primary_key_col} ORDER BY {primary_key_col}) AS {primary_key_col}s
    FROM {base_table_name}
    WHERE external_id IS NOT NULL
    GROUP BY  state_code, external_id
),
duplicates AS (
    SELECT
        state_code,
        external_id,
        {primary_key_col},
        ROW_NUMBER()  OVER (PARTITION BY external_id ORDER BY {primary_key_col}) AS rn
    FROM id_counts, UNNEST({primary_key_col}s) AS {primary_key_col}
    WHERE CNT > 1
),
new_ids AS (
    SELECT state_code, {primary_key_col}, external_id AS old_external_id, CONCAT(external_id, '-dup', rn) AS external_id
    FROM duplicates
)
UPDATE {table_name} t
SET external_id = new_ids.external_id
FROM new_ids
WHERE t.{primary_key_col} = new_ids.{primary_key_col}; 
"""


def upgrade():
    table_to_primary_key = {
        'state_sentence_group': 'sentence_group_id',
        'state_incarceration_incident': 'incarceration_incident_id',
        'state_incarceration_incident_outcome': 'incarceration_incident_outcome_id',
    }

    with op.get_context().autocommit_block():
        for base_table, base_table_primary_key in table_to_primary_key.items():
            op.execute(DEDUP_UPGRADE_QUERY.format(base_table_name=base_table,
                                                  table_name=base_table,
                                                  primary_key_col=base_table_primary_key))
            op.execute(DEDUP_UPGRADE_QUERY.format(base_table_name=base_table,
                                                  table_name=f'{base_table}_history',
                                                  primary_key_col=base_table_primary_key))


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
