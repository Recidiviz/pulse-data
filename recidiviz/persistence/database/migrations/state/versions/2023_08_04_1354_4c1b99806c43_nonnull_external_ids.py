# pylint: skip-file
"""nonnull_external_ids

Revision ID: 4c1b99806c43
Revises: 134c7438fa7c
Create Date: 2023-08-04 13:54:34.251542

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "4c1b99806c43"
down_revision = "134c7438fa7c"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "state_assessment",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        nullable=False,
        existing_comment="The unique identifier for the StateAssessment, unique within the scope of the source data system.",
    )
    op.alter_column(
        "state_charge",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        nullable=False,
        existing_comment="The unique identifier for the StateCharge, unique within the scope of the source data system.",
    )
    op.alter_column(
        "state_drug_screen",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        nullable=False,
        existing_comment="The unique identifier for the StateDrugScreen, unique within the scope of the source data system.",
    )
    op.alter_column(
        "state_early_discharge",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        nullable=False,
        existing_comment="The unique identifier for the StateEarlyDischarge, unique within the scope of the source data system.",
    )
    op.alter_column(
        "state_employment_period",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        nullable=False,
        existing_comment="The unique identifier for the StateEmploymentPeriod, unique within the scope of the source data system.",
    )
    op.alter_column(
        "state_incarceration_incident",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        nullable=False,
        existing_comment="The unique identifier for the StateIncarcerationIncident, unique within the scope of the source data system.",
    )
    op.alter_column(
        "state_incarceration_incident_outcome",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        nullable=False,
        existing_comment="The unique identifier for the StateIncarcerationIncidentOutcome, unique within the scope of the source data system.",
    )
    op.alter_column(
        "state_incarceration_period",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        nullable=False,
        existing_comment="The unique identifier for the StateIncarcerationPeriod, unique within the scope of the source data system.",
    )
    op.alter_column(
        "state_incarceration_sentence",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        nullable=False,
        existing_comment="The unique identifier for the StateIncarcerationSentence, unique within the scope of the source data system.",
    )
    op.alter_column(
        "state_program_assignment",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        nullable=False,
        existing_comment="The unique identifier for the StateProgramAssignment, unique within the scope of the source data system.",
    )
    op.alter_column(
        "state_supervision_contact",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        nullable=False,
        existing_comment="The unique identifier for the StateSupervisionContact, unique within the scope of the source data system.",
    )
    op.alter_column(
        "state_supervision_period",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        nullable=False,
        existing_comment="The unique identifier for the StateSupervisionPeriod, unique within the scope of the source data system.",
    )
    op.alter_column(
        "state_supervision_sentence",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        nullable=False,
        existing_comment="The unique identifier for the StateSupervisionSentence, unique within the scope of the source data system.",
    )
    op.alter_column(
        "state_supervision_violated_condition_entry",
        "condition",
        existing_type=postgresql.ENUM(
            "EMPLOYMENT",
            "FAILURE_TO_NOTIFY",
            "FAILURE_TO_REPORT",
            "FINANCIAL",
            "LAW",
            "SPECIAL_CONDITIONS",
            "SUBSTANCE",
            "TREATMENT_COMPLIANCE",
            "INTERNAL_UNKNOWN",
            "EXTERNAL_UNKNOWN",
            name="state_supervision_violated_condition_type",
        ),
        nullable=False,
        existing_comment="The specific condition of supervision which was violated.",
    )
    op.alter_column(
        "state_supervision_violation",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        nullable=False,
        existing_comment="The unique identifier for the StateSupervisionViolation, unique within the scope of the source data system.",
    )
    op.alter_column(
        "state_supervision_violation_response",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        nullable=False,
        existing_comment="The unique identifier for the StateSupervisionViolationResponse, unique within the scope of the source data system.",
    )
    op.alter_column(
        "state_supervision_violation_response_decision_entry",
        "decision",
        existing_type=postgresql.ENUM(
            "COMMUNITY_SERVICE",
            "CONTINUANCE",
            "DELAYED_ACTION",
            "EXTENSION",
            "INTERNAL_UNKNOWN",
            "NEW_CONDITIONS",
            "OTHER",
            "REVOCATION",
            "PRIVILEGES_REVOKED",
            "SERVICE_TERMINATION",
            "SHOCK_INCARCERATION",
            "SPECIALIZED_COURT",
            "SUSPENSION",
            "TREATMENT_IN_PRISON",
            "TREATMENT_IN_FIELD",
            "WARNING",
            "WARRANT_ISSUED",
            "VIOLATION_UNFOUNDED",
            "EXTERNAL_UNKNOWN",
            name="state_supervision_violation_response_decision",
        ),
        nullable=False,
        comment="A specific decision that was made in response.",
        existing_comment="A specific decision that was made in response, if applicable.",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "state_supervision_violation_response_decision_entry",
        "decision",
        existing_type=postgresql.ENUM(
            "COMMUNITY_SERVICE",
            "CONTINUANCE",
            "DELAYED_ACTION",
            "EXTENSION",
            "INTERNAL_UNKNOWN",
            "NEW_CONDITIONS",
            "OTHER",
            "REVOCATION",
            "PRIVILEGES_REVOKED",
            "SERVICE_TERMINATION",
            "SHOCK_INCARCERATION",
            "SPECIALIZED_COURT",
            "SUSPENSION",
            "TREATMENT_IN_PRISON",
            "TREATMENT_IN_FIELD",
            "WARNING",
            "WARRANT_ISSUED",
            "VIOLATION_UNFOUNDED",
            "EXTERNAL_UNKNOWN",
            name="state_supervision_violation_response_decision",
        ),
        nullable=True,
        comment="A specific decision that was made in response, if applicable.",
        existing_comment="A specific decision that was made in response.",
    )
    op.alter_column(
        "state_supervision_violation_response",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        nullable=True,
        existing_comment="The unique identifier for the StateSupervisionViolationResponse, unique within the scope of the source data system.",
    )
    op.alter_column(
        "state_supervision_violation",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        nullable=True,
        existing_comment="The unique identifier for the StateSupervisionViolation, unique within the scope of the source data system.",
    )
    op.alter_column(
        "state_supervision_violated_condition_entry",
        "condition",
        existing_type=postgresql.ENUM(
            "EMPLOYMENT",
            "FAILURE_TO_NOTIFY",
            "FAILURE_TO_REPORT",
            "FINANCIAL",
            "LAW",
            "SPECIAL_CONDITIONS",
            "SUBSTANCE",
            "TREATMENT_COMPLIANCE",
            "INTERNAL_UNKNOWN",
            "EXTERNAL_UNKNOWN",
            name="state_supervision_violated_condition_type",
        ),
        nullable=True,
        existing_comment="The specific condition of supervision which was violated.",
    )
    op.alter_column(
        "state_supervision_sentence",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        nullable=True,
        existing_comment="The unique identifier for the StateSupervisionSentence, unique within the scope of the source data system.",
    )
    op.alter_column(
        "state_supervision_period",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        nullable=True,
        existing_comment="The unique identifier for the StateSupervisionPeriod, unique within the scope of the source data system.",
    )
    op.alter_column(
        "state_supervision_contact",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        nullable=True,
        existing_comment="The unique identifier for the StateSupervisionContact, unique within the scope of the source data system.",
    )
    op.alter_column(
        "state_program_assignment",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        nullable=True,
        existing_comment="The unique identifier for the StateProgramAssignment, unique within the scope of the source data system.",
    )
    op.alter_column(
        "state_incarceration_sentence",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        nullable=True,
        existing_comment="The unique identifier for the StateIncarcerationSentence, unique within the scope of the source data system.",
    )
    op.alter_column(
        "state_incarceration_period",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        nullable=True,
        existing_comment="The unique identifier for the StateIncarcerationPeriod, unique within the scope of the source data system.",
    )
    op.alter_column(
        "state_incarceration_incident_outcome",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        nullable=True,
        existing_comment="The unique identifier for the StateIncarcerationIncidentOutcome, unique within the scope of the source data system.",
    )
    op.alter_column(
        "state_incarceration_incident",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        nullable=True,
        existing_comment="The unique identifier for the StateIncarcerationIncident, unique within the scope of the source data system.",
    )
    op.alter_column(
        "state_employment_period",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        nullable=True,
        existing_comment="The unique identifier for the StateEmploymentPeriod, unique within the scope of the source data system.",
    )
    op.alter_column(
        "state_early_discharge",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        nullable=True,
        existing_comment="The unique identifier for the StateEarlyDischarge, unique within the scope of the source data system.",
    )
    op.alter_column(
        "state_drug_screen",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        nullable=True,
        existing_comment="The unique identifier for the StateDrugScreen, unique within the scope of the source data system.",
    )
    op.alter_column(
        "state_charge",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        nullable=True,
        existing_comment="The unique identifier for the StateCharge, unique within the scope of the source data system.",
    )
    op.alter_column(
        "state_assessment",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        nullable=True,
        existing_comment="The unique identifier for the StateAssessment, unique within the scope of the source data system.",
    )
    # ### end Alembic commands ###
