# pylint: skip-file
"""add_ledger_state_sentence_ents_to_schema

Revision ID: 0abbc2796cfa
Revises: 10917f70569e
Create Date: 2024-01-08 11:23:19.065742

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "0abbc2796cfa"
down_revision = "10917f70569e"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "state_sentence_group",
        sa.Column(
            "sentence_group_id",
            sa.Integer(),
            nullable=False,
            comment="Unique identifier for a(n) state sentence group, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to others.",
        ),
        sa.Column(
            "state_code",
            sa.String(length=255),
            nullable=False,
            comment="The U.S. state or region that provided the source data.",
        ),
        sa.Column(
            "external_id",
            sa.String(length=255),
            nullable=False,
            comment="The unique identifier for the StateSentenceGroup, unique within the scope of the source data system.",
        ),
        sa.Column(
            "group_update_datetime",
            sa.DateTime(),
            nullable=False,
            comment="The start of the period of time over which the set of all sentence group attributes are valid.",
        ),
        sa.Column(
            "parole_eligibility_date_external",
            sa.Date(),
            nullable=True,
            comment="The date on which a person is expected to become eligible for parole under the terms of this sentence",
        ),
        sa.Column(
            "projected_parole_release_date_min_external",
            sa.Date(),
            nullable=True,
            comment="The date on which a person is projected to be released from incarceration to parole",
        ),
        sa.Column(
            "projected_full_term_release_date_min_external",
            sa.Date(),
            nullable=True,
            comment="The earliest date on which a person is projected to be released to liberty after having completed all sentences in the term.",
        ),
        sa.Column(
            "projected_full_term_release_date_max_external",
            sa.Date(),
            nullable=True,
            comment="The latest date on which a person is projected to be released to liberty after having completed all sentences in the term.",
        ),
        sa.Column(
            "person_id",
            sa.Integer(),
            nullable=False,
            comment="Unique identifier for a(n) person, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant person information.",
        ),
        sa.ForeignKeyConstraint(
            ["person_id"],
            ["state_person.person_id"],
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.PrimaryKeyConstraint("sentence_group_id"),
        comment="Represents a historical ledger of attributes relating to a state designated group of sentences.",
    )
    op.create_index(
        op.f("ix_state_sentence_group_external_id"),
        "state_sentence_group",
        ["external_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_state_sentence_group_person_id"),
        "state_sentence_group",
        ["person_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_state_sentence_group_state_code"),
        "state_sentence_group",
        ["state_code"],
        unique=False,
    )
    op.create_table(
        "state_sentence_length",
        sa.Column(
            "sentence_length_id",
            sa.Integer(),
            nullable=False,
            comment="Unique identifier for a(n) state sentence length ledger, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to others.",
        ),
        sa.Column(
            "state_code",
            sa.String(length=255),
            nullable=False,
            comment="The U.S. state or region that provided the source data.",
        ),
        sa.Column(
            "sentence_id",
            sa.Integer(),
            nullable=True,
            comment="Unique internal ID for a state sentence.",
        ),
        sa.Column(
            "length_update_datetime",
            sa.DateTime(),
            nullable=False,
            comment="The start of the period of time over which the set of all sentence length attributes are true.",
        ),
        sa.Column(
            "sentence_length_days_min",
            sa.Integer(),
            nullable=True,
            comment="The maximum duration of this sentence in days",
        ),
        sa.Column(
            "sentence_length_days_max",
            sa.Integer(),
            nullable=True,
            comment="The maximum duration of this sentence in days",
        ),
        sa.Column(
            "good_time_days",
            sa.Integer(),
            nullable=True,
            comment="Any good time (in days) the person has credited against this sentence due to good conduct, a.k.a. time off for good behavior, if applicable.",
        ),
        sa.Column(
            "earned_time_days",
            sa.Integer(),
            nullable=True,
            comment="Any earned time (in days) the person has credited against this sentence due to participation in programming designed to reduce the likelihood of re-offense, if applicable.",
        ),
        sa.Column(
            "parole_eligibility_date_external",
            sa.Date(),
            nullable=True,
            comment="The date on which a person is expected to become eligible for parole under the terms of this sentence",
        ),
        sa.Column(
            "projected_parole_release_date_external",
            sa.Date(),
            nullable=True,
            comment="The date on which a person is projected to be released from incarceration to parole",
        ),
        sa.Column(
            "projected_completion_date_min_external",
            sa.Date(),
            nullable=True,
            comment="The earliest date on which a person is projected to be released to liberty after having completed all sentences in the term.",
        ),
        sa.Column(
            "projected_completion_date_max_external",
            sa.Date(),
            nullable=True,
            comment="The latest date on which a person is projected to be released to liberty after having completed all sentences in the term.",
        ),
        sa.Column(
            "person_id",
            sa.Integer(),
            nullable=False,
            comment="Unique identifier for a(n) person, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant person information.",
        ),
        sa.ForeignKeyConstraint(
            ["person_id"],
            ["state_person.person_id"],
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.ForeignKeyConstraint(
            ["sentence_id"],
            ["state_sentence.sentence_id"],
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.PrimaryKeyConstraint("sentence_length_id"),
        comment="Represents a historical ledger for when a given sentence had a given status.",
    )
    op.create_index(
        op.f("ix_state_sentence_length_person_id"),
        "state_sentence_length",
        ["person_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_state_sentence_length_state_code"),
        "state_sentence_length",
        ["state_code"],
        unique=False,
    )
    op.create_table(
        "state_sentence_status_snapshot",
        sa.Column(
            "sentence_status_snapshot_id",
            sa.Integer(),
            nullable=False,
            comment="Unique identifier for a(n) state sentence status snapshot, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to others.",
        ),
        sa.Column(
            "state_code",
            sa.String(length=255),
            nullable=False,
            comment="The U.S. state or region that provided the source data.",
        ),
        sa.Column(
            "status_update_datetime",
            sa.DateTime(),
            nullable=False,
            comment="The start of the period of time over which the sentence status is valid",
        ),
        sa.Column(
            "status",
            postgresql.ENUM(
                "AMENDED",
                "COMMUTED",
                "COMPLETED",
                "PARDONED",
                "PENDING",
                "SANCTIONED",
                "SERVING",
                "SUSPENDED",
                "REVOKED",
                "VACATED",
                "PRESENT_WITHOUT_INFO",
                "INTERNAL_UNKNOWN",
                "EXTERNAL_UNKNOWN",
                name="state_sentence_status",
                create_type=False,
            ),
            nullable=False,
            comment="The status of this sentence for the time period of this observation.",
        ),
        sa.Column(
            "status_raw_text",
            sa.String(length=255),
            nullable=True,
            comment="The raw text value of the status of the sentence",
        ),
        sa.Column(
            "sentence_id",
            sa.Integer(),
            nullable=True,
            comment="Unique internal ID for a state sentence.",
        ),
        sa.Column(
            "person_id",
            sa.Integer(),
            nullable=False,
            comment="Unique identifier for a(n) person, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant person information.",
        ),
        sa.ForeignKeyConstraint(
            ["person_id"],
            ["state_person.person_id"],
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.ForeignKeyConstraint(
            ["sentence_id"],
            ["state_sentence.sentence_id"],
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.PrimaryKeyConstraint("sentence_status_snapshot_id"),
        comment="Represents a historical snapshot for when a given sentence had a given status.",
    )
    op.create_index(
        op.f("ix_state_sentence_status_snapshot_person_id"),
        "state_sentence_status_snapshot",
        ["person_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_state_sentence_status_snapshot_state_code"),
        "state_sentence_status_snapshot",
        ["state_code"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_state_sentence_status_snapshot_state_code"),
        table_name="state_sentence_status_snapshot",
    )
    op.drop_index(
        op.f("ix_state_sentence_status_snapshot_person_id"),
        table_name="state_sentence_status_snapshot",
    )
    op.drop_table("state_sentence_status_snapshot")
    op.drop_index(
        op.f("ix_state_sentence_length_state_code"), table_name="state_sentence_length"
    )
    op.drop_index(
        op.f("ix_state_sentence_length_person_id"), table_name="state_sentence_length"
    )
    op.drop_table("state_sentence_length")
    op.drop_index(
        op.f("ix_state_sentence_group_state_code"), table_name="state_sentence_group"
    )
    op.drop_index(
        op.f("ix_state_sentence_group_person_id"), table_name="state_sentence_group"
    )
    op.drop_index(
        op.f("ix_state_sentence_group_external_id"), table_name="state_sentence_group"
    )
    op.drop_table("state_sentence_group")
    # ### end Alembic commands ###
