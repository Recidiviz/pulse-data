# pylint: skip-file
"""add_staff_location_period

Revision ID: fd973fd2dbdd
Revises: 4f1261187d62
Create Date: 2023-03-02 11:57:21.398286

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "fd973fd2dbdd"
down_revision = "4f1261187d62"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "state_staff_location_period",
        sa.Column(
            "staff_location_period_id",
            sa.Integer(),
            nullable=False,
            comment="Unique identifier for a(n) staff member location period, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to others.",
        ),
        sa.Column(
            "external_id",
            sa.String(length=255),
            nullable=False,
            comment="The unique identifier for the StateStaffLocationPeriod, unique within the scope of the source data system.",
        ),
        sa.Column(
            "state_code",
            sa.String(length=255),
            nullable=False,
            comment="The U.S. state or region that provided the source data.",
        ),
        sa.Column(
            "start_date",
            sa.Date(),
            nullable=False,
            comment="The date on which the staff member started working at this location. This is an inclusive start date, meaning the staff member was working at this location on this day.",
        ),
        sa.Column(
            "end_date",
            sa.Date(),
            nullable=True,
            comment="The date on which the staff member stopped working at this location. This is an exclusive end date, meaning this staff member is no longer considered to be associated with this location on this day.",
        ),
        sa.Column(
            "location_external_id",
            sa.String(length=255),
            nullable=False,
            comment="The state-issued stable id associated with this location.",
        ),
        sa.Column(
            "staff_id",
            sa.Integer(),
            nullable=False,
            comment="Unique identifier for a(n) staff member, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant staff member information.",
        ),
        sa.ForeignKeyConstraint(
            ["staff_id"],
            ["state_staff.staff_id"],
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.PrimaryKeyConstraint("staff_location_period_id"),
        sa.UniqueConstraint(
            "state_code",
            "external_id",
            deferrable="True",
            initially="DEFERRED",
            name="staff_location_periods_unique_within_region",
        ),
        comment="The StateStaffLocationPeriod models a period of time during which a staff member has a given assigned location. For now, this should be used to designate the staff memberâ€™s primary location, but may in the future be expanded to allow for multiple overlapping location periods for cases where staff members have primary, secondary etc locations.",
    )
    op.create_index(
        op.f("ix_state_staff_location_period_external_id"),
        "state_staff_location_period",
        ["external_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_state_staff_location_period_staff_id"),
        "state_staff_location_period",
        ["staff_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_state_staff_location_period_state_code"),
        "state_staff_location_period",
        ["state_code"],
        unique=False,
    )
    op.alter_column(
        "state_staff_role_period",
        "start_date",
        existing_type=sa.DATE(),
        comment="The date on which the staff member started serving this role.This is an inclusive start date, meaning the staff member had this role on this day.",
        existing_comment="The date on which the staff member started serving this role.",
        existing_nullable=False,
    )
    op.alter_column(
        "state_staff_supervisor_period",
        "start_date",
        existing_type=sa.DATE(),
        comment="The date on which the staff member started working under this supervisor.This is an inclusive start date, meaning the staff member had this supervisor on this day.",
        existing_comment="The date on which the staff member started serving this role.",
        existing_nullable=False,
    )
    op.alter_column(
        "state_staff_supervisor_period",
        "end_date",
        existing_type=sa.DATE(),
        comment="The date on which the staff member stopped working under this supervisor. This is an exclusive end date, meaning this staff member is no longer considered to have this role on this day.",
        existing_comment="The date on which the staff member stopped serving this role. This is an exclusive end date, meaning this staff member is no longer considered to have this role on this day.",
        existing_nullable=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "state_staff_supervisor_period",
        "end_date",
        existing_type=sa.DATE(),
        comment="The date on which the staff member stopped serving this role. This is an exclusive end date, meaning this staff member is no longer considered to have this role on this day.",
        existing_comment="The date on which the staff member stopped working under this supervisor. This is an exclusive end date, meaning this staff member is no longer considered to have this role on this day.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_staff_supervisor_period",
        "start_date",
        existing_type=sa.DATE(),
        comment="The date on which the staff member started serving this role.",
        existing_comment="The date on which the staff member started working under this supervisor.This is an inclusive start date, meaning the staff member had this supervisor on this day.",
        existing_nullable=False,
    )
    op.alter_column(
        "state_staff_role_period",
        "start_date",
        existing_type=sa.DATE(),
        comment="The date on which the staff member started serving this role.",
        existing_comment="The date on which the staff member started serving this role.This is an inclusive start date, meaning the staff member had this role on this day.",
        existing_nullable=False,
    )
    op.drop_index(
        op.f("ix_state_staff_location_period_state_code"),
        table_name="state_staff_location_period",
    )
    op.drop_index(
        op.f("ix_state_staff_location_period_staff_id"),
        table_name="state_staff_location_period",
    )
    op.drop_index(
        op.f("ix_state_staff_location_period_external_id"),
        table_name="state_staff_location_period",
    )
    op.drop_table("state_staff_location_period")
    # ### end Alembic commands ###
