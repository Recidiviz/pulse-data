# pylint: skip-file
"""housing_status_periods

Revision ID: 159c8a262bc6
Revises: 6eed48eb6ff1
Create Date: 2023-12-12 12:34:24.077715

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "159c8a262bc6"
down_revision = "6eed48eb6ff1"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "state_person_housing_status_period",
        sa.Column(
            "person_housing_status_period_id",
            sa.Integer(),
            nullable=False,
            comment="Unique identifier for a(n) person address period, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to others.",
        ),
        sa.Column(
            "state_code",
            sa.String(length=255),
            nullable=False,
            comment="The U.S. state or region that provided the source data.",
        ),
        sa.Column(
            "housing_status_start_date",
            sa.Date(),
            nullable=True,
            comment="Date on which a person’s housing status changed or was registered for the first time",
        ),
        sa.Column(
            "housing_status_end_date",
            sa.Date(),
            nullable=True,
            comment="Date on which a person’s housing status ended ",
        ),
        sa.Column(
            "housing_status_type",
            sa.Enum(
                "UNHOUSED",
                "TEMPORARY_OR_SUPPORTIVE_HOUSING",
                "PERMANENT_RESIDENCE",
                "FACILITY",
                "INTERNAL_UNKNOWN",
                "EXTERNAL_UNKNOWN",
                name="state_person_housing_status_type",
            ),
            nullable=False,
            comment="Indicates the housing status type",
        ),
        sa.Column(
            "housing_status_type_raw_text",
            sa.String(length=255),
            nullable=True,
            comment="Text used to infer housing_status_type",
        ),
        sa.Column(
            "person_id",
            sa.Integer(),
            nullable=False,
            comment="Unique identifier for a(n) person, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant person information.",
        ),
        sa.ForeignKeyConstraint(
            ["person_id"],
            ["state_person.person_id"],
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.PrimaryKeyConstraint("person_housing_status_period_id"),
        comment="The StatePersonHousingStatusPeriod object represents information about a person’s housing status during a particular period of time. This object can be used to identify when a person is currently, or has been previously, unhoused or living in temporary housing",
    )
    op.create_index(
        op.f("ix_state_person_housing_status_period_person_id"),
        "state_person_housing_status_period",
        ["person_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_state_person_housing_status_period_state_code"),
        "state_person_housing_status_period",
        ["state_code"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_state_person_housing_status_period_state_code"),
        table_name="state_person_housing_status_period",
    )
    op.drop_index(
        op.f("ix_state_person_housing_status_period_person_id"),
        table_name="state_person_housing_status_period",
    )
    op.drop_table("state_person_housing_status_period")

    state_person_housing_status_type = postgresql.ENUM(
        "UNHOUSED",
        "TEMPORARY_OR_SUPPORTIVE_HOUSING",
        "PERMANENT_RESIDENCE",
        "FACILITY",
        "INTERNAL_UNKNOWN",
        "EXTERNAL_UNKNOWN",
        name="state_person_housing_status_type",
    )

    state_person_housing_status_type.drop(op.get_bind())
    # ### end Alembic commands ###
