# pylint: skip-file
"""entity_documentation_part_3

Revision ID: d4fd3d691e34
Revises: 423fa5bfd0fd
Create Date: 2021-04-30 17:29:32.776825

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "d4fd3d691e34"
down_revision = "423fa5bfd0fd"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "state_fine",
        "sentence_group_id",
        existing_type=sa.INTEGER(),
        comment="Unique identifier for a(n) sentence group, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant sentence group information.",
        existing_nullable=False,
    )
    op.alter_column(
        "state_fine_history",
        "sentence_group_id",
        existing_type=sa.INTEGER(),
        comment="Unique identifier for a(n) sentence group, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant sentence group information.",
        existing_nullable=False,
    )
    op.alter_column(
        "state_incarceration_period_program_assignment_association",
        "incarceration_period_id",
        existing_type=sa.INTEGER(),
        comment="Unique identifier for a(n) incarceration period, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant incarceration period information.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_period_program_assignment_association",
        "program_assignment_id",
        existing_type=sa.INTEGER(),
        comment="Unique identifier for a(n) program assignment, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant program assignment information.",
        existing_nullable=True,
    )
    op.create_table_comment(
        "state_incarceration_period_program_assignment_association",
        "Association table that connects incarceration periods with program assignments by their ids.",
        existing_comment=None,
        schema=None,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "completion_date",
        existing_type=sa.DATE(),
        comment="The date this sentence has been completed.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "county_code",
        existing_type=sa.VARCHAR(length=255),
        comment="The code of the county under whose jurisdiction the sentence was imposed.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "date_imposed",
        existing_type=sa.DATE(),
        comment="The date this sentence was imposed, e.g. the date of actual sentencing, but not necessarily the date the person started serving the sentence",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "earned_time_days",
        existing_type=sa.INTEGER(),
        comment="Any earned time (in days) the person has credited against this sentence due to participation in programming designed to reduce the likelihood of re-offense, if applicable.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        comment="The unique identifier for the StateIncarcerationSentence, unique within the scope of the source data system.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "good_time_days",
        existing_type=sa.INTEGER(),
        comment="Any good time (in days) the person has credited against this sentence due to good conduct, a.k.a. time off for good behavior, if applicable.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "incarceration_sentence_id",
        existing_type=sa.INTEGER(),
        comment="Unique identifier for a(n) incarceration sentence, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to others.",
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text(
            "nextval('state_incarceration_sentence_incarceration_sentence_id_seq'::regclass)"
        ),
    )
    op.alter_column(
        "state_incarceration_sentence",
        "incarceration_type",
        existing_type=postgresql.ENUM(
            "COUNTY_JAIL",
            "EXTERNAL_UNKNOWN",
            "FEDERAL_PRISON",
            "OUT_OF_STATE",
            "STATE_PRISON",
            name="state_incarceration_type",
        ),
        comment="The type of incarceration the person is being sentenced to.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "incarceration_type_raw_text",
        existing_type=sa.VARCHAR(length=255),
        comment="The raw text value of the type of incarceration of this sentence.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "initial_time_served_days",
        existing_type=sa.INTEGER(),
        comment="The amount of any time already served (in days), to possible be credited against the overall sentence duration.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "is_capital_punishment",
        existing_type=sa.BOOLEAN(),
        comment="Whether or not this is a sentence for the death penalty.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "is_life",
        existing_type=sa.BOOLEAN(),
        comment="Whether or not this is a life sentence.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "max_length_days",
        existing_type=sa.INTEGER(),
        comment="The maximum duration of this sentence in days.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "min_length_days",
        existing_type=sa.INTEGER(),
        comment="The minimum duration of this sentence in days.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "parole_eligibility_date",
        existing_type=sa.DATE(),
        comment="The first date under which the person becomes eligible for parole under the terms of this sentence.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "parole_possible",
        existing_type=sa.BOOLEAN(),
        comment="Whether or not the person may be released to parole under the terms of this sentence.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "projected_max_release_date",
        existing_type=sa.DATE(),
        comment="The latest projected date the person may be released from incarceration due to this sentence.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "projected_min_release_date",
        existing_type=sa.DATE(),
        comment="The earliest projected date the person may be released from incarceration due to this sentence.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "sentence_group_id",
        existing_type=sa.INTEGER(),
        comment="Unique identifier for a(n) sentence group, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant sentence group information.",
        existing_nullable=False,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "start_date",
        existing_type=sa.DATE(),
        comment="The date this sentence started.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "state_code",
        existing_type=sa.VARCHAR(length=255),
        comment="The code of the state under whose jurisdiction the sentence was imposed.",
        existing_nullable=False,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "status",
        existing_type=postgresql.ENUM(
            "COMMUTED",
            "COMPLETED",
            "EXTERNAL_UNKNOWN",
            "PARDONED",
            "PRESENT_WITHOUT_INFO",
            "REVOKED",
            "SERVING",
            "SUSPENDED",
            "VACATED",
            name="state_sentence_status",
        ),
        comment="The U.S. state or region that provided the source data.",
        existing_nullable=False,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "status_raw_text",
        existing_type=sa.VARCHAR(length=255),
        comment="The raw text value of the status of the sentence.",
        existing_nullable=True,
    )
    op.create_table_comment(
        "state_incarceration_sentence",
        "The StateIncarcerationSentence object represents information about a single sentence to a period of incarceration imposed as part of a group of related sentences. Multiple distinct, related sentences to incarceration should be captured as separate incarceration sentence objects within the same group. These sentences may, for example, be concurrent or consecutive to one another. Like the sentence group, the StateIncarcerationSentence represents only the imposition of some sentence terms, not an actual period of incarceration experienced by the person.<br /><br />A StateIncarcerationSentence can reference many charges, and each charge can reference many sentences -- the relationship is many:many.<br /><br />A StateIncarcerationSentence can have multiple child StateIncarcerationPeriods. It can also have child StateSupervisionPeriods since a sentence to incarceration may result in a person being paroled, for example. In some jurisdictions, this would be modeled as distinct sentences of incarceration and supervision, but this is not universal.",
        existing_comment=None,
        schema=None,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "completion_date",
        existing_type=sa.DATE(),
        comment="The date this sentence has been completed.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "county_code",
        existing_type=sa.VARCHAR(length=255),
        comment="The code of the county under whose jurisdiction the sentence was imposed.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "date_imposed",
        existing_type=sa.DATE(),
        comment="The date this sentence was imposed, e.g. the date of actual sentencing, but not necessarily the date the person started serving the sentence",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "earned_time_days",
        existing_type=sa.INTEGER(),
        comment="Any earned time (in days) the person has credited against this sentence due to participation in programming designed to reduce the likelihood of re-offense, if applicable.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        comment="The unique identifier for the StateIncarcerationSentence, unique within the scope of the source data system.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "good_time_days",
        existing_type=sa.INTEGER(),
        comment="Any good time (in days) the person has credited against this sentence due to good conduct, a.k.a. time off for good behavior, if applicable.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "incarceration_sentence_history_id",
        existing_type=sa.INTEGER(),
        comment="This primary key should not be used. It only exists because SQLAlchemy requires every table to have a unique primary key.",
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "incarceration_sentence_id",
        existing_type=sa.INTEGER(),
        comment="Unique identifier for a(n) incarceration sentence, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant incarceration sentence information.",
        existing_nullable=False,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "incarceration_type",
        existing_type=postgresql.ENUM(
            "COUNTY_JAIL",
            "EXTERNAL_UNKNOWN",
            "FEDERAL_PRISON",
            "OUT_OF_STATE",
            "STATE_PRISON",
            name="state_incarceration_type",
        ),
        comment="The type of incarceration the person is being sentenced to.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "incarceration_type_raw_text",
        existing_type=sa.VARCHAR(length=255),
        comment="The raw text value of the type of incarceration of this sentence.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "initial_time_served_days",
        existing_type=sa.INTEGER(),
        comment="The amount of any time already served (in days), to possible be credited against the overall sentence duration.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "is_capital_punishment",
        existing_type=sa.BOOLEAN(),
        comment="Whether or not this is a sentence for the death penalty.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "is_life",
        existing_type=sa.BOOLEAN(),
        comment="Whether or not this is a life sentence.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "max_length_days",
        existing_type=sa.INTEGER(),
        comment="The maximum duration of this sentence in days.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "min_length_days",
        existing_type=sa.INTEGER(),
        comment="The minimum duration of this sentence in days.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "parole_eligibility_date",
        existing_type=sa.DATE(),
        comment="The first date under which the person becomes eligible for parole under the terms of this sentence.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "parole_possible",
        existing_type=sa.BOOLEAN(),
        comment="Whether or not the person may be released to parole under the terms of this sentence.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "projected_max_release_date",
        existing_type=sa.DATE(),
        comment="The latest projected date the person may be released from incarceration due to this sentence.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "projected_min_release_date",
        existing_type=sa.DATE(),
        comment="The earliest projected date the person may be released from incarceration due to this sentence.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "sentence_group_id",
        existing_type=sa.INTEGER(),
        comment="Unique identifier for a(n) sentence group, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant sentence group information.",
        existing_nullable=False,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "start_date",
        existing_type=sa.DATE(),
        comment="The date this sentence started.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "state_code",
        existing_type=sa.VARCHAR(length=255),
        comment="The code of the state under whose jurisdiction the sentence was imposed.",
        existing_nullable=False,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "status",
        existing_type=postgresql.ENUM(
            "COMMUTED",
            "COMPLETED",
            "EXTERNAL_UNKNOWN",
            "PARDONED",
            "PRESENT_WITHOUT_INFO",
            "REVOKED",
            "SERVING",
            "SUSPENDED",
            "VACATED",
            name="state_sentence_status",
        ),
        comment="The U.S. state or region that provided the source data.",
        existing_nullable=False,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "status_raw_text",
        existing_type=sa.VARCHAR(length=255),
        comment="The raw text value of the status of the sentence.",
        existing_nullable=True,
    )
    op.create_table_comment(
        "state_incarceration_sentence_history",
        "Represents all updates that have made to a(n) StateIncarcerationSentence object over time.",
        existing_comment=None,
        schema=None,
    )
    op.alter_column(
        "state_incarceration_sentence_incarceration_period_association",
        "incarceration_period_id",
        existing_type=sa.INTEGER(),
        comment="Unique identifier for a(n) incarceration period, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant incarceration period information.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_incarceration_period_association",
        "incarceration_sentence_id",
        existing_type=sa.INTEGER(),
        comment="Unique identifier for a(n) incarceration sentence, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant incarceration sentence information.",
        existing_nullable=True,
    )
    op.create_table_comment(
        "state_incarceration_sentence_incarceration_period_association",
        "Association table that connects incarceration sentences with incarceration periods by their ids.",
        existing_comment=None,
        schema=None,
    )
    op.alter_column(
        "state_incarceration_sentence_supervision_period_association",
        "incarceration_sentence_id",
        existing_type=sa.INTEGER(),
        comment="Unique identifier for a(n) incarceration sentence, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant incarceration sentence information.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_supervision_period_association",
        "supervision_period_id",
        existing_type=sa.INTEGER(),
        comment="Unique identifier for a(n) supervision period, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant supervision period information.",
        existing_nullable=True,
    )
    op.create_table_comment(
        "state_incarceration_sentence_supervision_period_association",
        "Association table that connects incarceration sentences with supervision periods by their ids.",
        existing_comment=None,
        schema=None,
    )
    op.alter_column(
        "state_parole_decision",
        "corrective_action",
        existing_type=sa.VARCHAR(length=255),
        comment="Any corrective actions that must be taken by the person to ensure their parole is granted, if applicable.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision",
        "corrective_action_deadline",
        existing_type=sa.DATE(),
        comment="The date by which any corrective actions must be taken to ensure parole is granted, if applicable.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision",
        "county_code",
        existing_type=sa.VARCHAR(length=255),
        comment="The code of the county under whose jurisdiction the parole hearing is convened.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision",
        "decision_date",
        existing_type=sa.DATE(),
        comment="The date on which the decision was made.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision",
        "decision_outcome",
        existing_type=postgresql.ENUM(
            "EXTERNAL_UNKNOWN",
            "PAROLE_DENIED",
            "PAROLE_GRANTED",
            name="state_parole_decision_outcome",
        ),
        comment="The outcome of the decision.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision",
        "decision_outcome_raw_text",
        existing_type=sa.VARCHAR(length=255),
        comment="The raw text value of the outcome of the decision.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision",
        "decision_reasoning",
        existing_type=sa.VARCHAR(length=255),
        comment="Descriptive notes describing the reasoning behind the decision.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        comment="The unique identifier for the StateParoleDecision, unique within the scope of the source data system.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision",
        "parole_decision_id",
        existing_type=sa.INTEGER(),
        comment="Unique identifier for a(n) parole decision, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to others.",
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text(
            "nextval('state_parole_decision_parole_decision_id_seq'::regclass)"
        ),
    )
    op.alter_column(
        "state_parole_decision",
        "state_code",
        existing_type=sa.VARCHAR(length=255),
        comment="The U.S. state or region that provided the source data.",
        existing_nullable=False,
    )
    op.create_table_comment(
        "state_parole_decision",
        "The StateParoleDecision object represents information about a particular parole hearing deciding whether or not to grant parole to a currently incarcerated person. This includes information about the context of the hearing and also its final decision/outcome.",
        existing_comment=None,
        schema=None,
    )
    op.alter_column(
        "state_parole_decision_decision_agent_association",
        "agent_id",
        existing_type=sa.INTEGER(),
        comment="Unique identifier for a(n) fine, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant fine information.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision_decision_agent_association",
        "parole_decision_id",
        existing_type=sa.INTEGER(),
        comment="Unique identifier for a(n) parole decision, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant parole decision information.",
        existing_nullable=True,
    )
    op.create_table_comment(
        "state_parole_decision_decision_agent_association",
        "Association table that connects parole decisions with agents by their ids.",
        existing_comment=None,
        schema=None,
    )
    op.alter_column(
        "state_parole_decision_history",
        "corrective_action",
        existing_type=sa.VARCHAR(length=255),
        comment="Any corrective actions that must be taken by the person to ensure their parole is granted, if applicable.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision_history",
        "corrective_action_deadline",
        existing_type=sa.DATE(),
        comment="The date by which any corrective actions must be taken to ensure parole is granted, if applicable.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision_history",
        "county_code",
        existing_type=sa.VARCHAR(length=255),
        comment="The code of the county under whose jurisdiction the parole hearing is convened.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision_history",
        "decision_date",
        existing_type=sa.DATE(),
        comment="The date on which the decision was made.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision_history",
        "decision_outcome",
        existing_type=postgresql.ENUM(
            "EXTERNAL_UNKNOWN",
            "PAROLE_DENIED",
            "PAROLE_GRANTED",
            name="state_parole_decision_outcome",
        ),
        comment="The outcome of the decision.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision_history",
        "decision_outcome_raw_text",
        existing_type=sa.VARCHAR(length=255),
        comment="The raw text value of the outcome of the decision.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision_history",
        "decision_reasoning",
        existing_type=sa.VARCHAR(length=255),
        comment="Descriptive notes describing the reasoning behind the decision.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision_history",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        comment="The unique identifier for the StateParoleDecision, unique within the scope of the source data system.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision_history",
        "parole_decision_history_id",
        existing_type=sa.INTEGER(),
        comment="This primary key should not be used. It only exists because SQLAlchemy requires every table to have a unique primary key.",
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "state_parole_decision_history",
        "parole_decision_id",
        existing_type=sa.INTEGER(),
        comment="Unique identifier for a(n) parole decision, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant parole decision information.",
        existing_nullable=False,
    )
    op.alter_column(
        "state_parole_decision_history",
        "state_code",
        existing_type=sa.VARCHAR(length=255),
        comment="The U.S. state or region that provided the source data.",
        existing_nullable=False,
    )
    op.create_table_comment(
        "state_parole_decision_history",
        "Represents all updates that have made to a(n) StateParoleDecision object over time.",
        existing_comment=None,
        schema=None,
    )
    op.alter_column(
        "state_supervision_sentence",
        "sentence_group_id",
        existing_type=sa.INTEGER(),
        comment="Unique identifier for a(n) sentence group, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant sentence group information.",
        existing_nullable=False,
    )
    op.alter_column(
        "state_supervision_sentence_history",
        "sentence_group_id",
        existing_type=sa.INTEGER(),
        comment="Unique identifier for a(n) sentence group, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant sentence group information.",
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "state_supervision_sentence_history",
        "sentence_group_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Unique identifier for a(n) sentence group, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant sentence group information.",
        existing_nullable=False,
    )
    op.alter_column(
        "state_supervision_sentence",
        "sentence_group_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Unique identifier for a(n) sentence group, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant sentence group information.",
        existing_nullable=False,
    )
    op.drop_table_comment(
        "state_parole_decision_history",
        existing_comment="Represents all updates that have made to a(n) StateParoleDecision object over time.",
        schema=None,
    )
    op.alter_column(
        "state_parole_decision_history",
        "state_code",
        existing_type=sa.VARCHAR(length=255),
        comment=None,
        existing_comment="The U.S. state or region that provided the source data.",
        existing_nullable=False,
    )
    op.alter_column(
        "state_parole_decision_history",
        "parole_decision_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Unique identifier for a(n) parole decision, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant parole decision information.",
        existing_nullable=False,
    )
    op.alter_column(
        "state_parole_decision_history",
        "parole_decision_history_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="This primary key should not be used. It only exists because SQLAlchemy requires every table to have a unique primary key.",
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "state_parole_decision_history",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        comment=None,
        existing_comment="The unique identifier for the StateParoleDecision, unique within the scope of the source data system.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision_history",
        "decision_reasoning",
        existing_type=sa.VARCHAR(length=255),
        comment=None,
        existing_comment="Descriptive notes describing the reasoning behind the decision.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision_history",
        "decision_outcome_raw_text",
        existing_type=sa.VARCHAR(length=255),
        comment=None,
        existing_comment="The raw text value of the outcome of the decision.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision_history",
        "decision_outcome",
        existing_type=postgresql.ENUM(
            "EXTERNAL_UNKNOWN",
            "PAROLE_DENIED",
            "PAROLE_GRANTED",
            name="state_parole_decision_outcome",
        ),
        comment=None,
        existing_comment="The outcome of the decision.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision_history",
        "decision_date",
        existing_type=sa.DATE(),
        comment=None,
        existing_comment="The date on which the decision was made.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision_history",
        "county_code",
        existing_type=sa.VARCHAR(length=255),
        comment=None,
        existing_comment="The code of the county under whose jurisdiction the parole hearing is convened.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision_history",
        "corrective_action_deadline",
        existing_type=sa.DATE(),
        comment=None,
        existing_comment="The date by which any corrective actions must be taken to ensure parole is granted, if applicable.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision_history",
        "corrective_action",
        existing_type=sa.VARCHAR(length=255),
        comment=None,
        existing_comment="Any corrective actions that must be taken by the person to ensure their parole is granted, if applicable.",
        existing_nullable=True,
    )
    op.drop_table_comment(
        "state_parole_decision_decision_agent_association",
        existing_comment="Association table that connects parole decisions with agents by their ids.",
        schema=None,
    )
    op.alter_column(
        "state_parole_decision_decision_agent_association",
        "parole_decision_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Unique identifier for a(n) parole decision, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant parole decision information.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision_decision_agent_association",
        "agent_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Unique identifier for a(n) fine, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant fine information.",
        existing_nullable=True,
    )
    op.drop_table_comment(
        "state_parole_decision",
        existing_comment="The StateParoleDecision object represents information about a particular parole hearing deciding whether or not to grant parole to a currently incarcerated person. This includes information about the context of the hearing and also its final decision/outcome.",
        schema=None,
    )
    op.alter_column(
        "state_parole_decision",
        "state_code",
        existing_type=sa.VARCHAR(length=255),
        comment=None,
        existing_comment="The U.S. state or region that provided the source data.",
        existing_nullable=False,
    )
    op.alter_column(
        "state_parole_decision",
        "parole_decision_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Unique identifier for a(n) parole decision, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to others.",
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text(
            "nextval('state_parole_decision_parole_decision_id_seq'::regclass)"
        ),
    )
    op.alter_column(
        "state_parole_decision",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        comment=None,
        existing_comment="The unique identifier for the StateParoleDecision, unique within the scope of the source data system.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision",
        "decision_reasoning",
        existing_type=sa.VARCHAR(length=255),
        comment=None,
        existing_comment="Descriptive notes describing the reasoning behind the decision.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision",
        "decision_outcome_raw_text",
        existing_type=sa.VARCHAR(length=255),
        comment=None,
        existing_comment="The raw text value of the outcome of the decision.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision",
        "decision_outcome",
        existing_type=postgresql.ENUM(
            "EXTERNAL_UNKNOWN",
            "PAROLE_DENIED",
            "PAROLE_GRANTED",
            name="state_parole_decision_outcome",
        ),
        comment=None,
        existing_comment="The outcome of the decision.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision",
        "decision_date",
        existing_type=sa.DATE(),
        comment=None,
        existing_comment="The date on which the decision was made.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision",
        "county_code",
        existing_type=sa.VARCHAR(length=255),
        comment=None,
        existing_comment="The code of the county under whose jurisdiction the parole hearing is convened.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision",
        "corrective_action_deadline",
        existing_type=sa.DATE(),
        comment=None,
        existing_comment="The date by which any corrective actions must be taken to ensure parole is granted, if applicable.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_parole_decision",
        "corrective_action",
        existing_type=sa.VARCHAR(length=255),
        comment=None,
        existing_comment="Any corrective actions that must be taken by the person to ensure their parole is granted, if applicable.",
        existing_nullable=True,
    )
    op.drop_table_comment(
        "state_incarceration_sentence_supervision_period_association",
        existing_comment="Association table that connects incarceration sentences with supervision periods by their ids.",
        schema=None,
    )
    op.alter_column(
        "state_incarceration_sentence_supervision_period_association",
        "supervision_period_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Unique identifier for a(n) supervision period, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant supervision period information.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_supervision_period_association",
        "incarceration_sentence_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Unique identifier for a(n) incarceration sentence, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant incarceration sentence information.",
        existing_nullable=True,
    )
    op.drop_table_comment(
        "state_incarceration_sentence_incarceration_period_association",
        existing_comment="Association table that connects incarceration sentences with incarceration periods by their ids.",
        schema=None,
    )
    op.alter_column(
        "state_incarceration_sentence_incarceration_period_association",
        "incarceration_sentence_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Unique identifier for a(n) incarceration sentence, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant incarceration sentence information.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_incarceration_period_association",
        "incarceration_period_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Unique identifier for a(n) incarceration period, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant incarceration period information.",
        existing_nullable=True,
    )
    op.drop_table_comment(
        "state_incarceration_sentence_history",
        existing_comment="Represents all updates that have made to a(n) StateIncarcerationSentence object over time.",
        schema=None,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "status_raw_text",
        existing_type=sa.VARCHAR(length=255),
        comment=None,
        existing_comment="The raw text value of the status of the sentence.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "status",
        existing_type=postgresql.ENUM(
            "COMMUTED",
            "COMPLETED",
            "EXTERNAL_UNKNOWN",
            "PARDONED",
            "PRESENT_WITHOUT_INFO",
            "REVOKED",
            "SERVING",
            "SUSPENDED",
            "VACATED",
            name="state_sentence_status",
        ),
        comment=None,
        existing_comment="The U.S. state or region that provided the source data.",
        existing_nullable=False,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "state_code",
        existing_type=sa.VARCHAR(length=255),
        comment=None,
        existing_comment="The code of the state under whose jurisdiction the sentence was imposed.",
        existing_nullable=False,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "start_date",
        existing_type=sa.DATE(),
        comment=None,
        existing_comment="The date this sentence started.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "sentence_group_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Unique identifier for a(n) sentence group, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant sentence group information.",
        existing_nullable=False,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "projected_min_release_date",
        existing_type=sa.DATE(),
        comment=None,
        existing_comment="The earliest projected date the person may be released from incarceration due to this sentence.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "projected_max_release_date",
        existing_type=sa.DATE(),
        comment=None,
        existing_comment="The latest projected date the person may be released from incarceration due to this sentence.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "parole_possible",
        existing_type=sa.BOOLEAN(),
        comment=None,
        existing_comment="Whether or not the person may be released to parole under the terms of this sentence.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "parole_eligibility_date",
        existing_type=sa.DATE(),
        comment=None,
        existing_comment="The first date under which the person becomes eligible for parole under the terms of this sentence.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "min_length_days",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="The minimum duration of this sentence in days.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "max_length_days",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="The maximum duration of this sentence in days.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "is_life",
        existing_type=sa.BOOLEAN(),
        comment=None,
        existing_comment="Whether or not this is a life sentence.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "is_capital_punishment",
        existing_type=sa.BOOLEAN(),
        comment=None,
        existing_comment="Whether or not this is a sentence for the death penalty.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "initial_time_served_days",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="The amount of any time already served (in days), to possible be credited against the overall sentence duration.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "incarceration_type_raw_text",
        existing_type=sa.VARCHAR(length=255),
        comment=None,
        existing_comment="The raw text value of the type of incarceration of this sentence.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "incarceration_type",
        existing_type=postgresql.ENUM(
            "COUNTY_JAIL",
            "EXTERNAL_UNKNOWN",
            "FEDERAL_PRISON",
            "OUT_OF_STATE",
            "STATE_PRISON",
            name="state_incarceration_type",
        ),
        comment=None,
        existing_comment="The type of incarceration the person is being sentenced to.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "incarceration_sentence_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Unique identifier for a(n) incarceration sentence, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant incarceration sentence information.",
        existing_nullable=False,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "incarceration_sentence_history_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="This primary key should not be used. It only exists because SQLAlchemy requires every table to have a unique primary key.",
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "good_time_days",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Any good time (in days) the person has credited against this sentence due to good conduct, a.k.a. time off for good behavior, if applicable.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        comment=None,
        existing_comment="The unique identifier for the StateIncarcerationSentence, unique within the scope of the source data system.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "earned_time_days",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Any earned time (in days) the person has credited against this sentence due to participation in programming designed to reduce the likelihood of re-offense, if applicable.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "date_imposed",
        existing_type=sa.DATE(),
        comment=None,
        existing_comment="The date this sentence was imposed, e.g. the date of actual sentencing, but not necessarily the date the person started serving the sentence",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "county_code",
        existing_type=sa.VARCHAR(length=255),
        comment=None,
        existing_comment="The code of the county under whose jurisdiction the sentence was imposed.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence_history",
        "completion_date",
        existing_type=sa.DATE(),
        comment=None,
        existing_comment="The date this sentence has been completed.",
        existing_nullable=True,
    )
    op.drop_table_comment(
        "state_incarceration_sentence",
        existing_comment="The StateIncarcerationSentence object represents information about a single sentence to a period of incarceration imposed as part of a group of related sentences. Multiple distinct, related sentences to incarceration should be captured as separate incarceration sentence objects within the same group. These sentences may, for example, be concurrent or consecutive to one another. Like the sentence group, the StateIncarcerationSentence represents only the imposition of some sentence terms, not an actual period of incarceration experienced by the person.<br /><br />A StateIncarcerationSentence can reference many charges, and each charge can reference many sentences -- the relationship is many:many.<br /><br />A StateIncarcerationSentence can have multiple child StateIncarcerationPeriods. It can also have child StateSupervisionPeriods since a sentence to incarceration may result in a person being paroled, for example. In some jurisdictions, this would be modeled as distinct sentences of incarceration and supervision, but this is not universal.",
        schema=None,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "status_raw_text",
        existing_type=sa.VARCHAR(length=255),
        comment=None,
        existing_comment="The raw text value of the status of the sentence.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "status",
        existing_type=postgresql.ENUM(
            "COMMUTED",
            "COMPLETED",
            "EXTERNAL_UNKNOWN",
            "PARDONED",
            "PRESENT_WITHOUT_INFO",
            "REVOKED",
            "SERVING",
            "SUSPENDED",
            "VACATED",
            name="state_sentence_status",
        ),
        comment=None,
        existing_comment="The U.S. state or region that provided the source data.",
        existing_nullable=False,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "state_code",
        existing_type=sa.VARCHAR(length=255),
        comment=None,
        existing_comment="The code of the state under whose jurisdiction the sentence was imposed.",
        existing_nullable=False,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "start_date",
        existing_type=sa.DATE(),
        comment=None,
        existing_comment="The date this sentence started.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "sentence_group_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Unique identifier for a(n) sentence group, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant sentence group information.",
        existing_nullable=False,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "projected_min_release_date",
        existing_type=sa.DATE(),
        comment=None,
        existing_comment="The earliest projected date the person may be released from incarceration due to this sentence.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "projected_max_release_date",
        existing_type=sa.DATE(),
        comment=None,
        existing_comment="The latest projected date the person may be released from incarceration due to this sentence.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "parole_possible",
        existing_type=sa.BOOLEAN(),
        comment=None,
        existing_comment="Whether or not the person may be released to parole under the terms of this sentence.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "parole_eligibility_date",
        existing_type=sa.DATE(),
        comment=None,
        existing_comment="The first date under which the person becomes eligible for parole under the terms of this sentence.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "min_length_days",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="The minimum duration of this sentence in days.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "max_length_days",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="The maximum duration of this sentence in days.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "is_life",
        existing_type=sa.BOOLEAN(),
        comment=None,
        existing_comment="Whether or not this is a life sentence.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "is_capital_punishment",
        existing_type=sa.BOOLEAN(),
        comment=None,
        existing_comment="Whether or not this is a sentence for the death penalty.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "initial_time_served_days",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="The amount of any time already served (in days), to possible be credited against the overall sentence duration.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "incarceration_type_raw_text",
        existing_type=sa.VARCHAR(length=255),
        comment=None,
        existing_comment="The raw text value of the type of incarceration of this sentence.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "incarceration_type",
        existing_type=postgresql.ENUM(
            "COUNTY_JAIL",
            "EXTERNAL_UNKNOWN",
            "FEDERAL_PRISON",
            "OUT_OF_STATE",
            "STATE_PRISON",
            name="state_incarceration_type",
        ),
        comment=None,
        existing_comment="The type of incarceration the person is being sentenced to.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "incarceration_sentence_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Unique identifier for a(n) incarceration sentence, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to others.",
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text(
            "nextval('state_incarceration_sentence_incarceration_sentence_id_seq'::regclass)"
        ),
    )
    op.alter_column(
        "state_incarceration_sentence",
        "good_time_days",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Any good time (in days) the person has credited against this sentence due to good conduct, a.k.a. time off for good behavior, if applicable.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "external_id",
        existing_type=sa.VARCHAR(length=255),
        comment=None,
        existing_comment="The unique identifier for the StateIncarcerationSentence, unique within the scope of the source data system.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "earned_time_days",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Any earned time (in days) the person has credited against this sentence due to participation in programming designed to reduce the likelihood of re-offense, if applicable.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "date_imposed",
        existing_type=sa.DATE(),
        comment=None,
        existing_comment="The date this sentence was imposed, e.g. the date of actual sentencing, but not necessarily the date the person started serving the sentence",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "county_code",
        existing_type=sa.VARCHAR(length=255),
        comment=None,
        existing_comment="The code of the county under whose jurisdiction the sentence was imposed.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_sentence",
        "completion_date",
        existing_type=sa.DATE(),
        comment=None,
        existing_comment="The date this sentence has been completed.",
        existing_nullable=True,
    )
    op.drop_table_comment(
        "state_incarceration_period_program_assignment_association",
        existing_comment="Association table that connects incarceration periods with program assignments by their ids.",
        schema=None,
    )
    op.alter_column(
        "state_incarceration_period_program_assignment_association",
        "program_assignment_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Unique identifier for a(n) program assignment, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant program assignment information.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_incarceration_period_program_assignment_association",
        "incarceration_period_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Unique identifier for a(n) incarceration period, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant incarceration period information.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_fine_history",
        "sentence_group_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Unique identifier for a(n) sentence group, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant sentence group information.",
        existing_nullable=False,
    )
    op.alter_column(
        "state_fine",
        "sentence_group_id",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Unique identifier for a(n) sentence group, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant sentence group information.",
        existing_nullable=False,
    )
    # ### end Alembic commands ###
