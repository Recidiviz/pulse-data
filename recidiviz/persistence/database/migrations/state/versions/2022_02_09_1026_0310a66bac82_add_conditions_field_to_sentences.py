# pylint: skip-file
"""add_conditions_field_to_sentences

Revision ID: 0310a66bac82
Revises: c7f176e41090
Create Date: 2022-02-09 10:26:40.017467

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "0310a66bac82"
down_revision = "c7f176e41090"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "state_incarceration_sentence",
        sa.Column(
            "conditions",
            sa.Text(),
            nullable=True,
            comment="The conditions of this incarceration sentence which the person must follow to avoid a disciplinary response. If this field is empty, there may still be applicable conditions that apply to someone's current term of supervision/incarceration - either inherited from another ongoing sentence or the current supervision term. (See conditions on StateSupervisionPeriod).",
        ),
    )
    op.add_column(
        "state_incarceration_sentence_history",
        sa.Column(
            "conditions",
            sa.Text(),
            nullable=True,
            comment="The conditions of this incarceration sentence which the person must follow to avoid a disciplinary response. If this field is empty, there may still be applicable conditions that apply to someone's current term of supervision/incarceration - either inherited from another ongoing sentence or the current supervision term. (See conditions on StateSupervisionPeriod).",
        ),
    )
    op.alter_column(
        "state_supervision_period",
        "conditions",
        existing_type=sa.TEXT(),
        comment="The conditions of this period of supervision which the person must followto avoid a disciplinary response. If this is empty, there may still be applicable conditions that apply to the whole term of the sentence. (See conditions on StateSupervisionSentence/StateIncarcerationSentence)",
        existing_comment="The conditions of this period of supervision which the person must follow to avoid a disciplinary response.",
        existing_nullable=True,
    )
    op.alter_column(
        "state_supervision_period_history",
        "conditions",
        existing_type=sa.TEXT(),
        comment="The conditions of this period of supervision which the person must followto avoid a disciplinary response. If this is empty, there may still be applicable conditions that apply to the whole term of the sentence. (See conditions on StateSupervisionSentence/StateIncarcerationSentence)",
        existing_comment="The conditions of this period of supervision which the person must follow to avoid a disciplinary response.",
        existing_nullable=True,
    )
    op.add_column(
        "state_supervision_sentence",
        sa.Column(
            "conditions",
            sa.Text(),
            nullable=True,
            comment="The conditions of this supervision sentence which the person must follow to avoid a disciplinary response. If this field is empty, there may still be applicable conditions that apply to someone's current term of supervision/incarceration - either inherited from another ongoing sentence or the current supervision term. (See conditions on StateSupervisionPeriod).",
        ),
    )
    op.add_column(
        "state_supervision_sentence_history",
        sa.Column(
            "conditions",
            sa.Text(),
            nullable=True,
            comment="The conditions of this supervision sentence which the person must follow to avoid a disciplinary response. If this field is empty, there may still be applicable conditions that apply to someone's current term of supervision/incarceration - either inherited from another ongoing sentence or the current supervision term. (See conditions on StateSupervisionPeriod).",
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("state_supervision_sentence_history", "conditions")
    op.drop_column("state_supervision_sentence", "conditions")
    op.alter_column(
        "state_supervision_period_history",
        "conditions",
        existing_type=sa.TEXT(),
        comment="The conditions of this period of supervision which the person must follow to avoid a disciplinary response.",
        existing_comment="The conditions of this period of supervision which the person must followto avoid a disciplinary response. If this is empty, there may still be applicable conditions that apply to the whole term of the sentence. (See conditions on StateSupervisionSentence/StateIncarcerationSentence)",
        existing_nullable=True,
    )
    op.alter_column(
        "state_supervision_period",
        "conditions",
        existing_type=sa.TEXT(),
        comment="The conditions of this period of supervision which the person must follow to avoid a disciplinary response.",
        existing_comment="The conditions of this period of supervision which the person must followto avoid a disciplinary response. If this is empty, there may still be applicable conditions that apply to the whole term of the sentence. (See conditions on StateSupervisionSentence/StateIncarcerationSentence)",
        existing_nullable=True,
    )
    op.drop_column("state_incarceration_sentence_history", "conditions")
    op.drop_column("state_incarceration_sentence", "conditions")
    # ### end Alembic commands ###
