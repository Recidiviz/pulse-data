# pylint: skip-file
"""delete_parole_decision

Revision ID: 11cc8fb6f6a2
Revises: fc6b9739c557
Create Date: 2022-01-14 15:03:00.243909

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "11cc8fb6f6a2"
down_revision = "fc6b9739c557"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        "ix_state_parole_decision_county_code", table_name="state_parole_decision"
    )
    op.drop_index(
        "ix_state_parole_decision_external_id", table_name="state_parole_decision"
    )
    op.drop_index(
        "ix_state_parole_decision_incarceration_period_id",
        table_name="state_parole_decision",
    )
    op.drop_index(
        "ix_state_parole_decision_person_id", table_name="state_parole_decision"
    )
    op.drop_index(
        "ix_state_parole_decision_state_code", table_name="state_parole_decision"
    )
    op.drop_index(
        "ix_state_parole_decision_history_county_code",
        table_name="state_parole_decision_history",
    )
    op.drop_index(
        "ix_state_parole_decision_history_external_id",
        table_name="state_parole_decision_history",
    )
    op.drop_index(
        "ix_state_parole_decision_history_incarceration_period_id",
        table_name="state_parole_decision_history",
    )
    op.drop_index(
        "ix_state_parole_decision_history_parole_decision_id",
        table_name="state_parole_decision_history",
    )
    op.drop_index(
        "ix_state_parole_decision_history_person_id",
        table_name="state_parole_decision_history",
    )
    op.drop_index(
        "ix_state_parole_decision_history_state_code",
        table_name="state_parole_decision_history",
    )
    op.drop_index(
        "ix_state_parole_decision_decision_agent_association_agent_id",
        table_name="state_parole_decision_decision_agent_association",
    )
    op.drop_index(
        "ix_state_parole_decision_decision_agent_association_par_acb6",
        table_name="state_parole_decision_decision_agent_association",
    )
    op.drop_table("state_parole_decision_decision_agent_association")
    op.drop_table("state_parole_decision_history")
    op.drop_table("state_parole_decision")
    op.execute("DROP TYPE state_parole_decision_outcome;")
    op.create_table_comment(
        "state_incarceration_period",
        "The StateIncarcerationPeriod object represents information about a single period of incarceration, defined as a contiguous stay by a particular person in a particular facility. As a person transfers from facility to facility, these are modeled as multiple abutting incarceration periods. This also extends to temporary transfers to, say, hospitals or court appearances. The sequence of incarceration periods can be squashed into longer conceptual periods (e.g. from the first admission to the final release for a particular sentence) for analytical purposes, such as measuring recidivism and revocation -- this is done with a fine-grained examination of the admission dates, admission reasons, release dates, and release reasons of consecutive incarceration periods.<br /><br />Handling of incarceration periods is a crucial aspect of our platform and involves work in jurisdictional ingest mappings, entity matching, and calculation. Fortunately, this means that we have practice working with varied representations of this information.",
        existing_comment="The StateIncarcerationPeriod object represents information about a single period of incarceration, defined as a contiguous stay by a particular person in a particular facility. As a person transfers from facility to facility, these are modeled as multiple abutting incarceration periods. This also extends to temporary transfers to, say, hospitals or court appearances. The sequence of incarceration periods can be squashed into longer conceptual periods (e.g. from the first admission to the final release for a particular sentence) for analytical purposes, such as measuring recidivism and revocation -- this is done with a fine-grained examination of the admission dates, admission reasons, release dates, and release reasons of consecutive incarceration periods.<br /><br />Handling of incarceration periods is a crucial aspect of our platform and involves work in jurisdictional ingest mappings, entity matching, and calculation. Fortunately, this means that we have practice working with varied representations of this information.<br /><br />Incarceration Periods can be children of either Incarceration Sentences or Supervision Sentences, for reasons established in the descriptions of those objects. Incarceration periods have zero to many Parole Decisions as children.",
        schema=None,
    )
    op.create_table_comment(
        "state_supervision_period",
        "The StateSupervisionPeriod object represents information about a single period of supervision, defined as a contiguous period of custody for a particular person under a particular jurisdiction. As a person transfers between supervising locations, these are modeled as multiple abutting supervision periods. Multiple periods of supervision for a particular person may be overlapping, due to extended periods of supervision that are temporarily interrupted by, say, periods of incarceration, or periods of supervision stemming from different charges.",
        existing_comment="The StateSupervisionPeriod object represents information about a single period of supervision, defined as a contiguous period of custody for a particular person under a particular jurisdiction. As a person transfers between supervising locations, these are modeled as multiple abutting supervision periods. Multiple periods of supervision for a particular person may be overlapping, due to extended periods of supervision that are temporarily interrupted by, say, periods of incarceration, or periods of supervision stemming from different charges.<br/><br />StateSupervisionPeriods can be children of either StateIncarcerationSentences or StateSupervisionSentences, for reasons established in the descriptions of those objects.<br /><br />StateSupervisionPeriods have zero to many StateSupervisionViolations as children.",
        schema=None,
    )


def downgrade() -> None:
    op.create_table(
        "state_parole_decision",
        sa.Column(
            "external_id",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
            comment="The unique identifier for the StateParoleDecision, unique within the scope of the source data system.",
        ),
        sa.Column(
            "decision_date",
            sa.DATE(),
            autoincrement=False,
            nullable=True,
            comment="The date on which the decision was made.",
        ),
        sa.Column(
            "corrective_action_deadline",
            sa.DATE(),
            autoincrement=False,
            nullable=True,
            comment="The date by which any corrective actions must be taken to ensure parole is granted, if applicable.",
        ),
        sa.Column(
            "state_code",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=False,
            comment="The U.S. state or region that provided the source data.",
        ),
        sa.Column(
            "county_code",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
            comment="The code of the county under whose jurisdiction the parole hearing is convened.",
        ),
        sa.Column(
            "decision_outcome",
            postgresql.ENUM(
                "EXTERNAL_UNKNOWN",
                "PAROLE_DENIED",
                "PAROLE_GRANTED",
                name="state_parole_decision_outcome",
            ),
            autoincrement=False,
            nullable=True,
            comment="The outcome of the decision.",
        ),
        sa.Column(
            "decision_outcome_raw_text",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
            comment="The raw text value of the outcome of the decision.",
        ),
        sa.Column(
            "decision_reasoning",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
            comment="Descriptive notes describing the reasoning behind the decision.",
        ),
        sa.Column(
            "corrective_action",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
            comment="Any corrective actions that must be taken by the person to ensure their parole is granted, if applicable.",
        ),
        sa.Column(
            "parole_decision_id",
            sa.INTEGER(),
            autoincrement=True,
            nullable=False,
            comment="Unique identifier for a(n) parole decision, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to others.",
        ),
        sa.Column(
            "incarceration_period_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
            comment="Unique identifier for a(n) incarceration period, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant incarceration period information.",
        ),
        sa.Column(
            "person_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
            comment="Unique identifier for a(n) person, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant person information.",
        ),
        sa.ForeignKeyConstraint(
            ["incarceration_period_id"],
            ["state_incarceration_period.incarceration_period_id"],
            name="state_parole_decision_incarceration_period_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["person_id"],
            ["state_person.person_id"],
            name="state_parole_decision_person_id_fkey",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.PrimaryKeyConstraint(
            "parole_decision_id", name="state_parole_decision_pkey"
        ),
        sa.UniqueConstraint(
            "state_code",
            "external_id",
            name="parole_decision_external_ids_unique_within_state",
        ),
    )
    op.create_table(
        "state_parole_decision_decision_agent_association",
        sa.Column(
            "parole_decision_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
            comment="Unique identifier for a(n) parole decision, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant parole decision information.",
        ),
        sa.Column(
            "agent_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
            comment="Unique identifier for a(n) fine, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant fine information.",
        ),
        sa.ForeignKeyConstraint(
            ["agent_id"],
            ["state_agent.agent_id"],
            name="state_parole_decision_decision_agent_association_agent_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["parole_decision_id"],
            ["state_parole_decision.parole_decision_id"],
            name="state_parole_decision_decision_agent_as_parole_decision_id_fkey",
        ),
    )
    op.create_index(
        "ix_state_parole_decision_decision_agent_association_par_acb6",
        "state_parole_decision_decision_agent_association",
        ["parole_decision_id"],
        unique=False,
    )
    op.create_index(
        "ix_state_parole_decision_decision_agent_association_agent_id",
        "state_parole_decision_decision_agent_association",
        ["agent_id"],
        unique=False,
    )
    op.create_table(
        "state_parole_decision_history",
        sa.Column(
            "valid_from",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
            comment="Timestamp on which the columns started having the associated values.",
        ),
        sa.Column(
            "valid_to",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
            comment="Timestamp on which the columns stopped having the associated values.",
        ),
        sa.Column(
            "external_id",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
            comment="The unique identifier for the StateParoleDecision, unique within the scope of the source data system.",
        ),
        sa.Column(
            "decision_date",
            sa.DATE(),
            autoincrement=False,
            nullable=True,
            comment="The date on which the decision was made.",
        ),
        sa.Column(
            "corrective_action_deadline",
            sa.DATE(),
            autoincrement=False,
            nullable=True,
            comment="The date by which any corrective actions must be taken to ensure parole is granted, if applicable.",
        ),
        sa.Column(
            "state_code",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=False,
            comment="The U.S. state or region that provided the source data.",
        ),
        sa.Column(
            "county_code",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
            comment="The code of the county under whose jurisdiction the parole hearing is convened.",
        ),
        sa.Column(
            "decision_outcome",
            postgresql.ENUM(
                "EXTERNAL_UNKNOWN",
                "PAROLE_DENIED",
                "PAROLE_GRANTED",
                name="state_parole_decision_outcome",
            ),
            autoincrement=False,
            nullable=True,
            comment="The outcome of the decision.",
        ),
        sa.Column(
            "decision_outcome_raw_text",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
            comment="The raw text value of the outcome of the decision.",
        ),
        sa.Column(
            "decision_reasoning",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
            comment="Descriptive notes describing the reasoning behind the decision.",
        ),
        sa.Column(
            "corrective_action",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
            comment="Any corrective actions that must be taken by the person to ensure their parole is granted, if applicable.",
        ),
        sa.Column(
            "parole_decision_history_id",
            sa.INTEGER(),
            autoincrement=True,
            nullable=False,
            comment="This primary key should not be used. It only exists because SQLAlchemy requires every table to have a unique primary key.",
        ),
        sa.Column(
            "parole_decision_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
            comment="Unique identifier for a(n) parole decision, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant parole decision information.",
        ),
        sa.Column(
            "incarceration_period_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
            comment="Unique identifier for a(n) incarceration period, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant incarceration period information.",
        ),
        sa.Column(
            "person_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
            comment="Unique identifier for a(n) person, generated automatically by the Recidiviz system. This identifier is not stable over time (it may change if historical data is re-ingested), but should be used within the context of a given dataset to connect this object to relevant person information.",
        ),
        sa.ForeignKeyConstraint(
            ["incarceration_period_id"],
            ["state_incarceration_period.incarceration_period_id"],
            name="state_parole_decision_history_incarceration_period_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["parole_decision_id"],
            ["state_parole_decision.parole_decision_id"],
            name="state_parole_decision_history_parole_decision_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["person_id"],
            ["state_person.person_id"],
            name="state_parole_decision_history_person_id_fkey",
            initially="DEFERRED",
            deferrable=True,
        ),
        sa.PrimaryKeyConstraint(
            "parole_decision_history_id", name="state_parole_decision_history_pkey"
        ),
    )
    op.create_index(
        "ix_state_parole_decision_history_state_code",
        "state_parole_decision_history",
        ["state_code"],
        unique=False,
    )
    op.create_index(
        "ix_state_parole_decision_history_person_id",
        "state_parole_decision_history",
        ["person_id"],
        unique=False,
    )
    op.create_index(
        "ix_state_parole_decision_history_parole_decision_id",
        "state_parole_decision_history",
        ["parole_decision_id"],
        unique=False,
    )
    op.create_index(
        "ix_state_parole_decision_history_incarceration_period_id",
        "state_parole_decision_history",
        ["incarceration_period_id"],
        unique=False,
    )
    op.create_index(
        "ix_state_parole_decision_history_external_id",
        "state_parole_decision_history",
        ["external_id"],
        unique=False,
    )
    op.create_index(
        "ix_state_parole_decision_history_county_code",
        "state_parole_decision_history",
        ["county_code"],
        unique=False,
    )

    op.create_index(
        "ix_state_parole_decision_state_code",
        "state_parole_decision",
        ["state_code"],
        unique=False,
    )
    op.create_index(
        "ix_state_parole_decision_person_id",
        "state_parole_decision",
        ["person_id"],
        unique=False,
    )
    op.create_index(
        "ix_state_parole_decision_incarceration_period_id",
        "state_parole_decision",
        ["incarceration_period_id"],
        unique=False,
    )
    op.create_index(
        "ix_state_parole_decision_external_id",
        "state_parole_decision",
        ["external_id"],
        unique=False,
    )
    op.create_index(
        "ix_state_parole_decision_county_code",
        "state_parole_decision",
        ["county_code"],
        unique=False,
    )
    op.create_table_comment(
        "state_supervision_period",
        "The StateSupervisionPeriod object represents information about a single period of supervision, defined as a contiguous period of custody for a particular person under a particular jurisdiction. As a person transfers between supervising locations, these are modeled as multiple abutting supervision periods. Multiple periods of supervision for a particular person may be overlapping, due to extended periods of supervision that are temporarily interrupted by, say, periods of incarceration, or periods of supervision stemming from different charges.<br/><br />StateSupervisionPeriods can be children of either StateIncarcerationSentences or StateSupervisionSentences, for reasons established in the descriptions of those objects.<br /><br />StateSupervisionPeriods have zero to many StateSupervisionViolations as children.",
        existing_comment="The StateSupervisionPeriod object represents information about a single period of supervision, defined as a contiguous period of custody for a particular person under a particular jurisdiction. As a person transfers between supervising locations, these are modeled as multiple abutting supervision periods. Multiple periods of supervision for a particular person may be overlapping, due to extended periods of supervision that are temporarily interrupted by, say, periods of incarceration, or periods of supervision stemming from different charges.",
        schema=None,
    )
    op.create_table_comment(
        "state_incarceration_period",
        "The StateIncarcerationPeriod object represents information about a single period of incarceration, defined as a contiguous stay by a particular person in a particular facility. As a person transfers from facility to facility, these are modeled as multiple abutting incarceration periods. This also extends to temporary transfers to, say, hospitals or court appearances. The sequence of incarceration periods can be squashed into longer conceptual periods (e.g. from the first admission to the final release for a particular sentence) for analytical purposes, such as measuring recidivism and revocation -- this is done with a fine-grained examination of the admission dates, admission reasons, release dates, and release reasons of consecutive incarceration periods.<br /><br />Handling of incarceration periods is a crucial aspect of our platform and involves work in jurisdictional ingest mappings, entity matching, and calculation. Fortunately, this means that we have practice working with varied representations of this information.<br /><br />Incarceration Periods can be children of either Incarceration Sentences or Supervision Sentences, for reasons established in the descriptions of those objects. Incarceration periods have zero to many Parole Decisions as children.",
        existing_comment="The StateIncarcerationPeriod object represents information about a single period of incarceration, defined as a contiguous stay by a particular person in a particular facility. As a person transfers from facility to facility, these are modeled as multiple abutting incarceration periods. This also extends to temporary transfers to, say, hospitals or court appearances. The sequence of incarceration periods can be squashed into longer conceptual periods (e.g. from the first admission to the final release for a particular sentence) for analytical purposes, such as measuring recidivism and revocation -- this is done with a fine-grained examination of the admission dates, admission reasons, release dates, and release reasons of consecutive incarceration periods.<br /><br />Handling of incarceration periods is a crucial aspect of our platform and involves work in jurisdictional ingest mappings, entity matching, and calculation. Fortunately, this means that we have practice working with varied representations of this information.",
        schema=None,
    )
