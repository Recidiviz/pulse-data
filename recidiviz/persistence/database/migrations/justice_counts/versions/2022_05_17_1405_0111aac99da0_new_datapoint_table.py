# pylint: skip-file
"""new datapoint table

Revision ID: 0111aac99da0
Revises: 85cb94495d01
Create Date: 2022-05-17 14:05:45.282989

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "0111aac99da0"
down_revision = "85cb94495d01"
branch_labels = None
depends_on = None

value_enum_type = postgresql.ENUM(
    "TEXT",
    "NUMBER",
    "BOOLEAN",
    name="valuetype",
)


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "datapoint",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("report_id", sa.Integer(), nullable=False),
        sa.Column("metric_definition_key", sa.String(), nullable=False),
        sa.Column("context_key", sa.String(), nullable=True),
        sa.Column(
            "value_type",
            value_enum_type,
            nullable=True,
        ),
        sa.Column("start_date", sa.Date(), nullable=False),
        sa.Column("end_date", sa.Date(), nullable=False),
        sa.Column(
            "dimension_identifier_to_member",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
        sa.Column("value", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["report_id"], ["report.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "report_id",
            "start_date",
            "end_date",
            "dimension_identifier_to_member",
            "context_key",
            "metric_definition_key",
        ),
    )
    op.create_table(
        "datapoint_history",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("datapoint_id", sa.Integer(), nullable=False),
        sa.Column("user_account_id", sa.Integer(), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=False),
        sa.Column("old_value", sa.String(), nullable=False),
        sa.Column("new_value", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["datapoint_id"], ["datapoint.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["user_account_id"],
            ["user_account.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("cell_history")
    op.drop_table("context")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "context",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "report_table_instance_id",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("key", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("value", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["report_table_instance_id"],
            ["report_table_instance.id"],
            name="context_report_table_instance_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="context_pkey"),
        sa.UniqueConstraint(
            "report_table_instance_id",
            "key",
            name="context_report_table_instance_id_key_key",
        ),
    )
    op.create_table(
        "cell_history",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("cell_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("user_account_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "timestamp", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column("old_value", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("new_value", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["cell_id"],
            ["cell.id"],
            name="cell_history_cell_id_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_account_id"],
            ["user_account.id"],
            name="cell_history_user_account_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id", name="cell_history_pkey"),
    )
    op.drop_table("datapoint_history")
    op.drop_table("datapoint")
    value_enum_type.drop(op.get_bind())
    # ### end Alembic commands ###
