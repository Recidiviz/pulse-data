# pylint: skip-file
"""recreate_tables

Revision ID: 90a8ab163f69
Revises: 
Create Date: 2020-11-18 16:01:51.583937

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '90a8ab163f69'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ca_facility_aggregate',
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.Column('fips', sa.String(length=5), nullable=False),
    sa.Column('report_date', sa.Date(), nullable=False),
    sa.Column('aggregation_window', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'YEARLY', name='time_granularity'), nullable=False),
    sa.Column('report_frequency', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'YEARLY', name='time_granularity'), nullable=False),
    sa.Column('jurisdiction_name', sa.String(length=255), nullable=True),
    sa.Column('facility_name', sa.String(length=255), nullable=False),
    sa.Column('average_daily_population', sa.Integer(), nullable=True),
    sa.Column('unsentenced_male_adp', sa.Integer(), nullable=True),
    sa.Column('unsentenced_female_adp', sa.Integer(), nullable=True),
    sa.Column('sentenced_male_adp', sa.Integer(), nullable=True),
    sa.Column('sentenced_female_adp', sa.Integer(), nullable=True),
    sa.CheckConstraint('LENGTH(fips) = 5', name='ca_facility_aggregate_fips_length_check'),
    sa.PrimaryKeyConstraint('record_id'),
    sa.UniqueConstraint('fips', 'facility_name', 'report_date', 'aggregation_window')
    )
    op.create_table('dc_facility_aggregate',
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.Column('fips', sa.String(length=5), nullable=False),
    sa.Column('report_date', sa.Date(), nullable=False),
    sa.Column('aggregation_window', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'YEARLY', name='time_granularity'), nullable=False),
    sa.Column('report_frequency', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'YEARLY', name='time_granularity'), nullable=False),
    sa.Column('facility_name', sa.String(length=255), nullable=False),
    sa.Column('total_population', sa.Integer(), nullable=True),
    sa.Column('male_population', sa.Integer(), nullable=True),
    sa.Column('female_population', sa.Integer(), nullable=True),
    sa.Column('stsf_male_population', sa.Integer(), nullable=True),
    sa.Column('stsf_female_population', sa.Integer(), nullable=True),
    sa.Column('usms_gb_male_population', sa.Integer(), nullable=True),
    sa.Column('usms_gb_female_population', sa.Integer(), nullable=True),
    sa.Column('juvenile_male_population', sa.Integer(), nullable=True),
    sa.Column('juvenile_female_population', sa.Integer(), nullable=True),
    sa.CheckConstraint('LENGTH(fips) = 5', name='dc_facility_aggregate_fips_length_check'),
    sa.PrimaryKeyConstraint('record_id'),
    sa.UniqueConstraint('fips', 'report_date', 'aggregation_window')
    )
    op.create_table('fl_county_aggregate',
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.Column('fips', sa.String(length=5), nullable=False),
    sa.Column('report_date', sa.Date(), nullable=False),
    sa.Column('aggregation_window', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'YEARLY', name='time_granularity'), nullable=False),
    sa.Column('report_frequency', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'YEARLY', name='time_granularity'), nullable=False),
    sa.Column('county_name', sa.String(length=255), nullable=False),
    sa.Column('county_population', sa.Integer(), nullable=True),
    sa.Column('average_daily_population', sa.Integer(), nullable=True),
    sa.Column('date_reported', sa.Date(), nullable=True),
    sa.CheckConstraint('LENGTH(fips) = 5', name='fl_county_aggregate_fips_length_check'),
    sa.PrimaryKeyConstraint('record_id'),
    sa.UniqueConstraint('fips', 'report_date', 'aggregation_window')
    )
    op.create_table('fl_facility_aggregate',
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.Column('fips', sa.String(length=5), nullable=False),
    sa.Column('report_date', sa.Date(), nullable=False),
    sa.Column('aggregation_window', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'YEARLY', name='time_granularity'), nullable=False),
    sa.Column('report_frequency', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'YEARLY', name='time_granularity'), nullable=False),
    sa.Column('facility_name', sa.String(length=255), nullable=False),
    sa.Column('average_daily_population', sa.Integer(), nullable=True),
    sa.Column('number_felony_pretrial', sa.Integer(), nullable=True),
    sa.Column('number_misdemeanor_pretrial', sa.Integer(), nullable=True),
    sa.CheckConstraint('LENGTH(fips) = 5', name='fl_facility_aggregate_fips_length_check'),
    sa.PrimaryKeyConstraint('record_id'),
    sa.UniqueConstraint('fips', 'facility_name', 'report_date', 'aggregation_window')
    )
    op.create_table('ga_county_aggregate',
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.Column('fips', sa.String(length=5), nullable=False),
    sa.Column('report_date', sa.Date(), nullable=False),
    sa.Column('aggregation_window', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'YEARLY', name='time_granularity'), nullable=False),
    sa.Column('report_frequency', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'YEARLY', name='time_granularity'), nullable=False),
    sa.Column('county_name', sa.String(length=255), nullable=False),
    sa.Column('total_number_of_inmates_in_jail', sa.Integer(), nullable=True),
    sa.Column('jail_capacity', sa.Integer(), nullable=True),
    sa.Column('number_of_inmates_sentenced_to_state', sa.Integer(), nullable=True),
    sa.Column('number_of_inmates_awaiting_trial', sa.Integer(), nullable=True),
    sa.Column('number_of_inmates_serving_county_sentence', sa.Integer(), nullable=True),
    sa.Column('number_of_other_inmates', sa.Integer(), nullable=True),
    sa.CheckConstraint('LENGTH(fips) = 5', name='ga_county_aggregate_fips_length_check'),
    sa.PrimaryKeyConstraint('record_id'),
    sa.UniqueConstraint('fips', 'report_date', 'aggregation_window')
    )
    op.create_table('hi_facility_aggregate',
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.Column('fips', sa.String(length=5), nullable=False),
    sa.Column('report_date', sa.Date(), nullable=False),
    sa.Column('aggregation_window', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'YEARLY', name='time_granularity'), nullable=False),
    sa.Column('report_frequency', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'YEARLY', name='time_granularity'), nullable=False),
    sa.Column('facility_name', sa.String(length=255), nullable=False),
    sa.Column('design_bed_capacity', sa.Integer(), nullable=True),
    sa.Column('operation_bed_capacity', sa.Integer(), nullable=True),
    sa.Column('total_population', sa.Integer(), nullable=True),
    sa.Column('male_population', sa.Integer(), nullable=True),
    sa.Column('female_population', sa.Integer(), nullable=True),
    sa.Column('sentenced_felony_male_population', sa.Integer(), nullable=True),
    sa.Column('sentenced_felony_female_population', sa.Integer(), nullable=True),
    sa.Column('sentenced_felony_probation_male_population', sa.Integer(), nullable=True),
    sa.Column('sentenced_felony_probation_female_population', sa.Integer(), nullable=True),
    sa.Column('sentenced_misdemeanor_male_population', sa.Integer(), nullable=True),
    sa.Column('sentenced_misdemeanor_female_population', sa.Integer(), nullable=True),
    sa.Column('pretrial_felony_male_population', sa.Integer(), nullable=True),
    sa.Column('pretrial_felony_female_population', sa.Integer(), nullable=True),
    sa.Column('pretrial_misdemeanor_male_population', sa.Integer(), nullable=True),
    sa.Column('pretrial_misdemeanor_female_population', sa.Integer(), nullable=True),
    sa.Column('held_for_other_jurisdiction_male_population', sa.Integer(), nullable=True),
    sa.Column('held_for_other_jurisdiction_female_population', sa.Integer(), nullable=True),
    sa.Column('parole_violation_male_population', sa.Integer(), nullable=True),
    sa.Column('parole_violation_female_population', sa.Integer(), nullable=True),
    sa.Column('probation_violation_male_population', sa.Integer(), nullable=True),
    sa.Column('probation_violation_female_population', sa.Integer(), nullable=True),
    sa.CheckConstraint('LENGTH(fips) = 5', name='hi_facility_aggregate_fips_length_check'),
    sa.PrimaryKeyConstraint('record_id'),
    sa.UniqueConstraint('fips', 'facility_name', 'report_date', 'aggregation_window')
    )
    op.create_table('ky_facility_aggregate',
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.Column('fips', sa.String(length=5), nullable=False),
    sa.Column('report_date', sa.Date(), nullable=False),
    sa.Column('aggregation_window', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'YEARLY', name='time_granularity'), nullable=False),
    sa.Column('report_frequency', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'YEARLY', name='time_granularity'), nullable=False),
    sa.Column('facility_name', sa.String(length=255), nullable=False),
    sa.Column('total_jail_beds', sa.Integer(), nullable=True),
    sa.Column('reported_population', sa.Integer(), nullable=True),
    sa.Column('male_population', sa.Integer(), nullable=True),
    sa.Column('female_population', sa.Integer(), nullable=True),
    sa.Column('class_d_male_population', sa.Integer(), nullable=True),
    sa.Column('class_d_female_population', sa.Integer(), nullable=True),
    sa.Column('community_custody_male_population', sa.Integer(), nullable=True),
    sa.Column('community_custody_female_population', sa.Integer(), nullable=True),
    sa.Column('alternative_sentence_male_population', sa.Integer(), nullable=True),
    sa.Column('alternative_sentence_female_population', sa.Integer(), nullable=True),
    sa.Column('controlled_intake_male_population', sa.Integer(), nullable=True),
    sa.Column('controlled_intake_female_population', sa.Integer(), nullable=True),
    sa.Column('parole_violators_male_population', sa.Integer(), nullable=True),
    sa.Column('parole_violators_female_population', sa.Integer(), nullable=True),
    sa.Column('federal_male_population', sa.Integer(), nullable=True),
    sa.Column('federal_female_population', sa.Integer(), nullable=True),
    sa.CheckConstraint('LENGTH(fips) = 5', name='ky_facility_aggregate_fips_length_check'),
    sa.PrimaryKeyConstraint('record_id'),
    sa.UniqueConstraint('fips', 'facility_name', 'report_date', 'aggregation_window')
    )
    op.create_table('ny_facility_aggregate',
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.Column('fips', sa.String(length=5), nullable=False),
    sa.Column('report_date', sa.Date(), nullable=False),
    sa.Column('aggregation_window', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'YEARLY', name='time_granularity'), nullable=False),
    sa.Column('report_frequency', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'YEARLY', name='time_granularity'), nullable=False),
    sa.Column('facility_name', sa.String(length=255), nullable=False),
    sa.Column('census', sa.Integer(), nullable=True),
    sa.Column('in_house', sa.Integer(), nullable=True),
    sa.Column('boarded_in', sa.Integer(), nullable=True),
    sa.Column('boarded_out', sa.Integer(), nullable=True),
    sa.Column('sentenced', sa.Integer(), nullable=True),
    sa.Column('civil', sa.Integer(), nullable=True),
    sa.Column('federal', sa.Integer(), nullable=True),
    sa.Column('technical_parole_violators', sa.Integer(), nullable=True),
    sa.Column('state_readies', sa.Integer(), nullable=True),
    sa.Column('other_unsentenced', sa.Integer(), nullable=True),
    sa.CheckConstraint('LENGTH(fips) = 5', name='ny_facility_aggregate_fips_length_check'),
    sa.PrimaryKeyConstraint('record_id'),
    sa.UniqueConstraint('fips', 'facility_name', 'report_date', 'aggregation_window')
    )
    op.create_table('pa_county_pre_sentenced_aggregate',
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.Column('fips', sa.String(length=5), nullable=False),
    sa.Column('report_date', sa.Date(), nullable=False),
    sa.Column('aggregation_window', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'YEARLY', name='time_granularity'), nullable=False),
    sa.Column('report_frequency', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'YEARLY', name='time_granularity'), nullable=False),
    sa.Column('county_name', sa.String(length=255), nullable=False),
    sa.Column('pre_sentenced_population', sa.Integer(), nullable=True),
    sa.CheckConstraint('LENGTH(fips) = 5', name='pa_county_pre_sentenced_aggregate_fips_length_check'),
    sa.PrimaryKeyConstraint('record_id'),
    sa.UniqueConstraint('fips', 'report_date', 'aggregation_window')
    )
    op.create_table('pa_facility_pop_aggregate',
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.Column('fips', sa.String(length=5), nullable=False),
    sa.Column('report_date', sa.Date(), nullable=False),
    sa.Column('aggregation_window', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'YEARLY', name='time_granularity'), nullable=False),
    sa.Column('report_frequency', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'YEARLY', name='time_granularity'), nullable=False),
    sa.Column('facility_name', sa.String(length=255), nullable=False),
    sa.Column('bed_capacity', sa.Integer(), nullable=True),
    sa.Column('work_release_community_corrections_beds', sa.Integer(), nullable=True),
    sa.Column('in_house_adp', sa.Integer(), nullable=True),
    sa.Column('housed_elsewhere_adp', sa.Integer(), nullable=True),
    sa.Column('work_release_adp', sa.Integer(), nullable=True),
    sa.Column('admissions', sa.Integer(), nullable=True),
    sa.Column('discharge', sa.Integer(), nullable=True),
    sa.CheckConstraint('LENGTH(fips) = 5', name='pa_facility_pop_aggregate_fips_length_check'),
    sa.PrimaryKeyConstraint('record_id'),
    sa.UniqueConstraint('fips', 'facility_name', 'report_date', 'aggregation_window')
    )
    op.create_table('person',
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('gender', sa.Enum('EXTERNAL_UNKNOWN', 'FEMALE', 'MALE', 'OTHER', 'TRANS', 'TRANS_FEMALE', 'TRANS_MALE', name='gender'), nullable=True),
    sa.Column('gender_raw_text', sa.String(length=255), nullable=True),
    sa.Column('race', sa.Enum('AMERICAN_INDIAN_ALASKAN_NATIVE', 'ASIAN', 'BLACK', 'EXTERNAL_UNKNOWN', 'NATIVE_HAWAIIAN_PACIFIC_ISLANDER', 'OTHER', 'WHITE', name='race'), nullable=True),
    sa.Column('race_raw_text', sa.String(length=255), nullable=True),
    sa.Column('ethnicity', sa.Enum('EXTERNAL_UNKNOWN', 'HISPANIC', 'NOT_HISPANIC', name='ethnicity'), nullable=True),
    sa.Column('ethnicity_raw_text', sa.String(length=255), nullable=True),
    sa.Column('residency_status', sa.Enum('HOMELESS', 'PERMANENT', 'TRANSIENT', name='residency_status'), nullable=True),
    sa.Column('resident_of_region', sa.Boolean(), nullable=True),
    sa.Column('region', sa.String(length=255), nullable=False),
    sa.Column('jurisdiction_id', sa.String(length=8), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('birthdate', sa.Date(), nullable=True),
    sa.Column('birthdate_inferred_from_age', sa.Boolean(), nullable=True),
    sa.CheckConstraint('LENGTH(jurisdiction_id) = 8', name='person_jurisdiction_id_length_check'),
    sa.PrimaryKeyConstraint('person_id')
    )
    op.create_index(op.f('ix_person_birthdate'), 'person', ['birthdate'], unique=False)
    op.create_index(op.f('ix_person_external_id'), 'person', ['external_id'], unique=False)
    op.create_index(op.f('ix_person_full_name'), 'person', ['full_name'], unique=False)
    op.create_index(op.f('ix_person_region'), 'person', ['region'], unique=False)
    op.create_table('scraper_success',
    sa.Column('scraper_success_id', sa.Integer(), nullable=False),
    sa.Column('jid', sa.String(length=8), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.CheckConstraint('LENGTH(jid) = 8', name='single_count_jid_length_check'),
    sa.PrimaryKeyConstraint('scraper_success_id')
    )
    op.create_table('single_count_aggregate',
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.Column('jid', sa.String(length=8), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('ethnicity', sa.Enum('EXTERNAL_UNKNOWN', 'HISPANIC', 'NOT_HISPANIC', name='ethnicity'), nullable=True),
    sa.Column('gender', sa.Enum('EXTERNAL_UNKNOWN', 'FEMALE', 'MALE', 'OTHER', 'TRANS', 'TRANS_FEMALE', 'TRANS_MALE', name='gender'), nullable=True),
    sa.Column('race', sa.Enum('AMERICAN_INDIAN_ALASKAN_NATIVE', 'ASIAN', 'BLACK', 'EXTERNAL_UNKNOWN', 'NATIVE_HAWAIIAN_PACIFIC_ISLANDER', 'OTHER', 'WHITE', name='race'), nullable=True),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.CheckConstraint('LENGTH(jid) = 8', name='single_count_jid_length_check'),
    sa.PrimaryKeyConstraint('record_id'),
    sa.UniqueConstraint('jid', 'date', 'ethnicity', 'gender', 'race')
    )
    op.create_table('tn_facility_aggregate',
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.Column('fips', sa.String(length=5), nullable=False),
    sa.Column('report_date', sa.Date(), nullable=False),
    sa.Column('aggregation_window', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'YEARLY', name='time_granularity'), nullable=False),
    sa.Column('report_frequency', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'YEARLY', name='time_granularity'), nullable=False),
    sa.Column('facility_name', sa.String(length=255), nullable=False),
    sa.Column('tdoc_backup_population', sa.Integer(), nullable=True),
    sa.Column('local_felons_population', sa.Integer(), nullable=True),
    sa.Column('other_convicted_felons_population', sa.Integer(), nullable=True),
    sa.Column('federal_and_other_population', sa.Integer(), nullable=True),
    sa.Column('convicted_misdemeanor_population', sa.Integer(), nullable=True),
    sa.Column('pretrial_felony_population', sa.Integer(), nullable=True),
    sa.Column('pretrial_misdemeanor_population', sa.Integer(), nullable=True),
    sa.Column('total_jail_population', sa.Integer(), nullable=True),
    sa.Column('total_beds', sa.Integer(), nullable=True),
    sa.CheckConstraint('LENGTH(fips) = 5', name='tn_facility_aggregate_fips_length_check'),
    sa.PrimaryKeyConstraint('record_id'),
    sa.UniqueConstraint('fips', 'facility_name', 'report_date', 'aggregation_window')
    )
    op.create_table('tn_facility_female_aggregate',
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.Column('fips', sa.String(length=5), nullable=False),
    sa.Column('report_date', sa.Date(), nullable=False),
    sa.Column('aggregation_window', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'YEARLY', name='time_granularity'), nullable=False),
    sa.Column('report_frequency', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'YEARLY', name='time_granularity'), nullable=False),
    sa.Column('facility_name', sa.String(length=255), nullable=False),
    sa.Column('tdoc_backup_population', sa.Integer(), nullable=True),
    sa.Column('local_felons_population', sa.Integer(), nullable=True),
    sa.Column('other_convicted_felons_population', sa.Integer(), nullable=True),
    sa.Column('federal_and_other_population', sa.Integer(), nullable=True),
    sa.Column('convicted_misdemeanor_population', sa.Integer(), nullable=True),
    sa.Column('pretrial_felony_population', sa.Integer(), nullable=True),
    sa.Column('pretrial_misdemeanor_population', sa.Integer(), nullable=True),
    sa.Column('female_jail_population', sa.Integer(), nullable=True),
    sa.Column('female_beds', sa.Integer(), nullable=True),
    sa.CheckConstraint('LENGTH(fips) = 5', name='tn_facility_aggregate_fips_length_check'),
    sa.PrimaryKeyConstraint('record_id'),
    sa.UniqueConstraint('fips', 'facility_name', 'report_date', 'aggregation_window')
    )
    op.create_table('tx_county_aggregate',
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.Column('fips', sa.String(length=5), nullable=False),
    sa.Column('report_date', sa.Date(), nullable=False),
    sa.Column('aggregation_window', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'YEARLY', name='time_granularity'), nullable=False),
    sa.Column('report_frequency', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', 'QUARTERLY', 'YEARLY', name='time_granularity'), nullable=False),
    sa.Column('facility_name', sa.String(length=255), nullable=False),
    sa.Column('pretrial_felons', sa.Integer(), nullable=True),
    sa.Column('convicted_felons', sa.Integer(), nullable=True),
    sa.Column('convicted_felons_sentenced_to_county_jail', sa.Integer(), nullable=True),
    sa.Column('parole_violators', sa.Integer(), nullable=True),
    sa.Column('parole_violators_with_new_charge', sa.Integer(), nullable=True),
    sa.Column('pretrial_misdemeanor', sa.Integer(), nullable=True),
    sa.Column('convicted_misdemeanor', sa.Integer(), nullable=True),
    sa.Column('bench_warrants', sa.Integer(), nullable=True),
    sa.Column('federal', sa.Integer(), nullable=True),
    sa.Column('pretrial_sjf', sa.Integer(), nullable=True),
    sa.Column('convicted_sjf_sentenced_to_county_jail', sa.Integer(), nullable=True),
    sa.Column('convicted_sjf_sentenced_to_state_jail', sa.Integer(), nullable=True),
    sa.Column('total_contract', sa.Integer(), nullable=True),
    sa.Column('total_population', sa.Integer(), nullable=True),
    sa.Column('total_other', sa.Integer(), nullable=True),
    sa.Column('total_capacity', sa.Integer(), nullable=True),
    sa.Column('available_beds', sa.Integer(), nullable=True),
    sa.CheckConstraint('LENGTH(fips) = 5', name='tx_county_aggregate_fips_length_check'),
    sa.PrimaryKeyConstraint('record_id'),
    sa.UniqueConstraint('fips', 'facility_name', 'report_date', 'aggregation_window')
    )
    op.create_table('booking',
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('admission_date', sa.Date(), nullable=True),
    sa.Column('admission_reason', sa.Enum('ESCAPE', 'NEW_COMMITMENT', 'PAROLE_VIOLATION', 'PROBATION_VIOLATION', 'SUPERVISION_VIOLATION_FOR_SEX_OFFENSE', 'TRANSFER', name='admission_reason'), nullable=True),
    sa.Column('admission_reason_raw_text', sa.String(length=255), nullable=True),
    sa.Column('admission_date_inferred', sa.Boolean(), nullable=True),
    sa.Column('release_date', sa.Date(), nullable=True),
    sa.Column('release_date_inferred', sa.Boolean(), nullable=True),
    sa.Column('projected_release_date', sa.Date(), nullable=True),
    sa.Column('release_reason', sa.Enum('ACQUITTAL', 'BOND', 'CASE_DISMISSED', 'DEATH', 'ESCAPE', 'EXPIRATION_OF_SENTENCE', 'EXTERNAL_UNKNOWN', 'OWN_RECOGNIZANCE', 'PAROLE', 'PROBATION', 'TRANSFER', name='release_reason'), nullable=True),
    sa.Column('release_reason_raw_text', sa.String(length=255), nullable=True),
    sa.Column('custody_status', sa.Enum('ESCAPED', 'HELD_ELSEWHERE', 'IN_CUSTODY', 'INFERRED_RELEASE', 'RELEASED', 'PRESENT_WITHOUT_INFO', 'REMOVED_WITHOUT_INFO', name='custody_status'), nullable=False),
    sa.Column('custody_status_raw_text', sa.String(length=255), nullable=True),
    sa.Column('facility', sa.String(length=255), nullable=True),
    sa.Column('classification', sa.Enum('EXTERNAL_UNKNOWN', 'HIGH', 'LOW', 'MAXIMUM', 'MEDIUM', 'MINIMUM', 'WORK_RELEASE', name='classification'), nullable=True),
    sa.Column('classification_raw_text', sa.String(length=255), nullable=True),
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.Column('last_seen_time', sa.DateTime(), nullable=False),
    sa.Column('first_seen_time', sa.DateTime(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['person_id'], ['person.person_id'], ),
    sa.PrimaryKeyConstraint('booking_id')
    )
    op.create_index(op.f('ix_booking_external_id'), 'booking', ['external_id'], unique=False)
    op.create_table('person_history',
    sa.Column('valid_from', sa.DateTime(), nullable=False),
    sa.Column('valid_to', sa.DateTime(), nullable=True),
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('gender', sa.Enum('EXTERNAL_UNKNOWN', 'FEMALE', 'MALE', 'OTHER', 'TRANS', 'TRANS_FEMALE', 'TRANS_MALE', name='gender'), nullable=True),
    sa.Column('gender_raw_text', sa.String(length=255), nullable=True),
    sa.Column('race', sa.Enum('AMERICAN_INDIAN_ALASKAN_NATIVE', 'ASIAN', 'BLACK', 'EXTERNAL_UNKNOWN', 'NATIVE_HAWAIIAN_PACIFIC_ISLANDER', 'OTHER', 'WHITE', name='race'), nullable=True),
    sa.Column('race_raw_text', sa.String(length=255), nullable=True),
    sa.Column('ethnicity', sa.Enum('EXTERNAL_UNKNOWN', 'HISPANIC', 'NOT_HISPANIC', name='ethnicity'), nullable=True),
    sa.Column('ethnicity_raw_text', sa.String(length=255), nullable=True),
    sa.Column('residency_status', sa.Enum('HOMELESS', 'PERMANENT', 'TRANSIENT', name='residency_status'), nullable=True),
    sa.Column('resident_of_region', sa.Boolean(), nullable=True),
    sa.Column('region', sa.String(length=255), nullable=False),
    sa.Column('jurisdiction_id', sa.String(length=8), nullable=False),
    sa.Column('person_history_id', sa.Integer(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.CheckConstraint('LENGTH(jurisdiction_id) = 8', name='person_history_jurisdiction_id_length_check'),
    sa.ForeignKeyConstraint(['person_id'], ['person.person_id'], ),
    sa.PrimaryKeyConstraint('person_history_id')
    )
    op.create_index(op.f('ix_person_history_external_id'), 'person_history', ['external_id'], unique=False)
    op.create_index(op.f('ix_person_history_person_id'), 'person_history', ['person_id'], unique=False)
    op.create_index(op.f('ix_person_history_region'), 'person_history', ['region'], unique=False)
    op.create_table('arrest',
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('arrest_date', sa.Date(), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('agency', sa.String(length=255), nullable=True),
    sa.Column('officer_name', sa.String(length=255), nullable=True),
    sa.Column('officer_id', sa.String(length=255), nullable=True),
    sa.Column('arrest_id', sa.Integer(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['booking.booking_id'], ),
    sa.PrimaryKeyConstraint('arrest_id')
    )
    op.create_index(op.f('ix_arrest_external_id'), 'arrest', ['external_id'], unique=False)
    op.create_table('bond',
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('amount_dollars', sa.Integer(), nullable=True),
    sa.Column('bond_type', sa.Enum('CASH', 'EXTERNAL_UNKNOWN', 'DENIED', 'NOT_REQUIRED', 'PARTIAL_CASH', 'SECURED', 'UNSECURED', name='bond_type'), nullable=True),
    sa.Column('bond_type_raw_text', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'POSTED', 'PRESENT_WITHOUT_INFO', 'REMOVED_WITHOUT_INFO', 'REVOKED', 'SET', name='bond_status'), nullable=False),
    sa.Column('status_raw_text', sa.String(length=255), nullable=True),
    sa.Column('bond_agent', sa.String(length=255), nullable=True),
    sa.Column('bond_id', sa.Integer(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['booking.booking_id'], initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('bond_id')
    )
    op.create_index(op.f('ix_bond_external_id'), 'bond', ['external_id'], unique=False)
    op.create_table('booking_history',
    sa.Column('valid_from', sa.DateTime(), nullable=False),
    sa.Column('valid_to', sa.DateTime(), nullable=True),
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('admission_date', sa.Date(), nullable=True),
    sa.Column('admission_reason', sa.Enum('ESCAPE', 'NEW_COMMITMENT', 'PAROLE_VIOLATION', 'PROBATION_VIOLATION', 'SUPERVISION_VIOLATION_FOR_SEX_OFFENSE', 'TRANSFER', name='admission_reason'), nullable=True),
    sa.Column('admission_reason_raw_text', sa.String(length=255), nullable=True),
    sa.Column('admission_date_inferred', sa.Boolean(), nullable=True),
    sa.Column('release_date', sa.Date(), nullable=True),
    sa.Column('release_date_inferred', sa.Boolean(), nullable=True),
    sa.Column('projected_release_date', sa.Date(), nullable=True),
    sa.Column('release_reason', sa.Enum('ACQUITTAL', 'BOND', 'CASE_DISMISSED', 'DEATH', 'ESCAPE', 'EXPIRATION_OF_SENTENCE', 'EXTERNAL_UNKNOWN', 'OWN_RECOGNIZANCE', 'PAROLE', 'PROBATION', 'TRANSFER', name='release_reason'), nullable=True),
    sa.Column('release_reason_raw_text', sa.String(length=255), nullable=True),
    sa.Column('custody_status', sa.Enum('ESCAPED', 'HELD_ELSEWHERE', 'IN_CUSTODY', 'INFERRED_RELEASE', 'RELEASED', 'PRESENT_WITHOUT_INFO', 'REMOVED_WITHOUT_INFO', name='custody_status'), nullable=False),
    sa.Column('custody_status_raw_text', sa.String(length=255), nullable=True),
    sa.Column('facility', sa.String(length=255), nullable=True),
    sa.Column('classification', sa.Enum('EXTERNAL_UNKNOWN', 'HIGH', 'LOW', 'MAXIMUM', 'MEDIUM', 'MINIMUM', 'WORK_RELEASE', name='classification'), nullable=True),
    sa.Column('classification_raw_text', sa.String(length=255), nullable=True),
    sa.Column('booking_history_id', sa.Integer(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['booking.booking_id'], ),
    sa.ForeignKeyConstraint(['person_id'], ['person.person_id'], ),
    sa.PrimaryKeyConstraint('booking_history_id')
    )
    op.create_index(op.f('ix_booking_history_booking_id'), 'booking_history', ['booking_id'], unique=False)
    op.create_index(op.f('ix_booking_history_external_id'), 'booking_history', ['external_id'], unique=False)
    op.create_table('hold',
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('jurisdiction_name', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'INFERRED_DROPPED', 'PRESENT_WITHOUT_INFO', 'REMOVED_WITHOUT_INFO', name='hold_status'), nullable=False),
    sa.Column('status_raw_text', sa.String(length=255), nullable=True),
    sa.Column('hold_id', sa.Integer(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['booking.booking_id'], ),
    sa.PrimaryKeyConstraint('hold_id')
    )
    op.create_index(op.f('ix_hold_external_id'), 'hold', ['external_id'], unique=False)
    op.create_table('sentence',
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('COMMUTED', 'COMPLETED', 'SERVING', 'PRESENT_WITHOUT_INFO', 'REMOVED_WITHOUT_INFO', name='sentence_status'), nullable=False),
    sa.Column('status_raw_text', sa.String(length=255), nullable=True),
    sa.Column('sentencing_region', sa.String(length=255), nullable=True),
    sa.Column('min_length_days', sa.Integer(), nullable=True),
    sa.Column('max_length_days', sa.Integer(), nullable=True),
    sa.Column('date_imposed', sa.Date(), nullable=True),
    sa.Column('completion_date', sa.Date(), nullable=True),
    sa.Column('projected_completion_date', sa.Date(), nullable=True),
    sa.Column('is_life', sa.Boolean(), nullable=True),
    sa.Column('is_probation', sa.Boolean(), nullable=True),
    sa.Column('is_suspended', sa.Boolean(), nullable=True),
    sa.Column('fine_dollars', sa.Integer(), nullable=True),
    sa.Column('parole_possible', sa.Boolean(), nullable=True),
    sa.Column('post_release_supervision_length_days', sa.Integer(), nullable=True),
    sa.Column('sentence_id', sa.Integer(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['booking.booking_id'], initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('sentence_id')
    )
    op.create_index(op.f('ix_sentence_external_id'), 'sentence', ['external_id'], unique=False)
    op.create_table('arrest_history',
    sa.Column('valid_from', sa.DateTime(), nullable=False),
    sa.Column('valid_to', sa.DateTime(), nullable=True),
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('arrest_date', sa.Date(), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('agency', sa.String(length=255), nullable=True),
    sa.Column('officer_name', sa.String(length=255), nullable=True),
    sa.Column('officer_id', sa.String(length=255), nullable=True),
    sa.Column('arrest_history_id', sa.Integer(), nullable=False),
    sa.Column('arrest_id', sa.Integer(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['arrest_id'], ['arrest.arrest_id'], ),
    sa.ForeignKeyConstraint(['booking_id'], ['booking.booking_id'], ),
    sa.PrimaryKeyConstraint('arrest_history_id')
    )
    op.create_index(op.f('ix_arrest_history_arrest_id'), 'arrest_history', ['arrest_id'], unique=False)
    op.create_index(op.f('ix_arrest_history_external_id'), 'arrest_history', ['external_id'], unique=False)
    op.create_table('bond_history',
    sa.Column('valid_from', sa.DateTime(), nullable=False),
    sa.Column('valid_to', sa.DateTime(), nullable=True),
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('amount_dollars', sa.Integer(), nullable=True),
    sa.Column('bond_type', sa.Enum('CASH', 'EXTERNAL_UNKNOWN', 'DENIED', 'NOT_REQUIRED', 'PARTIAL_CASH', 'SECURED', 'UNSECURED', name='bond_type'), nullable=True),
    sa.Column('bond_type_raw_text', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'POSTED', 'PRESENT_WITHOUT_INFO', 'REMOVED_WITHOUT_INFO', 'REVOKED', 'SET', name='bond_status'), nullable=False),
    sa.Column('status_raw_text', sa.String(length=255), nullable=True),
    sa.Column('bond_agent', sa.String(length=255), nullable=True),
    sa.Column('bond_history_id', sa.Integer(), nullable=False),
    sa.Column('bond_id', sa.Integer(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['bond_id'], ['bond.bond_id'], ),
    sa.ForeignKeyConstraint(['booking_id'], ['booking.booking_id'], initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('bond_history_id')
    )
    op.create_index(op.f('ix_bond_history_bond_id'), 'bond_history', ['bond_id'], unique=False)
    op.create_index(op.f('ix_bond_history_external_id'), 'bond_history', ['external_id'], unique=False)
    op.create_table('charge',
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('offense_date', sa.Date(), nullable=True),
    sa.Column('statute', sa.String(length=255), nullable=True),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('attempted', sa.Boolean(), nullable=True),
    sa.Column('degree', sa.Enum('EXTERNAL_UNKNOWN', 'FIRST', 'FOURTH', 'SECOND', 'THIRD', name='degree'), nullable=True),
    sa.Column('degree_raw_text', sa.String(length=255), nullable=True),
    sa.Column('class', sa.Enum('CIVIL', 'EXTERNAL_UNKNOWN', 'FELONY', 'INFRACTION', 'MISDEMEANOR', 'OTHER', 'PAROLE_VIOLATION', 'PROBATION_VIOLATION', 'SUPERVISION_VIOLATION_FOR_SEX_OFFENSE', name='charge_class'), nullable=True),
    sa.Column('class_raw_text', sa.String(length=255), nullable=True),
    sa.Column('level', sa.String(length=255), nullable=True),
    sa.Column('fee_dollars', sa.Integer(), nullable=True),
    sa.Column('charging_entity', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('ACQUITTED', 'COMPLETED_SENTENCE', 'CONVICTED', 'DROPPED', 'INFERRED_DROPPED', 'EXTERNAL_UNKNOWN', 'PENDING', 'PRETRIAL', 'SENTENCED', 'PRESENT_WITHOUT_INFO', 'REMOVED_WITHOUT_INFO', name='charge_status'), nullable=False),
    sa.Column('status_raw_text', sa.String(length=255), nullable=True),
    sa.Column('court_type', sa.String(length=255), nullable=True),
    sa.Column('case_number', sa.String(length=255), nullable=True),
    sa.Column('next_court_date', sa.Date(), nullable=True),
    sa.Column('judge_name', sa.String(length=255), nullable=True),
    sa.Column('charge_notes', sa.Text(), nullable=True),
    sa.Column('charge_id', sa.Integer(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.Column('bond_id', sa.Integer(), nullable=True),
    sa.Column('sentence_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['bond_id'], ['bond.bond_id'], ),
    sa.ForeignKeyConstraint(['booking_id'], ['booking.booking_id'], ),
    sa.ForeignKeyConstraint(['sentence_id'], ['sentence.sentence_id'], ),
    sa.PrimaryKeyConstraint('charge_id')
    )
    op.create_index(op.f('ix_charge_external_id'), 'charge', ['external_id'], unique=False)
    op.create_table('hold_history',
    sa.Column('valid_from', sa.DateTime(), nullable=False),
    sa.Column('valid_to', sa.DateTime(), nullable=True),
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('jurisdiction_name', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'INFERRED_DROPPED', 'PRESENT_WITHOUT_INFO', 'REMOVED_WITHOUT_INFO', name='hold_status'), nullable=False),
    sa.Column('status_raw_text', sa.String(length=255), nullable=True),
    sa.Column('hold_history_id', sa.Integer(), nullable=False),
    sa.Column('hold_id', sa.Integer(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['booking.booking_id'], ),
    sa.ForeignKeyConstraint(['hold_id'], ['hold.hold_id'], ),
    sa.PrimaryKeyConstraint('hold_history_id')
    )
    op.create_index(op.f('ix_hold_history_external_id'), 'hold_history', ['external_id'], unique=False)
    op.create_index(op.f('ix_hold_history_hold_id'), 'hold_history', ['hold_id'], unique=False)
    op.create_table('sentence_history',
    sa.Column('valid_from', sa.DateTime(), nullable=False),
    sa.Column('valid_to', sa.DateTime(), nullable=True),
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('COMMUTED', 'COMPLETED', 'SERVING', 'PRESENT_WITHOUT_INFO', 'REMOVED_WITHOUT_INFO', name='sentence_status'), nullable=False),
    sa.Column('status_raw_text', sa.String(length=255), nullable=True),
    sa.Column('sentencing_region', sa.String(length=255), nullable=True),
    sa.Column('min_length_days', sa.Integer(), nullable=True),
    sa.Column('max_length_days', sa.Integer(), nullable=True),
    sa.Column('date_imposed', sa.Date(), nullable=True),
    sa.Column('completion_date', sa.Date(), nullable=True),
    sa.Column('projected_completion_date', sa.Date(), nullable=True),
    sa.Column('is_life', sa.Boolean(), nullable=True),
    sa.Column('is_probation', sa.Boolean(), nullable=True),
    sa.Column('is_suspended', sa.Boolean(), nullable=True),
    sa.Column('fine_dollars', sa.Integer(), nullable=True),
    sa.Column('parole_possible', sa.Boolean(), nullable=True),
    sa.Column('post_release_supervision_length_days', sa.Integer(), nullable=True),
    sa.Column('sentence_history_id', sa.Integer(), nullable=False),
    sa.Column('sentence_id', sa.Integer(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['booking.booking_id'], initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['sentence_id'], ['sentence.sentence_id'], ),
    sa.PrimaryKeyConstraint('sentence_history_id')
    )
    op.create_index(op.f('ix_sentence_history_external_id'), 'sentence_history', ['external_id'], unique=False)
    op.create_index(op.f('ix_sentence_history_sentence_id'), 'sentence_history', ['sentence_id'], unique=False)
    op.create_table('sentence_relationship',
    sa.Column('type', sa.Enum('CONCURRENT', 'CONSECUTIVE', name='sentence_relationship_type'), nullable=False),
    sa.Column('sentence_relation_type_raw_text', sa.String(length=255), nullable=True),
    sa.Column('sentence_relationship_id', sa.Integer(), nullable=False),
    sa.Column('sentence_a_id', sa.Integer(), nullable=False),
    sa.Column('sentence_b_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['sentence_a_id'], ['sentence.sentence_id'], ),
    sa.ForeignKeyConstraint(['sentence_b_id'], ['sentence.sentence_id'], ),
    sa.PrimaryKeyConstraint('sentence_relationship_id')
    )
    op.create_table('charge_history',
    sa.Column('valid_from', sa.DateTime(), nullable=False),
    sa.Column('valid_to', sa.DateTime(), nullable=True),
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('offense_date', sa.Date(), nullable=True),
    sa.Column('statute', sa.String(length=255), nullable=True),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('attempted', sa.Boolean(), nullable=True),
    sa.Column('degree', sa.Enum('EXTERNAL_UNKNOWN', 'FIRST', 'FOURTH', 'SECOND', 'THIRD', name='degree'), nullable=True),
    sa.Column('degree_raw_text', sa.String(length=255), nullable=True),
    sa.Column('class', sa.Enum('CIVIL', 'EXTERNAL_UNKNOWN', 'FELONY', 'INFRACTION', 'MISDEMEANOR', 'OTHER', 'PAROLE_VIOLATION', 'PROBATION_VIOLATION', 'SUPERVISION_VIOLATION_FOR_SEX_OFFENSE', name='charge_class'), nullable=True),
    sa.Column('class_raw_text', sa.String(length=255), nullable=True),
    sa.Column('level', sa.String(length=255), nullable=True),
    sa.Column('fee_dollars', sa.Integer(), nullable=True),
    sa.Column('charging_entity', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('ACQUITTED', 'COMPLETED_SENTENCE', 'CONVICTED', 'DROPPED', 'INFERRED_DROPPED', 'EXTERNAL_UNKNOWN', 'PENDING', 'PRETRIAL', 'SENTENCED', 'PRESENT_WITHOUT_INFO', 'REMOVED_WITHOUT_INFO', name='charge_status'), nullable=False),
    sa.Column('status_raw_text', sa.String(length=255), nullable=True),
    sa.Column('court_type', sa.String(length=255), nullable=True),
    sa.Column('case_number', sa.String(length=255), nullable=True),
    sa.Column('next_court_date', sa.Date(), nullable=True),
    sa.Column('judge_name', sa.String(length=255), nullable=True),
    sa.Column('charge_notes', sa.Text(), nullable=True),
    sa.Column('charge_history_id', sa.Integer(), nullable=False),
    sa.Column('charge_id', sa.Integer(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.Column('bond_id', sa.Integer(), nullable=True),
    sa.Column('sentence_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['bond_id'], ['bond.bond_id'], ),
    sa.ForeignKeyConstraint(['booking_id'], ['booking.booking_id'], ),
    sa.ForeignKeyConstraint(['charge_id'], ['charge.charge_id'], ),
    sa.ForeignKeyConstraint(['sentence_id'], ['sentence.sentence_id'], ),
    sa.PrimaryKeyConstraint('charge_history_id')
    )
    op.create_index(op.f('ix_charge_history_charge_id'), 'charge_history', ['charge_id'], unique=False)
    op.create_index(op.f('ix_charge_history_external_id'), 'charge_history', ['external_id'], unique=False)
    op.create_table('sentence_relationship_history',
    sa.Column('valid_from', sa.DateTime(), nullable=False),
    sa.Column('valid_to', sa.DateTime(), nullable=True),
    sa.Column('type', sa.Enum('CONCURRENT', 'CONSECUTIVE', name='sentence_relationship_type'), nullable=False),
    sa.Column('sentence_relation_type_raw_text', sa.String(length=255), nullable=True),
    sa.Column('sentence_relationship_history_id', sa.Integer(), nullable=False),
    sa.Column('sentence_relationship_id', sa.Integer(), nullable=False),
    sa.Column('sentence_a_id', sa.Integer(), nullable=False),
    sa.Column('sentence_b_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['sentence_a_id'], ['sentence.sentence_id'], ),
    sa.ForeignKeyConstraint(['sentence_b_id'], ['sentence.sentence_id'], ),
    sa.ForeignKeyConstraint(['sentence_relationship_id'], ['sentence_relationship.sentence_relationship_id'], ),
    sa.PrimaryKeyConstraint('sentence_relationship_history_id')
    )
    op.create_index(op.f('ix_sentence_relationship_history_sentence_relationship_id'), 'sentence_relationship_history', ['sentence_relationship_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_sentence_relationship_history_sentence_relationship_id'), table_name='sentence_relationship_history')
    op.drop_table('sentence_relationship_history')
    op.drop_index(op.f('ix_charge_history_external_id'), table_name='charge_history')
    op.drop_index(op.f('ix_charge_history_charge_id'), table_name='charge_history')
    op.drop_table('charge_history')
    op.drop_table('sentence_relationship')
    op.drop_index(op.f('ix_sentence_history_sentence_id'), table_name='sentence_history')
    op.drop_index(op.f('ix_sentence_history_external_id'), table_name='sentence_history')
    op.drop_table('sentence_history')
    op.drop_index(op.f('ix_hold_history_hold_id'), table_name='hold_history')
    op.drop_index(op.f('ix_hold_history_external_id'), table_name='hold_history')
    op.drop_table('hold_history')
    op.drop_index(op.f('ix_charge_external_id'), table_name='charge')
    op.drop_table('charge')
    op.drop_index(op.f('ix_bond_history_external_id'), table_name='bond_history')
    op.drop_index(op.f('ix_bond_history_bond_id'), table_name='bond_history')
    op.drop_table('bond_history')
    op.drop_index(op.f('ix_arrest_history_external_id'), table_name='arrest_history')
    op.drop_index(op.f('ix_arrest_history_arrest_id'), table_name='arrest_history')
    op.drop_table('arrest_history')
    op.drop_index(op.f('ix_sentence_external_id'), table_name='sentence')
    op.drop_table('sentence')
    op.drop_index(op.f('ix_hold_external_id'), table_name='hold')
    op.drop_table('hold')
    op.drop_index(op.f('ix_booking_history_external_id'), table_name='booking_history')
    op.drop_index(op.f('ix_booking_history_booking_id'), table_name='booking_history')
    op.drop_table('booking_history')
    op.drop_index(op.f('ix_bond_external_id'), table_name='bond')
    op.drop_table('bond')
    op.drop_index(op.f('ix_arrest_external_id'), table_name='arrest')
    op.drop_table('arrest')
    op.drop_index(op.f('ix_person_history_region'), table_name='person_history')
    op.drop_index(op.f('ix_person_history_person_id'), table_name='person_history')
    op.drop_index(op.f('ix_person_history_external_id'), table_name='person_history')
    op.drop_table('person_history')
    op.drop_index(op.f('ix_booking_external_id'), table_name='booking')
    op.drop_table('booking')
    op.drop_table('tx_county_aggregate')
    op.drop_table('tn_facility_female_aggregate')
    op.drop_table('tn_facility_aggregate')
    op.drop_table('single_count_aggregate')
    op.drop_table('scraper_success')
    op.drop_index(op.f('ix_person_region'), table_name='person')
    op.drop_index(op.f('ix_person_full_name'), table_name='person')
    op.drop_index(op.f('ix_person_external_id'), table_name='person')
    op.drop_index(op.f('ix_person_birthdate'), table_name='person')
    op.drop_table('person')
    op.drop_table('pa_facility_pop_aggregate')
    op.drop_table('pa_county_pre_sentenced_aggregate')
    op.drop_table('ny_facility_aggregate')
    op.drop_table('ky_facility_aggregate')
    op.drop_table('hi_facility_aggregate')
    op.drop_table('ga_county_aggregate')
    op.drop_table('fl_facility_aggregate')
    op.drop_table('fl_county_aggregate')
    op.drop_table('dc_facility_aggregate')
    op.drop_table('ca_facility_aggregate')

    op.execute('DROP TYPE sentence_relationship_type;')
    op.execute('DROP TYPE charge_status;')
    op.execute('DROP TYPE charge_class;')
    op.execute('DROP TYPE degree;')
    op.execute('DROP TYPE sentence_status;')
    op.execute('DROP TYPE hold_status;')
    op.execute('DROP TYPE bond_status;')
    op.execute('DROP TYPE bond_type;')
    op.execute('DROP TYPE classification;')
    op.execute('DROP TYPE custody_status;')
    op.execute('DROP TYPE release_reason;')
    op.execute('DROP TYPE admission_reason;')
    op.execute('DROP TYPE residency_status;')
    op.execute('DROP TYPE ethnicity;')
    op.execute('DROP TYPE race;')
    op.execute('DROP TYPE gender;')
    op.execute('DROP TYPE time_granularity;')
    # ### end Alembic commands ###
