"""update_aggregate_tables_with_unique

Revision ID: 12cd53d9fd86
Revises: ea570e281cc0
Create Date: 2019-02-06 17:52:43.066328

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '12cd53d9fd86'
down_revision = 'ea570e281cc0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ca_facility_aggregate',
    sa.Column('record_id', sa.Integer(), nullable=False),
    sa.Column('fips', sa.String(length=255), nullable=False),
    sa.Column('report_date', sa.Date(), nullable=False),
    # Set as string to force alembic to stop trying to re-create the enum
    # Will migrate to enum separately
    sa.Column('report_granularity', sa.String(length=255), nullable=False),
    sa.Column('jurisdiction_name', sa.String(length=255), nullable=True),
    sa.Column('facility_name', sa.String(length=255), nullable=True),
    sa.Column('average_daily_population', sa.String(length=255), nullable=True),
    sa.Column('unsentenced_male_adp', sa.String(length=255), nullable=True),
    sa.Column('unsentenced_female_adp', sa.String(length=255), nullable=True),
    sa.Column('sentenced_male_adp', sa.String(length=255), nullable=True),
    sa.Column('sentenced_female_adp', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('record_id'),
    sa.UniqueConstraint('fips', 'facility_name', 'report_date', 'report_granularity')
    )
    op.alter_column('dc_facility_aggregate', 'facility_name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('dc_facility_aggregate', 'fips',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('dc_facility_aggregate', 'report_date',
               existing_type=sa.DATE(),
               nullable=False)
    op.alter_column('dc_facility_aggregate', 'report_granularity',
               existing_type=postgresql.ENUM('DAILY', 'WEEKLY', 'MONTHLY', name='report_granularity'),
               nullable=False)
    op.alter_column('fl_county_aggregate', 'county_name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('fl_county_aggregate', 'fips',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('fl_county_aggregate', 'report_date',
               existing_type=sa.DATE(),
               nullable=False)
    op.alter_column('fl_county_aggregate', 'report_granularity',
               existing_type=postgresql.ENUM('DAILY', 'WEEKLY', 'MONTHLY', name='report_granularity'),
               nullable=False)
    op.alter_column('fl_facility_aggregate', 'facility_name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('fl_facility_aggregate', 'fips',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('fl_facility_aggregate', 'report_date',
               existing_type=sa.DATE(),
               nullable=False)
    op.alter_column('fl_facility_aggregate', 'report_granularity',
               existing_type=postgresql.ENUM('DAILY', 'WEEKLY', 'MONTHLY', name='report_granularity'),
               nullable=False)
    op.drop_constraint('fl_facility_aggregate_fips_report_date_report_granularity_key', 'fl_facility_aggregate', type_='unique')
    op.create_unique_constraint(None, 'fl_facility_aggregate', ['fips', 'facility_name', 'report_date', 'report_granularity'])
    op.alter_column('ga_county_aggregate', 'county_name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('ga_county_aggregate', 'fips',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('ga_county_aggregate', 'report_date',
               existing_type=sa.DATE(),
               nullable=False)
    op.alter_column('ga_county_aggregate', 'report_granularity',
               existing_type=postgresql.ENUM('DAILY', 'WEEKLY', 'MONTHLY', name='report_granularity'),
               nullable=False)
    op.alter_column('hi_facility_aggregate', 'facility_name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('hi_facility_aggregate', 'fips',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('hi_facility_aggregate', 'report_date',
               existing_type=sa.DATE(),
               nullable=False)
    op.alter_column('hi_facility_aggregate', 'report_granularity',
               existing_type=postgresql.ENUM('DAILY', 'WEEKLY', 'MONTHLY', name='report_granularity'),
               nullable=False)
    op.drop_constraint('hi_facility_aggregate_fips_report_date_report_granularity_key', 'hi_facility_aggregate', type_='unique')
    op.create_unique_constraint(None, 'hi_facility_aggregate', ['fips', 'facility_name', 'report_date', 'report_granularity'])
    op.alter_column('ky_county_aggregate', 'facility_name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('ky_county_aggregate', 'fips',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('ky_county_aggregate', 'report_date',
               existing_type=sa.DATE(),
               nullable=False)
    op.alter_column('ky_county_aggregate', 'report_granularity',
               existing_type=postgresql.ENUM('DAILY', 'WEEKLY', 'MONTHLY', name='report_granularity'),
               nullable=False)
    op.drop_constraint('ky_county_aggregate_fips_report_date_report_granularity_key', 'ky_county_aggregate', type_='unique')
    op.create_unique_constraint(None, 'ky_county_aggregate', ['fips', 'facility_name', 'report_date', 'report_granularity'])
    op.alter_column('ny_facility_aggregate', 'facility_name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('ny_facility_aggregate', 'fips',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('ny_facility_aggregate', 'report_date',
               existing_type=sa.DATE(),
               nullable=False)
    op.alter_column('ny_facility_aggregate', 'report_granularity',
               existing_type=postgresql.ENUM('DAILY', 'WEEKLY', 'MONTHLY', name='report_granularity'),
               nullable=False)
    op.drop_constraint('ny_facility_aggregate_fips_report_date_report_granularity_key', 'ny_facility_aggregate', type_='unique')
    op.create_unique_constraint(None, 'ny_facility_aggregate', ['fips', 'facility_name', 'report_date', 'report_granularity'])
    op.create_index(op.f('ix_person_history_external_id'), 'person_history', ['external_id'], unique=False)
    op.create_index(op.f('ix_person_history_region'), 'person_history', ['region'], unique=False)
    op.add_column('tx_county_aggregate', sa.Column('facility_name', sa.String(length=255), nullable=False))
    op.alter_column('tx_county_aggregate', 'fips',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('tx_county_aggregate', 'report_date',
               existing_type=sa.DATE(),
               nullable=False)
    op.alter_column('tx_county_aggregate', 'report_granularity',
               existing_type=postgresql.ENUM('DAILY', 'WEEKLY', 'MONTHLY', name='report_granularity'),
               nullable=False)
    op.drop_constraint('tx_county_aggregate_fips_report_date_report_granularity_key', 'tx_county_aggregate', type_='unique')
    op.create_unique_constraint(None, 'tx_county_aggregate', ['fips', 'facility_name', 'report_date', 'report_granularity'])
    op.drop_column('tx_county_aggregate', 'county_name')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tx_county_aggregate', sa.Column('county_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'tx_county_aggregate', type_='unique')
    op.create_unique_constraint('tx_county_aggregate_fips_report_date_report_granularity_key', 'tx_county_aggregate', ['fips', 'report_date', 'report_granularity'])
    op.alter_column('tx_county_aggregate', 'report_granularity',
               existing_type=postgresql.ENUM('DAILY', 'WEEKLY', 'MONTHLY', name='report_granularity'),
               nullable=True)
    op.alter_column('tx_county_aggregate', 'report_date',
               existing_type=sa.DATE(),
               nullable=True)
    op.alter_column('tx_county_aggregate', 'fips',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_column('tx_county_aggregate', 'facility_name')
    op.drop_index(op.f('ix_person_history_region'), table_name='person_history')
    op.drop_index(op.f('ix_person_history_external_id'), table_name='person_history')
    op.drop_constraint(None, 'ny_facility_aggregate', type_='unique')
    op.create_unique_constraint('ny_facility_aggregate_fips_report_date_report_granularity_key', 'ny_facility_aggregate', ['fips', 'report_date', 'report_granularity'])
    op.alter_column('ny_facility_aggregate', 'report_granularity',
               existing_type=postgresql.ENUM('DAILY', 'WEEKLY', 'MONTHLY', name='report_granularity'),
               nullable=True)
    op.alter_column('ny_facility_aggregate', 'report_date',
               existing_type=sa.DATE(),
               nullable=True)
    op.alter_column('ny_facility_aggregate', 'fips',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('ny_facility_aggregate', 'facility_name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_constraint(None, 'ky_county_aggregate', type_='unique')
    op.create_unique_constraint('ky_county_aggregate_fips_report_date_report_granularity_key', 'ky_county_aggregate', ['fips', 'report_date', 'report_granularity'])
    op.alter_column('ky_county_aggregate', 'report_granularity',
               existing_type=postgresql.ENUM('DAILY', 'WEEKLY', 'MONTHLY', name='report_granularity'),
               nullable=True)
    op.alter_column('ky_county_aggregate', 'report_date',
               existing_type=sa.DATE(),
               nullable=True)
    op.alter_column('ky_county_aggregate', 'fips',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('ky_county_aggregate', 'facility_name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_constraint(None, 'hi_facility_aggregate', type_='unique')
    op.create_unique_constraint('hi_facility_aggregate_fips_report_date_report_granularity_key', 'hi_facility_aggregate', ['fips', 'report_date', 'report_granularity'])
    op.alter_column('hi_facility_aggregate', 'report_granularity',
               existing_type=postgresql.ENUM('DAILY', 'WEEKLY', 'MONTHLY', name='report_granularity'),
               nullable=True)
    op.alter_column('hi_facility_aggregate', 'report_date',
               existing_type=sa.DATE(),
               nullable=True)
    op.alter_column('hi_facility_aggregate', 'fips',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('hi_facility_aggregate', 'facility_name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('ga_county_aggregate', 'report_granularity',
               existing_type=postgresql.ENUM('DAILY', 'WEEKLY', 'MONTHLY', name='report_granularity'),
               nullable=True)
    op.alter_column('ga_county_aggregate', 'report_date',
               existing_type=sa.DATE(),
               nullable=True)
    op.alter_column('ga_county_aggregate', 'fips',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('ga_county_aggregate', 'county_name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_constraint(None, 'fl_facility_aggregate', type_='unique')
    op.create_unique_constraint('fl_facility_aggregate_fips_report_date_report_granularity_key', 'fl_facility_aggregate', ['fips', 'report_date', 'report_granularity'])
    op.alter_column('fl_facility_aggregate', 'report_granularity',
               existing_type=postgresql.ENUM('DAILY', 'WEEKLY', 'MONTHLY', name='report_granularity'),
               nullable=True)
    op.alter_column('fl_facility_aggregate', 'report_date',
               existing_type=sa.DATE(),
               nullable=True)
    op.alter_column('fl_facility_aggregate', 'fips',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('fl_facility_aggregate', 'facility_name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('fl_county_aggregate', 'report_granularity',
               existing_type=postgresql.ENUM('DAILY', 'WEEKLY', 'MONTHLY', name='report_granularity'),
               nullable=True)
    op.alter_column('fl_county_aggregate', 'report_date',
               existing_type=sa.DATE(),
               nullable=True)
    op.alter_column('fl_county_aggregate', 'fips',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('fl_county_aggregate', 'county_name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('dc_facility_aggregate', 'report_granularity',
               existing_type=postgresql.ENUM('DAILY', 'WEEKLY', 'MONTHLY', name='report_granularity'),
               nullable=True)
    op.alter_column('dc_facility_aggregate', 'report_date',
               existing_type=sa.DATE(),
               nullable=True)
    op.alter_column('dc_facility_aggregate', 'fips',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('dc_facility_aggregate', 'facility_name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_table('ca_facility_aggregate')
    # ### end Alembic commands ###
