# yaml-language-server: $schema=./../../../ingest_mappings/yaml_schema/1.0.0/schema.json
manifest_language: 1.0.0
input_columns:
  SentenceId: STRING
  OffenderId: STRING
  CountyId: STRING
  SentenceDate: DATE
  EffectiveDate: DATE
  SentenceOrderTypeCode: STRING
  EndDate: DATE
  SentenceOrderEventTypeName: STRING
  Sequence: STRING
  ChargeId: STRING
  relationships: STRING
  SegmentMaxYears: STRING
  SegmentMaxMonths: STRING
  SegmentMaxDays: STRING
  SegmentSatisfactionDate: DATE
  SegmentStartDate: DATE
  SegmentYears: STRING
  SegmentMonths: STRING
  SegmentDays: STRING
  OffenseSentenceTypeId: STRING
  SentenceStatusId: STRING
  OffenseSortingOrder: STRING
unused_columns: []
output:
  StatePerson:
    external_ids:
      - StatePersonExternalId:
          external_id: OffenderId
          id_type: $literal("US_IX_DOC")
    supervision_sentences:
      - StateSupervisionSentence:
          external_id:
            $concat:
              $values:
                - OffenderId # Enforced to never be null in query
                - SentenceId # Never null in scl_Sentence table
          county_code: CountyId #  County code
          projected_completion_date: EndDate
          completion_date: SegmentSatisfactionDate # UPDATED: field found
          effective_date: # UPDATED: now uses this date from scl_SentenceDetail when available, but nearly always the same as EffectiveDate on the SentenceOrder anyways
            $conditional:
              - $if:
                  $custom:
                    $function: us_ix_custom_parsers.is_valid_year
                    $args:
                      segment_start_date: SegmentStartDate
                $then: SegmentStartDate
              - $else: EffectiveDate
          status:
            # UPDATED: this uses either sentence order type code, or the sentence status (so either on the sentence order level or the offense sentence level)
            $conditional:
              - $if:
                  $equal:
                    - SentenceOrderTypeCode
                    - $literal("B") # Suspended sentence
                $then:
                  # using an enum mapping instead of an enum literal to preserve raw text just in case
                  $enum_mapping:
                    $raw_text: SentenceOrderTypeCode
                    $mappings:
                      # What is the difference between suspended and revoked for Idaho? Do we see suspended sentences for revocations?
                      StateSentenceStatus.SUSPENDED:
                        - "B" # Suspended sentence
              - $else:
                  $enum_mapping: # UPDATE: Now uses SentenceStatusId (which is at the sentence level) instead
                    $raw_text: SentenceStatusId
                    $mappings:
                      StateSentenceStatus.SERVING:
                        - "531" # Active
                      StateSentenceStatus.COMPLETED:
                        - "535" # Satisfied
          date_imposed: SentenceDate
          supervision_type: $literal_enum(StateSupervisionSentenceSupervisionType.PROBATION)
          is_life: # UPDATED: now uses OffenseSentenceTypeId though Idaho warns of data quality issues with life sentences rn
            $in:
              $value: OffenseSentenceTypeId
              $options:
                - $literal("3")
                - $literal("2")
          max_length_days: # UPDATED: now on the sentence level
            $conditional:
              - $if:
                  $or:
                    - $not_null: SegmentMaxYears
                    - $not_null: SegmentMaxMonths
                    - $not_null: SegmentMaxDays
                $then:
                  $custom:
                    $function: us_ix_custom_parsers.max_and_min_lengths_days
                    $args:
                      years_str: SegmentMaxYears
                      months_str: SegmentMaxMonths
                      days_str: SegmentMaxDays
          min_length_days: # UPDATED: now on the sentence level
            $conditional:
              - $if:
                  $or:
                    - $not_null: SegmentYears
                    - $not_null: SegmentMonths
                    - $not_null: SegmentDays
                $then:
                  $custom:
                    $function: us_ix_custom_parsers.max_and_min_lengths_days
                    $args:
                      years_str: SegmentYears
                      months_str: SegmentMonths
                      days_str: SegmentDays
          sentence_metadata:
            $json_dict:
              sentence_event_type: SentenceOrderEventTypeName
              sentence_sequence:
                $concat:
                  $values:
                    - ChargeId
                    - Sequence
                    - OffenseSortingOrder
              relationships: relationships
