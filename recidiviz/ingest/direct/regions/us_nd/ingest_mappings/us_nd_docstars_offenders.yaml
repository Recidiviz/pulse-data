# yaml-language-server: $schema=./../../../ingest_mappings/yaml_schema/1.0.0/schema.json
manifest_language: 1.0.0
input_columns:
  SID: STRING
  ITAGROOT_ID: STRING
  LAST_NAME: STRING
  FIRST: STRING
  MIDDLE: STRING
  ADDRESS: STRING
  CITY: STRING
  STATE: STRING
  ZIP: STRING
  DOB: STRING
  AGENT: STRING
  SUP_LVL: STRING
  SUPER_OVERRIDE: STRING
  PREVIOUS_AGENT: STRING
  RECORD_STATUS: STRING
  COMPLETION_IND: STRING
  ALIASFLAG: STRING
  ADDRESS2: STRING
  CITY2: STRING
  STATE2: STRING
  ZIP2: STRING
  SITEID: STRING
  ABSCONDER: STRING
  SEXOFF: STRING
  GOODTIMEDATE: STRING
  RACE: STRING
  SEX: STRING
  C_MARITAL: STRING
  D_DEP: STRING
  E_LIV_ARR: STRING
  F_VETERAN: STRING
  G_INCOME: STRING
  H_EMPLOY: STRING
  I_JOB_CL: STRING
  J_LAST_GR: STRING
  K_PUB_ASST: STRING
  INACTIVEDATE: STRING
  BIGSIXT1: STRING
  BIGSIXT2: STRING
  BIGSIXT3: STRING
  BIGSIXT4: STRING
  BIGSIXT5: STRING
  BIGSIXT6: STRING
  ACTIVEREVOCATION_IND: STRING
  LSITOTAL: STRING
  CCCFLAG: STRING
  RecDate: STRING
  SORAC_SCORE: STRING
  HOMELESS: STRING
  CREATED_BY: STRING
  RECORDCRDATE: STRING
  LAST_HOME_VISIT: STRING
  LAST_FACE_TO_FACE: STRING
  MAILING_ADDRESS2: STRING
  PHYSICAL_ADDRESS2: STRING
  COUNTY_RESIDENCE: STRING
  EARLY_TERMINATION_DATE: STRING
  EARLY_TERMINATION_ACKNOWLEDGED: STRING
  EMAIL: STRING
  # TODO(#2227) Either append to address string or create dedicated field on state_person
unused_columns:
  - SEXOFF
  - SUP_LVL # Unused, for now.
  - SUPER_OVERRIDE # Unused, for now.
  - AGENT
  - PREVIOUS_AGENT
  - RECORD_STATUS # No apparent use for these at the moment
  - ALIASFLAG # More detailed alias data in the Alias file
  - ADDRESS2 # Not storing multiple addresses in our schema
  - CITY2 # Not storing multiple addresses in our schema
  - STATE2 # Not storing multiple addresses in our schema
  - ZIP2 # Not storing multiple addresses in our schema
  - MAILING_ADDRESS2 # Not storing multiple addresses in our schema
  - PHYSICAL_ADDRESS2 # Not storing multiple addresses in our schema
  - SITEID # Unused, we pull this from the officer instead
  - ABSCONDER
  - GOODTIMEDATE
  - C_MARITAL
  - D_DEP
  - E_LIV_ARR
  - F_VETERAN
  - G_INCOME
  - H_EMPLOY
  - I_JOB_CL
  - J_LAST_GR
  - K_PUB_ASST
  - INACTIVEDATE # No longer in use within source
  - LSITOTAL # We receive detailed LSIR info from LSI Chronology
  - BIGSIXT1 # We receive detailed LSIR info from LSI Chronology
  - BIGSIXT2 # We receive detailed LSIR info from LSI Chronology
  - BIGSIXT3 # We receive detailed LSIR info from LSI Chronology
  - BIGSIXT4 # We receive detailed LSIR info from LSI Chronology
  - BIGSIXT5 # We receive detailed LSIR info from LSI Chronology
  - BIGSIXT6 # We receive detailed LSIR info from LSI Chronology
  - ACTIVEREVOCATION_IND
  - CCCFLAG
  - RecDate # No apparent use for these at the moment
  - CREATED_BY # No apparent use for these at the moment
  - RECORDCRDATE # No apparent use for these at the moment
  - LAST_HOME_VISIT
  - LAST_FACE_TO_FACE
  # TODO(#2227) Either append to address string or create dedicated field on state_person
  - COUNTY_RESIDENCE
  - COMPLETION_IND
  - EARLY_TERMINATION_DATE
  - EARLY_TERMINATION_ACKNOWLEDGED
  - HOMELESS
  - SORAC_SCORE
output:
  StatePerson:
    external_ids:
      - StatePersonExternalId:
          external_id: SID
          id_type: $literal("US_ND_SID")
      - $conditional:
          - $if:
              $not_null: ITAGROOT_ID
            $then:
              StatePersonExternalId:
                external_id: ITAGROOT_ID
                id_type: $literal("US_ND_ELITE")
    full_name:
      $person_name:
        $given_names: FIRST
        $middle_names: MIDDLE
        $surname: LAST_NAME
    aliases:
      - StatePersonAlias:
          full_name:
            $person_name:
              $given_names: FIRST
              $middle_names: MIDDLE
              $surname: LAST_NAME
          alias_type: $literal_enum(StatePersonAliasType.GIVEN_NAME)
    current_address:
      $conditional:
        - $if:
            $not_null: ADDRESS
          $then:
            $physical_address:
              $address_1: ADDRESS
              $city: CITY
              $state: STATE
              $zip: ZIP
    birthdate: DOB
    gender:
      $enum_mapping:
        $raw_text: SEX
        $mappings:
          StateGender.MALE: "1"
          StateGender.FEMALE: "2"
    residency_status:
      $enum_mapping:
        $raw_text: ADDRESS
        $custom_parser: us_nd_custom_enum_parsers.parse_residency_status_from_address
    current_email_address: EMAIL
    races:
      - StatePersonRace:
          race:
            $enum_mapping:
              $raw_text: RACE
              $mappings:
                StateRace.WHITE: "1"
                StateRace.BLACK: "2"
                StateRace.AMERICAN_INDIAN_ALASKAN_NATIVE: "3"
                StateRace.ASIAN: "4"
                StateRace.NATIVE_HAWAIIAN_PACIFIC_ISLANDER: "6"
              $ignore:
                - "5" # Hispanic
    ethnicities:
      - StatePersonEthnicity:
          # There are not separate ethnicity fields in DOCR files. Rather, it is included under race fields. Thus, we look for race
          # fields with specific values that indicate a Hispanic ethnicity.
          ethnicity:
            $enum_mapping:
              $raw_text: RACE
              $mappings:
                StateEthnicity.HISPANIC: "5"
              $ignore:
                # These are race values - ignore when mapping to ethnicity.
                - "1"
                - "2"
                - "3"
                - "4"
                - "6"
