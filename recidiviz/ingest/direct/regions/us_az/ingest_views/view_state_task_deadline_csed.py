# Recidiviz - a data platform for criminal justice reform
# Copyright (C) 2024 Recidiviz, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
# =============================================================================
"""Query containing CSED dates for people who are incarcerated and are eligible for 
community supervision. 

The due date field contains the person's community supervision end date. If a person
has a CSED and later does not, the due date will be cleared from this table.
"""

from recidiviz.ingest.direct.views.direct_ingest_view_query_builder import (
    DirectIngestViewQueryBuilder,
)
from recidiviz.utils.environment import GCP_PROJECT_STAGING
from recidiviz.utils.metadata import local_project_id_override

VIEW_QUERY_TEMPLATE = """
WITH 
-- Collect Community Supervision End Dates assigned to each person over time. Filter
-- values that are invalid, and prioritize manual entries over autogenerated fields.
base AS (
  SELECT DISTINCT
    PERSON_ID,
    DOC_ID,
    FINAL_OFFENSE_ID,
    SC_EPISODE_ID,
    task_subtype,
    -- Filter out invalid date values
    IF(cs_end_date BETWEEN '1900-01-01' AND '2100-01-01', cs_end_date, NULL) AS cs_end_date,
    update_datetime,
    FROM (
      SELECT DISTINCT 
      -- There are three fields for every date entered in AZ_DOC_SC_OFFENSE, which 
      -- must be prioritzed in this order: 
      --  1. Manual Lock (Entered manually by an officer)
      --  2. Adjusted Release Date (Calculated by ACIS to avoid releases falling on holidays and weekends)
      --  3. Original release date, no suffix (Calculated by ACIS without adjustments)
        CAST(COALESCE(
          COMMUNITY_SUPV_END_DTM_ML,
          COMMUNITY_SUPV_END_DTM_ARD, 
          COMMUNITY_SUPV_END_DTM) AS DATETIME) AS cs_end_date,
        CAST(COALESCE(
          off.UPDT_DTM_ML, 
          off.UPDT_DTM_ARD, 
          off.UPDT_DTM) AS DATETIME) AS update_datetime,
        ep.PERSON_ID,
        ep.DOC_ID,
        sc.FINAL_OFFENSE_ID,
        sc.SC_EPISODE_ID,
        'Community Supervision End Date' AS task_subtype
      FROM {AZ_DOC_SC_OFFENSE@ALL} off
      JOIN {AZ_DOC_SC_EPISODE} sc
        ON(sc.FINAL_OFFENSE_ID = off.OFFENSE_ID)
      JOIN {DOC_EPISODE} ep
        USING(DOC_ID)
    )
), 
-- There are a number of instances where a release date is tracked in the system as 
-- having changed 2 or 3 times at the exact same time. We deduplicate those rows
-- deterministically and maintain the latest release date associated with each 
-- update_datetime. 
dedup_base AS (
  SELECT DISTINCT
      PERSON_ID,
      DOC_ID,
      FINAL_OFFENSE_ID,
      SC_EPISODE_ID,
      task_subtype,
      MAX(cs_end_date) OVER (PARTITION BY PERSON_ID, DOC_ID, SC_EPISODE_ID, FINAL_OFFENSE_ID, update_datetime) AS cs_end_date,
      update_datetime,
  FROM base
)

-- Maintain rows where the CSED changed; discard the rest. 
SELECT 
  * EXCEPT (prev_cs_end_date)
FROM (
  SELECT DISTINCT
    PERSON_ID,
    DOC_ID,
    FINAL_OFFENSE_ID,
    SC_EPISODE_ID,
    task_subtype,
    cs_end_date,
    update_datetime,
      LAG(cs_end_date) OVER (
        PARTITION BY PERSON_ID, DOC_ID, FINAL_OFFENSE_ID 
        ORDER BY update_datetime) AS prev_cs_end_date
  FROM dedup_base 
) sub
-- if release date changed, add a row to the ledger
WHERE 
  cs_end_date IS DISTINCT FROM prev_cs_end_date
"""

VIEW_BUILDER = DirectIngestViewQueryBuilder(
    region="us_az",
    ingest_view_name="state_task_deadline_csed",
    view_query_template=VIEW_QUERY_TEMPLATE,
)

if __name__ == "__main__":
    with local_project_id_override(GCP_PROJECT_STAGING):
        VIEW_BUILDER.build_and_print()
